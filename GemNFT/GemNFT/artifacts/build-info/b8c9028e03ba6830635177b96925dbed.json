{
	"id": "b8c9028e03ba6830635177b96925dbed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"GemNFT/ERC721Dynmic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\n\ncontract DynamicNFT is ERC721URIStorage {\n\n    \n\n     string[] IpfsUri = [\n        \"https://api.npoint.io/2367a54a38c79bbe9a95\",\n        \"https://api.npoint.io/6bdca0b1ab9c55094110\",\n        \"https://api.npoint.io/2367a54a38c79bbe9a95\"\n  ];\n\n    constructor() ERC721(\"Gem NFT\", \"GEMNFT\") {\n        \n    }\n\n    function safeMint(address to, uint256 tokenId, string memory uri) public {\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    }\n\n    \n\n    function changeUri(uint id,uint i) public {\n        _setTokenURI(id, IpfsUri[i]);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 197,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 199,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 217,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 197,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 199,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 217,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1336,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200a480da076eec4db2bd6f92844cf6f373e13d24bef485919490955bcb4a63d2664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200a480da076eec4db2bd6f92844cf6f373e13d24bef485919490955bcb4a63d2664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP BASEFEE 0xD LOG0 PUSH23 0xEEC4DB2BD6F92844CF6F373E13D24BEF485919490955BC 0xB4 0xA6 RETURNDATASIZE 0x26 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "220:2559:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200a480da076eec4db2bd6f92844cf6f373e13d24bef485919490955bcb4a63d2664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP BASEFEE 0xD LOG0 PUSH23 0xEEC4DB2BD6F92844CF6F373E13D24BEF485919490955BC 0xB4 0xA6 RETURNDATASIZE 0x26 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "220:2559:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a480da076eec4db2bd6f92844cf6f373e13d24bef485919490955bcb4a63d2664736f6c63430008190033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GemNFT/ERC721Dynmic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204f4d9e9b21d7c5d45eccc9e681ac71768b8a5c060b9381d4ed78d5593a34f89764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204f4d9e9b21d7c5d45eccc9e681ac71768b8a5c060b9381d4ed78d5593a34f89764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0x4D SWAP15 SWAP12 0x21 0xD7 0xC5 0xD4 MCOPY 0xCC 0xC9 0xE6 DUP2 0xAC PUSH18 0x768B8A5C060B9381D4ED78D5593A34F89764 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "202:12582:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204f4d9e9b21d7c5d45eccc9e681ac71768b8a5c060b9381d4ed78d5593a34f89764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0x4D SWAP15 SWAP12 0x21 0xD7 0xC5 0xD4 MCOPY 0xCC 0xC9 0xE6 DUP2 0xAC PUSH18 0x768B8A5C060B9381D4ED78D5593A34F89764 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "202:12582:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f4d9e9b21d7c5d45eccc9e681ac71768b8a5c060b9381d4ed78d5593a34f89764736f6c63430008190033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GemNFT/ERC721Dynmic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208316c4e457fff6b43c6aee063fd4a66127c3625fea017cfd78f4b7a8e6c45fca64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208316c4e457fff6b43c6aee063fd4a66127c3625fea017cfd78f4b7a8e6c45fca64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 AND 0xC4 0xE4 JUMPI SELFDESTRUCT 0xF6 0xB4 EXTCODECOPY PUSH11 0xEE063FD4A66127C3625FEA ADD PUSH29 0xFD78F4B7A8E6C45FCA64736F6C63430008190033000000000000000000 ",
							"sourceMap": "215:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208316c4e457fff6b43c6aee063fd4a66127c3625fea017cfd78f4b7a8e6c45fca64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 AND 0xC4 0xE4 JUMPI SELFDESTRUCT 0xF6 0xB4 EXTCODECOPY PUSH11 0xEE063FD4A66127C3625FEA ADD PUSH29 0xFD78F4B7A8E6C45FCA64736F6C63430008190033000000000000000000 ",
							"sourceMap": "215:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208316c4e457fff6b43c6aee063fd4a66127c3625fea017cfd78f4b7a8e6c45fca64736f6c63430008190033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GemNFT/ERC721Dynmic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GemNFT/ERC721Dynmic.sol": {
				"DynamicNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "changeUri",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GemNFT/ERC721Dynmic.sol\":138:697  contract DynamicNFT is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"GemNFT/ERC721Dynmic.sol\":192:377  string[] IpfsUri = [... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_abbb6250c0c0ef97a0d5865f4d95250e6a163c7dd92f6c2f933aa2d824a5e939\n  0x2a\n  swap2\n  codecopy\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_b87b14083892e557ac644ed6f47814fe3071fe6952c548d24de97e8cf93cb194\n  0x2a\n  swap2\n  codecopy\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_abbb6250c0c0ef97a0d5865f4d95250e6a163c7dd92f6c2f933aa2d824a5e939\n  0x2a\n  swap2\n  codecopy\n  dup2\n  mstore\n  pop\n  0x07\n  swap1\n  0x03\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"GemNFT/ERC721Dynmic.sol\":384:442  constructor() ERC721(\"Gem NFT\", \"GEMNFT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x47656d204e465400000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x47454d4e46540000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"GemNFT/ERC721Dynmic.sol\":138:697  contract DynamicNFT is ERC721URIStorage {... */\n  jump(tag_11)\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_13:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_14\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  dup2\n  tag_15\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_15:\n  pop\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_13)\ntag_14:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n  swap1\n  jump\t// out\ntag_17:\ntag_18:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  dup2\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  0x01\n  add\n  jump(tag_18)\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_21:\n  pop\n  dup1\n  sload\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  0x00\n  dup3\n  sstore\n  dup1\n  0x1f\n  lt\n  tag_25\n  jumpi\n  pop\n  jump(tag_24)\ntag_25:\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap1\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\ntag_24:\n  pop\n  jump\t// out\ntag_27:\ntag_28:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_29\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_28)\ntag_29:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_30:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_31:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_32:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_23:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_54:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_56\n  tag_32\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":714:798   */\ntag_55:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_33:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_34:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_35:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_36:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_61\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_35\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1429:1468   */\n  tag_62\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_35\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_37:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_38:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_39:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_66\n    /* \"#utility.yul\":1818:1852   */\n  tag_67\n    /* \"#utility.yul\":1827:1851   */\n  tag_68\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_37\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1818:1852   */\n  tag_38\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1800:1853   */\n  tag_37\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_40:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_41:\n    /* \"#utility.yul\":2056:2095   */\n  tag_71\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_39\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2208   */\n  tag_72\n    /* \"#utility.yul\":2166:2207   */\n  tag_73\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_40\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_36\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_42:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_43:\n    /* \"#utility.yul\":2377:2409   */\n  tag_76\n  tag_42\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2418:2483   */\n  tag_77\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_41\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_44:\n    /* \"#utility.yul\":2555:2675   */\ntag_79:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_82\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_43\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_79)\ntag_81:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_45:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_85\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_33\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2906:2935   */\n  tag_86\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_87:\n    /* \"#utility.yul\":3133:3213   */\n  tag_88\n    /* \"#utility.yul\":3189:3211   */\n  tag_89\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_34\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_84:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_46:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_47:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_92\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_46\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_48:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_94\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_96\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_98\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4038:4094   */\ntag_97:\n    /* \"#utility.yul\":4118:4156   */\n  tag_99\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_23\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4203:4270   */\n  tag_100\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_45\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_103:\n    /* \"#utility.yul\":5144:5211   */\n  tag_104\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_48\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_101)\n    /* \"#utility.yul\":4365:4983   */\ntag_102:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_105\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_33\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_106:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_106)\ntag_108:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_110\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_109:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_101:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"GemNFT/ERC721Dynmic.sol\":138:697  contract DynamicNFT is ERC721URIStorage {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_abbb6250c0c0ef97a0d5865f4d95250e6a163c7dd92f6c2f933aa2d824a5e939 68747470733a2f2f6170692e6e706f696e742e696f2f3233363761353461333863373962626539613935\ndata_b87b14083892e557ac644ed6f47814fe3071fe6952c548d24de97e8cf93cb194 68747470733a2f2f6170692e6e706f696e742e696f2f3662646361306231616239633535303934313130\n\nsub_0: assembly {\n        /* \"GemNFT/ERC721Dynmic.sol\":138:697  contract DynamicNFT is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcd279c7c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x870b1e89\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GemNFT/ERC721Dynmic.sol\":608:695  function changeUri(uint id,uint i) public {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GemNFT/ERC721Dynmic.sol\":448:596  function safeMint(address to, uint256 tokenId, string memory uri) public {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GemNFT/ERC721Dynmic.sol\":608:695  function changeUri(uint id,uint i) public {... */\n    tag_61:\n        /* \"GemNFT/ERC721Dynmic.sol\":660:688  _setTokenURI(id, IpfsUri[i]) */\n      tag_124\n        /* \"GemNFT/ERC721Dynmic.sol\":673:675  id */\n      dup3\n        /* \"GemNFT/ERC721Dynmic.sol\":677:684  IpfsUri */\n      0x07\n        /* \"GemNFT/ERC721Dynmic.sol\":685:686  i */\n      dup4\n        /* \"GemNFT/ERC721Dynmic.sol\":677:687  IpfsUri[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"GemNFT/ERC721Dynmic.sol\":660:688  _setTokenURI(id, IpfsUri[i]) */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_92\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_92\n      jump\t// in\n    tag_130:\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"GemNFT/ERC721Dynmic.sol\":660:672  _setTokenURI */\n      tag_134\n        /* \"GemNFT/ERC721Dynmic.sol\":660:688  _setTokenURI(id, IpfsUri[i]) */\n      jump\t// in\n    tag_124:\n        /* \"GemNFT/ERC721Dynmic.sol\":608:695  function changeUri(uint id,uint i) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_92\n      jump\t// in\n    tag_136:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_92\n      jump\t// in\n    tag_137:\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_44\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_92\n      jump\t// in\n    tag_151:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_92\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_149)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_160\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_149)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_149:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GemNFT/ERC721Dynmic.sol\":448:596  function safeMint(address to, uint256 tokenId, string memory uri) public {... */\n    tag_80:\n        /* \"GemNFT/ERC721Dynmic.sol\":531:553  _safeMint(to, tokenId) */\n      tag_165\n        /* \"GemNFT/ERC721Dynmic.sol\":541:543  to */\n      dup4\n        /* \"GemNFT/ERC721Dynmic.sol\":545:552  tokenId */\n      dup4\n        /* \"GemNFT/ERC721Dynmic.sol\":531:540  _safeMint */\n      tag_166\n        /* \"GemNFT/ERC721Dynmic.sol\":531:553  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_165:\n        /* \"GemNFT/ERC721Dynmic.sol\":563:589  _setTokenURI(tokenId, uri) */\n      tag_167\n        /* \"GemNFT/ERC721Dynmic.sol\":576:583  tokenId */\n      dup3\n        /* \"GemNFT/ERC721Dynmic.sol\":585:588  uri */\n      dup3\n        /* \"GemNFT/ERC721Dynmic.sol\":563:575  _setTokenURI */\n      tag_134\n        /* \"GemNFT/ERC721Dynmic.sol\":563:589  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_167:\n        /* \"GemNFT/ERC721Dynmic.sol\":448:596  function safeMint(address to, uint256 tokenId, string memory uri) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_170\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      0x01\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_208\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_213\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_212)\n    tag_213:\n      0x60\n      swap2\n      pop\n    tag_212:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_222:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_224\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_225)\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_228\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_235\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap3\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_254\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n    tag_256:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_259\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":659:670  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":785:791  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":777:792  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":769:775  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":758:793  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:831  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":990:998  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":978:983  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":964:967  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      dup2\n      tag_262\n      jumpi\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n    tag_262:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1077:1078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1068:1073  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1068:1078  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_260\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1113:1126  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_271\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_272\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_274\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10211:10225  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10228:10229  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10211:10229  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10284  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10272  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10313:10321  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_278\n      jumpi\n      tag_279\n      tag_264\n      jump\t// in\n    tag_279:\n    tag_278:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_281\n      jumpi\n      tag_282\n      tag_264\n      jump\t// in\n    tag_282:\n    tag_281:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_284\n      jumpi\n      tag_285\n      tag_264\n      jump\t// in\n    tag_285:\n    tag_284:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_287\n      jumpi\n      tag_288\n      tag_264\n      jump\t// in\n    tag_288:\n    tag_287:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_290\n      jumpi\n      tag_291\n      tag_264\n      jump\t// in\n    tag_291:\n    tag_290:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_293\n      jumpi\n      tag_294\n      tag_264\n      jump\t// in\n    tag_294:\n    tag_293:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11035:11048  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_302:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_303:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_304:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_305:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_306:\n        /* \"#utility.yul\":561:584   */\n      tag_365\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_305\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_366:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_307:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_368\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_306\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_371\n      tag_303\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":833:952   */\n    tag_370:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_372\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_307\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_308:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_309:\n        /* \"#utility.yul\":1268:1289   */\n      tag_375\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_308\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_377\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_309\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_310:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_311:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_312:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_313:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_314:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_383\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_310\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2222:2293   */\n      tag_384\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_311\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_385\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_312\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2392:2421   */\n      tag_386\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_313\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_30:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_388\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_314\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_315:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_316:\n        /* \"#utility.yul\":2909:2933   */\n      tag_391\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_315\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_392:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_317:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_394\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_316\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_33:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_397\n      tag_303\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3185:3304   */\n    tag_396:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_398\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_317\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_318:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_319:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_401\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_318\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_320:\n        /* \"#utility.yul\":3765:3789   */\n      tag_403\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_319\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_36:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_405\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_320\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_321:\n        /* \"#utility.yul\":4103:4127   */\n      tag_407\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_319\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_408:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_322:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_410\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_321\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_39:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_413\n      tag_303\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4396:4515   */\n    tag_412:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_414\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_322\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_415\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_317\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_43:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_418\n      tag_303\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4893:5012   */\n    tag_417:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_419\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_322\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_420\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_322\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_421\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_317\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_54:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_424\n      tag_303\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5484:5603   */\n    tag_423:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_425\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_322\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_323:\n        /* \"#utility.yul\":5830:5854   */\n      tag_427\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_315\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_57:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_429\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_323\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6569   */\n    tag_60:\n        /* \"#utility.yul\":6163:6169   */\n      0x00\n        /* \"#utility.yul\":6171:6177   */\n      dup1\n        /* \"#utility.yul\":6220:6222   */\n      0x40\n        /* \"#utility.yul\":6208:6217   */\n      dup4\n        /* \"#utility.yul\":6199:6206   */\n      dup6\n        /* \"#utility.yul\":6195:6218   */\n      sub\n        /* \"#utility.yul\":6191:6223   */\n      slt\n        /* \"#utility.yul\":6188:6307   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":6226:6305   */\n      tag_432\n      tag_303\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6188:6307   */\n    tag_431:\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6371:6424   */\n      tag_433\n        /* \"#utility.yul\":6416:6423   */\n      dup6\n        /* \"#utility.yul\":6407:6413   */\n      dup3\n        /* \"#utility.yul\":6396:6405   */\n      dup7\n        /* \"#utility.yul\":6392:6414   */\n      add\n        /* \"#utility.yul\":6371:6424   */\n      tag_317\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6361:6424   */\n      swap3\n      pop\n        /* \"#utility.yul\":6317:6434   */\n      pop\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6499:6552   */\n      tag_434\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_317\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6489:6552   */\n      swap2\n      pop\n        /* \"#utility.yul\":6444:6562   */\n      pop\n        /* \"#utility.yul\":6095:6569   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6575:6691   */\n    tag_324:\n        /* \"#utility.yul\":6645:6666   */\n      tag_436\n        /* \"#utility.yul\":6660:6665   */\n      dup2\n        /* \"#utility.yul\":6645:6666   */\n      tag_308\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6638:6643   */\n      dup2\n        /* \"#utility.yul\":6635:6667   */\n      eq\n        /* \"#utility.yul\":6625:6685   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":6681:6682   */\n      0x00\n        /* \"#utility.yul\":6678:6679   */\n      dup1\n        /* \"#utility.yul\":6671:6683   */\n      revert\n        /* \"#utility.yul\":6625:6685   */\n    tag_437:\n        /* \"#utility.yul\":6575:6691   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6697:6830   */\n    tag_325:\n        /* \"#utility.yul\":6740:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6784   */\n      dup2\n        /* \"#utility.yul\":6765:6785   */\n      calldataload\n        /* \"#utility.yul\":6756:6785   */\n      swap1\n      pop\n        /* \"#utility.yul\":6794:6824   */\n      tag_439\n        /* \"#utility.yul\":6818:6823   */\n      dup2\n        /* \"#utility.yul\":6794:6824   */\n      tag_324\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6697:6830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6836:7304   */\n    tag_67:\n        /* \"#utility.yul\":6901:6907   */\n      0x00\n        /* \"#utility.yul\":6909:6915   */\n      dup1\n        /* \"#utility.yul\":6958:6960   */\n      0x40\n        /* \"#utility.yul\":6946:6955   */\n      dup4\n        /* \"#utility.yul\":6937:6944   */\n      dup6\n        /* \"#utility.yul\":6933:6956   */\n      sub\n        /* \"#utility.yul\":6929:6961   */\n      slt\n        /* \"#utility.yul\":6926:7045   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":6964:7043   */\n      tag_442\n      tag_303\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6926:7045   */\n    tag_441:\n        /* \"#utility.yul\":7084:7085   */\n      0x00\n        /* \"#utility.yul\":7109:7162   */\n      tag_443\n        /* \"#utility.yul\":7154:7161   */\n      dup6\n        /* \"#utility.yul\":7145:7151   */\n      dup3\n        /* \"#utility.yul\":7134:7143   */\n      dup7\n        /* \"#utility.yul\":7130:7152   */\n      add\n        /* \"#utility.yul\":7109:7162   */\n      tag_322\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7099:7162   */\n      swap3\n      pop\n        /* \"#utility.yul\":7055:7172   */\n      pop\n        /* \"#utility.yul\":7211:7213   */\n      0x20\n        /* \"#utility.yul\":7237:7287   */\n      tag_444\n        /* \"#utility.yul\":7279:7286   */\n      dup6\n        /* \"#utility.yul\":7270:7276   */\n      dup3\n        /* \"#utility.yul\":7259:7268   */\n      dup7\n        /* \"#utility.yul\":7255:7277   */\n      add\n        /* \"#utility.yul\":7237:7287   */\n      tag_325\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7227:7287   */\n      swap2\n      pop\n        /* \"#utility.yul\":7182:7297   */\n      pop\n        /* \"#utility.yul\":6836:7304   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7310:7427   */\n    tag_326:\n        /* \"#utility.yul\":7419:7420   */\n      0x00\n        /* \"#utility.yul\":7416:7417   */\n      dup1\n        /* \"#utility.yul\":7409:7421   */\n      revert\n        /* \"#utility.yul\":7433:7550   */\n    tag_327:\n        /* \"#utility.yul\":7542:7543   */\n      0x00\n        /* \"#utility.yul\":7539:7540   */\n      dup1\n        /* \"#utility.yul\":7532:7544   */\n      revert\n        /* \"#utility.yul\":7556:7736   */\n    tag_258:\n        /* \"#utility.yul\":7604:7681   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7601:7602   */\n      0x00\n        /* \"#utility.yul\":7594:7682   */\n      mstore\n        /* \"#utility.yul\":7701:7705   */\n      0x41\n        /* \"#utility.yul\":7698:7699   */\n      0x04\n        /* \"#utility.yul\":7691:7706   */\n      mstore\n        /* \"#utility.yul\":7725:7729   */\n      0x24\n        /* \"#utility.yul\":7722:7723   */\n      0x00\n        /* \"#utility.yul\":7715:7730   */\n      revert\n        /* \"#utility.yul\":7742:8023   */\n    tag_328:\n        /* \"#utility.yul\":7825:7852   */\n      tag_449\n        /* \"#utility.yul\":7847:7851   */\n      dup3\n        /* \"#utility.yul\":7825:7852   */\n      tag_313\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7817:7823   */\n      dup2\n        /* \"#utility.yul\":7813:7853   */\n      add\n        /* \"#utility.yul\":7955:7961   */\n      dup2\n        /* \"#utility.yul\":7943:7953   */\n      dup2\n        /* \"#utility.yul\":7940:7962   */\n      lt\n        /* \"#utility.yul\":7919:7937   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7907:7917   */\n      dup3\n        /* \"#utility.yul\":7904:7938   */\n      gt\n        /* \"#utility.yul\":7901:7963   */\n      or\n        /* \"#utility.yul\":7898:7986   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":7966:7984   */\n      tag_451\n      tag_258\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7898:7986   */\n    tag_450:\n        /* \"#utility.yul\":8006:8016   */\n      dup1\n        /* \"#utility.yul\":8002:8004   */\n      0x40\n        /* \"#utility.yul\":7995:8017   */\n      mstore\n        /* \"#utility.yul\":7785:8023   */\n      pop\n        /* \"#utility.yul\":7742:8023   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8029:8158   */\n    tag_329:\n        /* \"#utility.yul\":8063:8069   */\n      0x00\n        /* \"#utility.yul\":8090:8110   */\n      tag_453\n      tag_302\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8080:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8119:8152   */\n      tag_454\n        /* \"#utility.yul\":8147:8151   */\n      dup3\n        /* \"#utility.yul\":8139:8145   */\n      dup3\n        /* \"#utility.yul\":8119:8152   */\n      tag_328\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8029:8158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8164:8471   */\n    tag_330:\n        /* \"#utility.yul\":8225:8229   */\n      0x00\n        /* \"#utility.yul\":8315:8333   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8307:8313   */\n      dup3\n        /* \"#utility.yul\":8304:8334   */\n      gt\n        /* \"#utility.yul\":8301:8357   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":8337:8355   */\n      tag_457\n      tag_258\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8301:8357   */\n    tag_456:\n        /* \"#utility.yul\":8375:8404   */\n      tag_458\n        /* \"#utility.yul\":8397:8403   */\n      dup3\n        /* \"#utility.yul\":8375:8404   */\n      tag_313\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8367:8404   */\n      swap1\n      pop\n        /* \"#utility.yul\":8459:8463   */\n      0x20\n        /* \"#utility.yul\":8453:8457   */\n      dup2\n        /* \"#utility.yul\":8449:8464   */\n      add\n        /* \"#utility.yul\":8441:8464   */\n      swap1\n      pop\n        /* \"#utility.yul\":8164:8471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8477:8625   */\n    tag_331:\n        /* \"#utility.yul\":8575:8581   */\n      dup3\n        /* \"#utility.yul\":8570:8573   */\n      dup2\n        /* \"#utility.yul\":8565:8568   */\n      dup4\n        /* \"#utility.yul\":8552:8582   */\n      calldatacopy\n        /* \"#utility.yul\":8616:8617   */\n      0x00\n        /* \"#utility.yul\":8607:8613   */\n      dup4\n        /* \"#utility.yul\":8602:8605   */\n      dup4\n        /* \"#utility.yul\":8598:8614   */\n      add\n        /* \"#utility.yul\":8591:8618   */\n      mstore\n        /* \"#utility.yul\":8477:8625   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8631:9054   */\n    tag_332:\n        /* \"#utility.yul\":8708:8713   */\n      0x00\n        /* \"#utility.yul\":8733:8798   */\n      tag_461\n        /* \"#utility.yul\":8749:8797   */\n      tag_462\n        /* \"#utility.yul\":8790:8796   */\n      dup5\n        /* \"#utility.yul\":8749:8797   */\n      tag_330\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8733:8798   */\n      tag_329\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8724:8798   */\n      swap1\n      pop\n        /* \"#utility.yul\":8821:8827   */\n      dup3\n        /* \"#utility.yul\":8814:8819   */\n      dup2\n        /* \"#utility.yul\":8807:8828   */\n      mstore\n        /* \"#utility.yul\":8859:8863   */\n      0x20\n        /* \"#utility.yul\":8852:8857   */\n      dup2\n        /* \"#utility.yul\":8848:8864   */\n      add\n        /* \"#utility.yul\":8897:8900   */\n      dup5\n        /* \"#utility.yul\":8888:8894   */\n      dup5\n        /* \"#utility.yul\":8883:8886   */\n      dup5\n        /* \"#utility.yul\":8879:8895   */\n      add\n        /* \"#utility.yul\":8876:8901   */\n      gt\n        /* \"#utility.yul\":8873:8985   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":8904:8983   */\n      tag_464\n      tag_327\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8873:8985   */\n    tag_463:\n        /* \"#utility.yul\":8994:9048   */\n      tag_465\n        /* \"#utility.yul\":9041:9047   */\n      dup5\n        /* \"#utility.yul\":9036:9039   */\n      dup3\n        /* \"#utility.yul\":9031:9034   */\n      dup6\n        /* \"#utility.yul\":8994:9048   */\n      tag_331\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8714:9054   */\n      pop\n        /* \"#utility.yul\":8631:9054   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9073:9411   */\n    tag_333:\n        /* \"#utility.yul\":9128:9133   */\n      0x00\n        /* \"#utility.yul\":9177:9180   */\n      dup3\n        /* \"#utility.yul\":9170:9174   */\n      0x1f\n        /* \"#utility.yul\":9162:9168   */\n      dup4\n        /* \"#utility.yul\":9158:9175   */\n      add\n        /* \"#utility.yul\":9154:9181   */\n      slt\n        /* \"#utility.yul\":9144:9266   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":9185:9264   */\n      tag_468\n      tag_326\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9144:9266   */\n    tag_467:\n        /* \"#utility.yul\":9302:9308   */\n      dup2\n        /* \"#utility.yul\":9289:9309   */\n      calldataload\n        /* \"#utility.yul\":9327:9405   */\n      tag_469\n        /* \"#utility.yul\":9401:9404   */\n      dup5\n        /* \"#utility.yul\":9393:9399   */\n      dup3\n        /* \"#utility.yul\":9386:9390   */\n      0x20\n        /* \"#utility.yul\":9378:9384   */\n      dup7\n        /* \"#utility.yul\":9374:9391   */\n      add\n        /* \"#utility.yul\":9327:9405   */\n      tag_332\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9318:9405   */\n      swap2\n      pop\n        /* \"#utility.yul\":9134:9411   */\n      pop\n        /* \"#utility.yul\":9073:9411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9417:10360   */\n    tag_71:\n        /* \"#utility.yul\":9512:9518   */\n      0x00\n        /* \"#utility.yul\":9520:9526   */\n      dup1\n        /* \"#utility.yul\":9528:9534   */\n      0x00\n        /* \"#utility.yul\":9536:9542   */\n      dup1\n        /* \"#utility.yul\":9585:9588   */\n      0x80\n        /* \"#utility.yul\":9573:9582   */\n      dup6\n        /* \"#utility.yul\":9564:9571   */\n      dup8\n        /* \"#utility.yul\":9560:9583   */\n      sub\n        /* \"#utility.yul\":9556:9589   */\n      slt\n        /* \"#utility.yul\":9553:9673   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":9592:9671   */\n      tag_472\n      tag_303\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":9553:9673   */\n    tag_471:\n        /* \"#utility.yul\":9712:9713   */\n      0x00\n        /* \"#utility.yul\":9737:9790   */\n      tag_473\n        /* \"#utility.yul\":9782:9789   */\n      dup8\n        /* \"#utility.yul\":9773:9779   */\n      dup3\n        /* \"#utility.yul\":9762:9771   */\n      dup9\n        /* \"#utility.yul\":9758:9780   */\n      add\n        /* \"#utility.yul\":9737:9790   */\n      tag_322\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9727:9790   */\n      swap5\n      pop\n        /* \"#utility.yul\":9683:9800   */\n      pop\n        /* \"#utility.yul\":9839:9841   */\n      0x20\n        /* \"#utility.yul\":9865:9918   */\n      tag_474\n        /* \"#utility.yul\":9910:9917   */\n      dup8\n        /* \"#utility.yul\":9901:9907   */\n      dup3\n        /* \"#utility.yul\":9890:9899   */\n      dup9\n        /* \"#utility.yul\":9886:9908   */\n      add\n        /* \"#utility.yul\":9865:9918   */\n      tag_322\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9855:9918   */\n      swap4\n      pop\n        /* \"#utility.yul\":9810:9928   */\n      pop\n        /* \"#utility.yul\":9967:9969   */\n      0x40\n        /* \"#utility.yul\":9993:10046   */\n      tag_475\n        /* \"#utility.yul\":10038:10045   */\n      dup8\n        /* \"#utility.yul\":10029:10035   */\n      dup3\n        /* \"#utility.yul\":10018:10027   */\n      dup9\n        /* \"#utility.yul\":10014:10036   */\n      add\n        /* \"#utility.yul\":9993:10046   */\n      tag_317\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9983:10046   */\n      swap3\n      pop\n        /* \"#utility.yul\":9938:10056   */\n      pop\n        /* \"#utility.yul\":10123:10125   */\n      0x60\n        /* \"#utility.yul\":10112:10121   */\n      dup6\n        /* \"#utility.yul\":10108:10126   */\n      add\n        /* \"#utility.yul\":10095:10127   */\n      calldataload\n        /* \"#utility.yul\":10154:10172   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10146:10152   */\n      dup2\n        /* \"#utility.yul\":10143:10173   */\n      gt\n        /* \"#utility.yul\":10140:10257   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":10176:10255   */\n      tag_477\n      tag_304\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":10140:10257   */\n    tag_476:\n        /* \"#utility.yul\":10281:10343   */\n      tag_478\n        /* \"#utility.yul\":10335:10342   */\n      dup8\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup9\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10281:10343   */\n      tag_333\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10271:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10066:10353   */\n      pop\n        /* \"#utility.yul\":9417:10360   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10674   */\n    tag_334:\n        /* \"#utility.yul\":10428:10432   */\n      0x00\n        /* \"#utility.yul\":10518:10536   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10510:10516   */\n      dup3\n        /* \"#utility.yul\":10507:10537   */\n      gt\n        /* \"#utility.yul\":10504:10560   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":10540:10558   */\n      tag_481\n      tag_258\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":10504:10560   */\n    tag_480:\n        /* \"#utility.yul\":10578:10607   */\n      tag_482\n        /* \"#utility.yul\":10600:10606   */\n      dup3\n        /* \"#utility.yul\":10578:10607   */\n      tag_313\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":10570:10607   */\n      swap1\n      pop\n        /* \"#utility.yul\":10662:10666   */\n      0x20\n        /* \"#utility.yul\":10656:10660   */\n      dup2\n        /* \"#utility.yul\":10652:10667   */\n      add\n        /* \"#utility.yul\":10644:10667   */\n      swap1\n      pop\n        /* \"#utility.yul\":10366:10674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10680:11105   */\n    tag_335:\n        /* \"#utility.yul\":10758:10763   */\n      0x00\n        /* \"#utility.yul\":10783:10849   */\n      tag_484\n        /* \"#utility.yul\":10799:10848   */\n      tag_485\n        /* \"#utility.yul\":10841:10847   */\n      dup5\n        /* \"#utility.yul\":10799:10848   */\n      tag_334\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10783:10849   */\n      tag_329\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10774:10849   */\n      swap1\n      pop\n        /* \"#utility.yul\":10872:10878   */\n      dup3\n        /* \"#utility.yul\":10865:10870   */\n      dup2\n        /* \"#utility.yul\":10858:10879   */\n      mstore\n        /* \"#utility.yul\":10910:10914   */\n      0x20\n        /* \"#utility.yul\":10903:10908   */\n      dup2\n        /* \"#utility.yul\":10899:10915   */\n      add\n        /* \"#utility.yul\":10948:10951   */\n      dup5\n        /* \"#utility.yul\":10939:10945   */\n      dup5\n        /* \"#utility.yul\":10934:10937   */\n      dup5\n        /* \"#utility.yul\":10930:10946   */\n      add\n        /* \"#utility.yul\":10927:10952   */\n      gt\n        /* \"#utility.yul\":10924:11036   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":10955:11034   */\n      tag_487\n      tag_327\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":10924:11036   */\n    tag_486:\n        /* \"#utility.yul\":11045:11099   */\n      tag_488\n        /* \"#utility.yul\":11092:11098   */\n      dup5\n        /* \"#utility.yul\":11087:11090   */\n      dup3\n        /* \"#utility.yul\":11082:11085   */\n      dup6\n        /* \"#utility.yul\":11045:11099   */\n      tag_331\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10764:11105   */\n      pop\n        /* \"#utility.yul\":10680:11105   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11125:11465   */\n    tag_336:\n        /* \"#utility.yul\":11181:11186   */\n      0x00\n        /* \"#utility.yul\":11230:11233   */\n      dup3\n        /* \"#utility.yul\":11223:11227   */\n      0x1f\n        /* \"#utility.yul\":11215:11221   */\n      dup4\n        /* \"#utility.yul\":11211:11228   */\n      add\n        /* \"#utility.yul\":11207:11234   */\n      slt\n        /* \"#utility.yul\":11197:11319   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":11238:11317   */\n      tag_491\n      tag_326\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":11197:11319   */\n    tag_490:\n        /* \"#utility.yul\":11355:11361   */\n      dup2\n        /* \"#utility.yul\":11342:11362   */\n      calldataload\n        /* \"#utility.yul\":11380:11459   */\n      tag_492\n        /* \"#utility.yul\":11455:11458   */\n      dup5\n        /* \"#utility.yul\":11447:11453   */\n      dup3\n        /* \"#utility.yul\":11440:11444   */\n      0x20\n        /* \"#utility.yul\":11432:11438   */\n      dup7\n        /* \"#utility.yul\":11428:11445   */\n      add\n        /* \"#utility.yul\":11380:11459   */\n      tag_335\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11371:11459   */\n      swap2\n      pop\n        /* \"#utility.yul\":11187:11465   */\n      pop\n        /* \"#utility.yul\":11125:11465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11471:12270   */\n    tag_79:\n        /* \"#utility.yul\":11558:11564   */\n      0x00\n        /* \"#utility.yul\":11566:11572   */\n      dup1\n        /* \"#utility.yul\":11574:11580   */\n      0x00\n        /* \"#utility.yul\":11623:11625   */\n      0x60\n        /* \"#utility.yul\":11611:11620   */\n      dup5\n        /* \"#utility.yul\":11602:11609   */\n      dup7\n        /* \"#utility.yul\":11598:11621   */\n      sub\n        /* \"#utility.yul\":11594:11626   */\n      slt\n        /* \"#utility.yul\":11591:11710   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":11629:11708   */\n      tag_495\n      tag_303\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":11591:11710   */\n    tag_494:\n        /* \"#utility.yul\":11749:11750   */\n      0x00\n        /* \"#utility.yul\":11774:11827   */\n      tag_496\n        /* \"#utility.yul\":11819:11826   */\n      dup7\n        /* \"#utility.yul\":11810:11816   */\n      dup3\n        /* \"#utility.yul\":11799:11808   */\n      dup8\n        /* \"#utility.yul\":11795:11817   */\n      add\n        /* \"#utility.yul\":11774:11827   */\n      tag_322\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11764:11827   */\n      swap4\n      pop\n        /* \"#utility.yul\":11720:11837   */\n      pop\n        /* \"#utility.yul\":11876:11878   */\n      0x20\n        /* \"#utility.yul\":11902:11955   */\n      tag_497\n        /* \"#utility.yul\":11947:11954   */\n      dup7\n        /* \"#utility.yul\":11938:11944   */\n      dup3\n        /* \"#utility.yul\":11927:11936   */\n      dup8\n        /* \"#utility.yul\":11923:11945   */\n      add\n        /* \"#utility.yul\":11902:11955   */\n      tag_317\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11892:11955   */\n      swap3\n      pop\n        /* \"#utility.yul\":11847:11965   */\n      pop\n        /* \"#utility.yul\":12032:12034   */\n      0x40\n        /* \"#utility.yul\":12021:12030   */\n      dup5\n        /* \"#utility.yul\":12017:12035   */\n      add\n        /* \"#utility.yul\":12004:12036   */\n      calldataload\n        /* \"#utility.yul\":12063:12081   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12055:12061   */\n      dup2\n        /* \"#utility.yul\":12052:12082   */\n      gt\n        /* \"#utility.yul\":12049:12166   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":12085:12164   */\n      tag_499\n      tag_304\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12049:12166   */\n    tag_498:\n        /* \"#utility.yul\":12190:12253   */\n      tag_500\n        /* \"#utility.yul\":12245:12252   */\n      dup7\n        /* \"#utility.yul\":12236:12242   */\n      dup3\n        /* \"#utility.yul\":12225:12234   */\n      dup8\n        /* \"#utility.yul\":12221:12243   */\n      add\n        /* \"#utility.yul\":12190:12253   */\n      tag_336\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12180:12253   */\n      swap2\n      pop\n        /* \"#utility.yul\":11975:12263   */\n      pop\n        /* \"#utility.yul\":11471:12270   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12276:12750   */\n    tag_83:\n        /* \"#utility.yul\":12344:12350   */\n      0x00\n        /* \"#utility.yul\":12352:12358   */\n      dup1\n        /* \"#utility.yul\":12401:12403   */\n      0x40\n        /* \"#utility.yul\":12389:12398   */\n      dup4\n        /* \"#utility.yul\":12380:12387   */\n      dup6\n        /* \"#utility.yul\":12376:12399   */\n      sub\n        /* \"#utility.yul\":12372:12404   */\n      slt\n        /* \"#utility.yul\":12369:12488   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":12407:12486   */\n      tag_503\n      tag_303\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12369:12488   */\n    tag_502:\n        /* \"#utility.yul\":12527:12528   */\n      0x00\n        /* \"#utility.yul\":12552:12605   */\n      tag_504\n        /* \"#utility.yul\":12597:12604   */\n      dup6\n        /* \"#utility.yul\":12588:12594   */\n      dup3\n        /* \"#utility.yul\":12577:12586   */\n      dup7\n        /* \"#utility.yul\":12573:12595   */\n      add\n        /* \"#utility.yul\":12552:12605   */\n      tag_322\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12542:12605   */\n      swap3\n      pop\n        /* \"#utility.yul\":12498:12615   */\n      pop\n        /* \"#utility.yul\":12654:12656   */\n      0x20\n        /* \"#utility.yul\":12680:12733   */\n      tag_505\n        /* \"#utility.yul\":12725:12732   */\n      dup6\n        /* \"#utility.yul\":12716:12722   */\n      dup3\n        /* \"#utility.yul\":12705:12714   */\n      dup7\n        /* \"#utility.yul\":12701:12723   */\n      add\n        /* \"#utility.yul\":12680:12733   */\n      tag_322\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12670:12733   */\n      swap2\n      pop\n        /* \"#utility.yul\":12625:12743   */\n      pop\n        /* \"#utility.yul\":12276:12750   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12756:12936   */\n    tag_337:\n        /* \"#utility.yul\":12804:12881   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12801:12802   */\n      0x00\n        /* \"#utility.yul\":12794:12882   */\n      mstore\n        /* \"#utility.yul\":12901:12905   */\n      0x22\n        /* \"#utility.yul\":12898:12899   */\n      0x04\n        /* \"#utility.yul\":12891:12906   */\n      mstore\n        /* \"#utility.yul\":12925:12929   */\n      0x24\n        /* \"#utility.yul\":12922:12923   */\n      0x00\n        /* \"#utility.yul\":12915:12930   */\n      revert\n        /* \"#utility.yul\":12942:13262   */\n    tag_92:\n        /* \"#utility.yul\":12986:12992   */\n      0x00\n        /* \"#utility.yul\":13023:13024   */\n      0x02\n        /* \"#utility.yul\":13017:13021   */\n      dup3\n        /* \"#utility.yul\":13013:13025   */\n      div\n        /* \"#utility.yul\":13003:13025   */\n      swap1\n      pop\n        /* \"#utility.yul\":13070:13071   */\n      0x01\n        /* \"#utility.yul\":13064:13068   */\n      dup3\n        /* \"#utility.yul\":13060:13072   */\n      and\n        /* \"#utility.yul\":13091:13109   */\n      dup1\n        /* \"#utility.yul\":13081:13162   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":13147:13151   */\n      0x7f\n        /* \"#utility.yul\":13139:13145   */\n      dup3\n        /* \"#utility.yul\":13135:13152   */\n      and\n        /* \"#utility.yul\":13125:13152   */\n      swap2\n      pop\n        /* \"#utility.yul\":13081:13162   */\n    tag_508:\n        /* \"#utility.yul\":13209:13211   */\n      0x20\n        /* \"#utility.yul\":13201:13207   */\n      dup3\n        /* \"#utility.yul\":13198:13212   */\n      lt\n        /* \"#utility.yul\":13178:13196   */\n      dup2\n        /* \"#utility.yul\":13175:13213   */\n      sub\n        /* \"#utility.yul\":13172:13256   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":13228:13246   */\n      tag_510\n      tag_337\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13172:13256   */\n    tag_509:\n        /* \"#utility.yul\":12993:13262   */\n      pop\n        /* \"#utility.yul\":12942:13262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13268:13710   */\n    tag_115:\n        /* \"#utility.yul\":13417:13421   */\n      0x00\n        /* \"#utility.yul\":13455:13457   */\n      0x60\n        /* \"#utility.yul\":13444:13453   */\n      dup3\n        /* \"#utility.yul\":13440:13458   */\n      add\n        /* \"#utility.yul\":13432:13458   */\n      swap1\n      pop\n        /* \"#utility.yul\":13468:13539   */\n      tag_512\n        /* \"#utility.yul\":13536:13537   */\n      0x00\n        /* \"#utility.yul\":13525:13534   */\n      dup4\n        /* \"#utility.yul\":13521:13538   */\n      add\n        /* \"#utility.yul\":13512:13518   */\n      dup7\n        /* \"#utility.yul\":13468:13539   */\n      tag_320\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":13549:13621   */\n      tag_513\n        /* \"#utility.yul\":13617:13619   */\n      0x20\n        /* \"#utility.yul\":13606:13615   */\n      dup4\n        /* \"#utility.yul\":13602:13620   */\n      add\n        /* \"#utility.yul\":13593:13599   */\n      dup6\n        /* \"#utility.yul\":13549:13621   */\n      tag_323\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":13631:13703   */\n      tag_514\n        /* \"#utility.yul\":13699:13701   */\n      0x40\n        /* \"#utility.yul\":13688:13697   */\n      dup4\n        /* \"#utility.yul\":13684:13702   */\n      add\n        /* \"#utility.yul\":13675:13681   */\n      dup5\n        /* \"#utility.yul\":13631:13703   */\n      tag_320\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13268:13710   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13716:13896   */\n    tag_127:\n        /* \"#utility.yul\":13764:13841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13761:13762   */\n      0x00\n        /* \"#utility.yul\":13754:13842   */\n      mstore\n        /* \"#utility.yul\":13861:13865   */\n      0x32\n        /* \"#utility.yul\":13858:13859   */\n      0x04\n        /* \"#utility.yul\":13851:13866   */\n      mstore\n        /* \"#utility.yul\":13885:13889   */\n      0x24\n        /* \"#utility.yul\":13882:13883   */\n      0x00\n        /* \"#utility.yul\":13875:13890   */\n      revert\n        /* \"#utility.yul\":13902:14050   */\n    tag_338:\n        /* \"#utility.yul\":14004:14015   */\n      0x00\n        /* \"#utility.yul\":14041:14044   */\n      dup2\n        /* \"#utility.yul\":14026:14044   */\n      swap1\n      pop\n        /* \"#utility.yul\":13902:14050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14056:14446   */\n    tag_339:\n        /* \"#utility.yul\":14162:14165   */\n      0x00\n        /* \"#utility.yul\":14190:14229   */\n      tag_518\n        /* \"#utility.yul\":14223:14228   */\n      dup3\n        /* \"#utility.yul\":14190:14229   */\n      tag_310\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14245:14334   */\n      tag_519\n        /* \"#utility.yul\":14327:14333   */\n      dup2\n        /* \"#utility.yul\":14322:14325   */\n      dup6\n        /* \"#utility.yul\":14245:14334   */\n      tag_338\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14238:14334   */\n      swap4\n      pop\n        /* \"#utility.yul\":14343:14408   */\n      tag_520\n        /* \"#utility.yul\":14401:14407   */\n      dup2\n        /* \"#utility.yul\":14396:14399   */\n      dup6\n        /* \"#utility.yul\":14389:14393   */\n      0x20\n        /* \"#utility.yul\":14382:14387   */\n      dup7\n        /* \"#utility.yul\":14378:14394   */\n      add\n        /* \"#utility.yul\":14343:14408   */\n      tag_312\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14433:14439   */\n      dup1\n        /* \"#utility.yul\":14428:14431   */\n      dup5\n        /* \"#utility.yul\":14424:14440   */\n      add\n        /* \"#utility.yul\":14417:14440   */\n      swap2\n      pop\n        /* \"#utility.yul\":14166:14446   */\n      pop\n        /* \"#utility.yul\":14056:14446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14452:14887   */\n    tag_161:\n        /* \"#utility.yul\":14632:14635   */\n      0x00\n        /* \"#utility.yul\":14654:14749   */\n      tag_522\n        /* \"#utility.yul\":14745:14748   */\n      dup3\n        /* \"#utility.yul\":14736:14742   */\n      dup6\n        /* \"#utility.yul\":14654:14749   */\n      tag_339\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14647:14749   */\n      swap2\n      pop\n        /* \"#utility.yul\":14766:14861   */\n      tag_523\n        /* \"#utility.yul\":14857:14860   */\n      dup3\n        /* \"#utility.yul\":14848:14854   */\n      dup5\n        /* \"#utility.yul\":14766:14861   */\n      tag_339\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14759:14861   */\n      swap2\n      pop\n        /* \"#utility.yul\":14878:14881   */\n      dup2\n        /* \"#utility.yul\":14871:14881   */\n      swap1\n      pop\n        /* \"#utility.yul\":14452:14887   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14893:15034   */\n    tag_340:\n        /* \"#utility.yul\":14942:14946   */\n      0x00\n        /* \"#utility.yul\":14965:14968   */\n      dup2\n        /* \"#utility.yul\":14957:14968   */\n      swap1\n      pop\n        /* \"#utility.yul\":14988:14991   */\n      dup2\n        /* \"#utility.yul\":14985:14986   */\n      0x00\n        /* \"#utility.yul\":14978:14992   */\n      mstore\n        /* \"#utility.yul\":15022:15026   */\n      0x20\n        /* \"#utility.yul\":15019:15020   */\n      0x00\n        /* \"#utility.yul\":15009:15027   */\n      keccak256\n        /* \"#utility.yul\":15001:15027   */\n      swap1\n      pop\n        /* \"#utility.yul\":14893:15034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15040:15133   */\n    tag_341:\n        /* \"#utility.yul\":15077:15083   */\n      0x00\n        /* \"#utility.yul\":15124:15126   */\n      0x20\n        /* \"#utility.yul\":15119:15121   */\n      0x1f\n        /* \"#utility.yul\":15112:15117   */\n      dup4\n        /* \"#utility.yul\":15108:15122   */\n      add\n        /* \"#utility.yul\":15104:15127   */\n      div\n        /* \"#utility.yul\":15094:15127   */\n      swap1\n      pop\n        /* \"#utility.yul\":15040:15133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15139:15246   */\n    tag_342:\n        /* \"#utility.yul\":15183:15191   */\n      0x00\n        /* \"#utility.yul\":15233:15238   */\n      dup3\n        /* \"#utility.yul\":15227:15231   */\n      dup3\n        /* \"#utility.yul\":15223:15239   */\n      shl\n        /* \"#utility.yul\":15202:15239   */\n      swap1\n      pop\n        /* \"#utility.yul\":15139:15246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15252:15645   */\n    tag_343:\n        /* \"#utility.yul\":15321:15327   */\n      0x00\n        /* \"#utility.yul\":15371:15372   */\n      0x08\n        /* \"#utility.yul\":15359:15369   */\n      dup4\n        /* \"#utility.yul\":15355:15373   */\n      mul\n        /* \"#utility.yul\":15394:15491   */\n      tag_528\n        /* \"#utility.yul\":15424:15490   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15413:15422   */\n      dup3\n        /* \"#utility.yul\":15394:15491   */\n      tag_342\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15512:15551   */\n      tag_529\n        /* \"#utility.yul\":15542:15550   */\n      dup7\n        /* \"#utility.yul\":15531:15540   */\n      dup4\n        /* \"#utility.yul\":15512:15551   */\n      tag_342\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15500:15551   */\n      swap6\n      pop\n        /* \"#utility.yul\":15584:15588   */\n      dup1\n        /* \"#utility.yul\":15580:15589   */\n      not\n        /* \"#utility.yul\":15573:15578   */\n      dup5\n        /* \"#utility.yul\":15569:15590   */\n      and\n        /* \"#utility.yul\":15560:15590   */\n      swap4\n      pop\n        /* \"#utility.yul\":15633:15637   */\n      dup1\n        /* \"#utility.yul\":15623:15631   */\n      dup7\n        /* \"#utility.yul\":15619:15638   */\n      and\n        /* \"#utility.yul\":15612:15617   */\n      dup5\n        /* \"#utility.yul\":15609:15639   */\n      or\n        /* \"#utility.yul\":15599:15639   */\n      swap3\n      pop\n        /* \"#utility.yul\":15328:15645   */\n      pop\n      pop\n        /* \"#utility.yul\":15252:15645   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15651:15711   */\n    tag_344:\n        /* \"#utility.yul\":15679:15682   */\n      0x00\n        /* \"#utility.yul\":15700:15705   */\n      dup2\n        /* \"#utility.yul\":15693:15705   */\n      swap1\n      pop\n        /* \"#utility.yul\":15651:15711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15717:15859   */\n    tag_345:\n        /* \"#utility.yul\":15767:15776   */\n      0x00\n        /* \"#utility.yul\":15800:15853   */\n      tag_532\n        /* \"#utility.yul\":15818:15852   */\n      tag_533\n        /* \"#utility.yul\":15827:15851   */\n      tag_534\n        /* \"#utility.yul\":15845:15850   */\n      dup5\n        /* \"#utility.yul\":15827:15851   */\n      tag_315\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15818:15852   */\n      tag_344\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15800:15853   */\n      tag_315\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":15787:15853   */\n      swap1\n      pop\n        /* \"#utility.yul\":15717:15859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15865:15940   */\n    tag_346:\n        /* \"#utility.yul\":15908:15911   */\n      0x00\n        /* \"#utility.yul\":15929:15934   */\n      dup2\n        /* \"#utility.yul\":15922:15934   */\n      swap1\n      pop\n        /* \"#utility.yul\":15865:15940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15946:16215   */\n    tag_347:\n        /* \"#utility.yul\":16056:16095   */\n      tag_537\n        /* \"#utility.yul\":16087:16094   */\n      dup4\n        /* \"#utility.yul\":16056:16095   */\n      tag_345\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16117:16208   */\n      tag_538\n        /* \"#utility.yul\":16166:16207   */\n      tag_539\n        /* \"#utility.yul\":16190:16206   */\n      dup3\n        /* \"#utility.yul\":16166:16207   */\n      tag_346\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16158:16164   */\n      dup5\n        /* \"#utility.yul\":16151:16155   */\n      dup5\n        /* \"#utility.yul\":16145:16156   */\n      sload\n        /* \"#utility.yul\":16117:16208   */\n      tag_343\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16111:16115   */\n      dup3\n        /* \"#utility.yul\":16104:16209   */\n      sstore\n        /* \"#utility.yul\":16022:16215   */\n      pop\n        /* \"#utility.yul\":15946:16215   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16221:16294   */\n    tag_348:\n        /* \"#utility.yul\":16266:16269   */\n      0x00\n        /* \"#utility.yul\":16221:16294   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16300:16489   */\n    tag_349:\n        /* \"#utility.yul\":16377:16409   */\n      tag_542\n      tag_348\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":16418:16483   */\n      tag_543\n        /* \"#utility.yul\":16476:16482   */\n      dup2\n        /* \"#utility.yul\":16468:16474   */\n      dup5\n        /* \"#utility.yul\":16462:16466   */\n      dup5\n        /* \"#utility.yul\":16418:16483   */\n      tag_347\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16353:16489   */\n      pop\n        /* \"#utility.yul\":16300:16489   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16495:16681   */\n    tag_350:\n        /* \"#utility.yul\":16555:16675   */\n    tag_545:\n        /* \"#utility.yul\":16572:16575   */\n      dup2\n        /* \"#utility.yul\":16565:16570   */\n      dup2\n        /* \"#utility.yul\":16562:16576   */\n      lt\n        /* \"#utility.yul\":16555:16675   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":16626:16665   */\n      tag_548\n        /* \"#utility.yul\":16663:16664   */\n      0x00\n        /* \"#utility.yul\":16656:16661   */\n      dup3\n        /* \"#utility.yul\":16626:16665   */\n      tag_349\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":16599:16600   */\n      0x01\n        /* \"#utility.yul\":16592:16597   */\n      dup2\n        /* \"#utility.yul\":16588:16601   */\n      add\n        /* \"#utility.yul\":16579:16601   */\n      swap1\n      pop\n        /* \"#utility.yul\":16555:16675   */\n      jump(tag_545)\n    tag_547:\n        /* \"#utility.yul\":16495:16681   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16687:17230   */\n    tag_351:\n        /* \"#utility.yul\":16788:16790   */\n      0x1f\n        /* \"#utility.yul\":16783:16786   */\n      dup3\n        /* \"#utility.yul\":16780:16791   */\n      gt\n        /* \"#utility.yul\":16777:17223   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":16822:16860   */\n      tag_551\n        /* \"#utility.yul\":16854:16859   */\n      dup2\n        /* \"#utility.yul\":16822:16860   */\n      tag_340\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":16906:16935   */\n      tag_552\n        /* \"#utility.yul\":16924:16934   */\n      dup5\n        /* \"#utility.yul\":16906:16935   */\n      tag_341\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":16896:16904   */\n      dup2\n        /* \"#utility.yul\":16892:16936   */\n      add\n        /* \"#utility.yul\":17089:17091   */\n      0x20\n        /* \"#utility.yul\":17077:17087   */\n      dup6\n        /* \"#utility.yul\":17074:17092   */\n      lt\n        /* \"#utility.yul\":17071:17120   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":17110:17118   */\n      dup2\n        /* \"#utility.yul\":17095:17118   */\n      swap1\n      pop\n        /* \"#utility.yul\":17071:17120   */\n    tag_553:\n        /* \"#utility.yul\":17133:17213   */\n      tag_554\n        /* \"#utility.yul\":17189:17211   */\n      tag_555\n        /* \"#utility.yul\":17207:17210   */\n      dup6\n        /* \"#utility.yul\":17189:17211   */\n      tag_341\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17179:17187   */\n      dup4\n        /* \"#utility.yul\":17175:17212   */\n      add\n        /* \"#utility.yul\":17162:17173   */\n      dup3\n        /* \"#utility.yul\":17133:17213   */\n      tag_350\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":16792:17223   */\n      pop\n      pop\n        /* \"#utility.yul\":16777:17223   */\n    tag_550:\n        /* \"#utility.yul\":16687:17230   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17236:17353   */\n    tag_352:\n        /* \"#utility.yul\":17290:17298   */\n      0x00\n        /* \"#utility.yul\":17340:17345   */\n      dup3\n        /* \"#utility.yul\":17334:17338   */\n      dup3\n        /* \"#utility.yul\":17330:17346   */\n      shr\n        /* \"#utility.yul\":17309:17346   */\n      swap1\n      pop\n        /* \"#utility.yul\":17236:17353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17359:17528   */\n    tag_353:\n        /* \"#utility.yul\":17403:17409   */\n      0x00\n        /* \"#utility.yul\":17436:17487   */\n      tag_558\n        /* \"#utility.yul\":17484:17485   */\n      0x00\n        /* \"#utility.yul\":17480:17486   */\n      not\n        /* \"#utility.yul\":17472:17477   */\n      dup5\n        /* \"#utility.yul\":17469:17470   */\n      0x08\n        /* \"#utility.yul\":17465:17478   */\n      mul\n        /* \"#utility.yul\":17436:17487   */\n      tag_352\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":17432:17488   */\n      not\n        /* \"#utility.yul\":17517:17521   */\n      dup1\n        /* \"#utility.yul\":17511:17515   */\n      dup4\n        /* \"#utility.yul\":17507:17522   */\n      and\n        /* \"#utility.yul\":17497:17522   */\n      swap2\n      pop\n        /* \"#utility.yul\":17410:17528   */\n      pop\n        /* \"#utility.yul\":17359:17528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17533:17828   */\n    tag_354:\n        /* \"#utility.yul\":17609:17613   */\n      0x00\n        /* \"#utility.yul\":17755:17784   */\n      tag_560\n        /* \"#utility.yul\":17780:17783   */\n      dup4\n        /* \"#utility.yul\":17774:17778   */\n      dup4\n        /* \"#utility.yul\":17755:17784   */\n      tag_353\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":17747:17784   */\n      swap2\n      pop\n        /* \"#utility.yul\":17817:17820   */\n      dup3\n        /* \"#utility.yul\":17814:17815   */\n      0x02\n        /* \"#utility.yul\":17810:17821   */\n      mul\n        /* \"#utility.yul\":17804:17808   */\n      dup3\n        /* \"#utility.yul\":17801:17822   */\n      or\n        /* \"#utility.yul\":17793:17822   */\n      swap1\n      pop\n        /* \"#utility.yul\":17533:17828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17833:19228   */\n    tag_194:\n        /* \"#utility.yul\":17950:17987   */\n      tag_562\n        /* \"#utility.yul\":17983:17986   */\n      dup3\n        /* \"#utility.yul\":17950:17987   */\n      tag_310\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18052:18070   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18044:18050   */\n      dup2\n        /* \"#utility.yul\":18041:18071   */\n      gt\n        /* \"#utility.yul\":18038:18094   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":18074:18092   */\n      tag_564\n      tag_258\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":18038:18094   */\n    tag_563:\n        /* \"#utility.yul\":18118:18156   */\n      tag_565\n        /* \"#utility.yul\":18150:18154   */\n      dup3\n        /* \"#utility.yul\":18144:18155   */\n      sload\n        /* \"#utility.yul\":18118:18156   */\n      tag_92\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18203:18270   */\n      tag_566\n        /* \"#utility.yul\":18263:18269   */\n      dup3\n        /* \"#utility.yul\":18255:18261   */\n      dup3\n        /* \"#utility.yul\":18249:18253   */\n      dup6\n        /* \"#utility.yul\":18203:18270   */\n      tag_351\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":18297:18298   */\n      0x00\n        /* \"#utility.yul\":18321:18325   */\n      0x20\n        /* \"#utility.yul\":18308:18325   */\n      swap1\n      pop\n        /* \"#utility.yul\":18353:18355   */\n      0x1f\n        /* \"#utility.yul\":18345:18351   */\n      dup4\n        /* \"#utility.yul\":18342:18356   */\n      gt\n        /* \"#utility.yul\":18370:18371   */\n      0x01\n        /* \"#utility.yul\":18365:18983   */\n      dup2\n      eq\n      tag_568\n      jumpi\n        /* \"#utility.yul\":19027:19028   */\n      0x00\n        /* \"#utility.yul\":19044:19050   */\n      dup5\n        /* \"#utility.yul\":19041:19118   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":19093:19102   */\n      dup3\n        /* \"#utility.yul\":19088:19091   */\n      dup8\n        /* \"#utility.yul\":19084:19103   */\n      add\n        /* \"#utility.yul\":19078:19104   */\n      mload\n        /* \"#utility.yul\":19069:19104   */\n      swap1\n      pop\n        /* \"#utility.yul\":19041:19118   */\n    tag_569:\n        /* \"#utility.yul\":19144:19211   */\n      tag_570\n        /* \"#utility.yul\":19204:19210   */\n      dup6\n        /* \"#utility.yul\":19197:19202   */\n      dup3\n        /* \"#utility.yul\":19144:19211   */\n      tag_354\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":19138:19142   */\n      dup7\n        /* \"#utility.yul\":19131:19212   */\n      sstore\n        /* \"#utility.yul\":19000:19222   */\n      pop\n        /* \"#utility.yul\":18335:19222   */\n      jump(tag_567)\n        /* \"#utility.yul\":18365:18983   */\n    tag_568:\n        /* \"#utility.yul\":18417:18421   */\n      0x1f\n        /* \"#utility.yul\":18413:18422   */\n      not\n        /* \"#utility.yul\":18405:18411   */\n      dup5\n        /* \"#utility.yul\":18401:18423   */\n      and\n        /* \"#utility.yul\":18451:18488   */\n      tag_571\n        /* \"#utility.yul\":18483:18487   */\n      dup7\n        /* \"#utility.yul\":18451:18488   */\n      tag_340\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":18510:18511   */\n      0x00\n        /* \"#utility.yul\":18524:18732   */\n    tag_572:\n        /* \"#utility.yul\":18538:18545   */\n      dup3\n        /* \"#utility.yul\":18535:18536   */\n      dup2\n        /* \"#utility.yul\":18532:18546   */\n      lt\n        /* \"#utility.yul\":18524:18732   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":18617:18626   */\n      dup5\n        /* \"#utility.yul\":18612:18615   */\n      dup10\n        /* \"#utility.yul\":18608:18627   */\n      add\n        /* \"#utility.yul\":18602:18628   */\n      mload\n        /* \"#utility.yul\":18594:18600   */\n      dup3\n        /* \"#utility.yul\":18587:18629   */\n      sstore\n        /* \"#utility.yul\":18668:18669   */\n      0x01\n        /* \"#utility.yul\":18660:18666   */\n      dup3\n        /* \"#utility.yul\":18656:18670   */\n      add\n        /* \"#utility.yul\":18646:18670   */\n      swap2\n      pop\n        /* \"#utility.yul\":18715:18717   */\n      0x20\n        /* \"#utility.yul\":18704:18713   */\n      dup6\n        /* \"#utility.yul\":18700:18718   */\n      add\n        /* \"#utility.yul\":18687:18718   */\n      swap5\n      pop\n        /* \"#utility.yul\":18561:18565   */\n      0x20\n        /* \"#utility.yul\":18558:18559   */\n      dup2\n        /* \"#utility.yul\":18554:18566   */\n      add\n        /* \"#utility.yul\":18549:18566   */\n      swap1\n      pop\n        /* \"#utility.yul\":18524:18732   */\n      jump(tag_572)\n    tag_574:\n        /* \"#utility.yul\":18760:18766   */\n      dup7\n        /* \"#utility.yul\":18751:18758   */\n      dup4\n        /* \"#utility.yul\":18748:18767   */\n      lt\n        /* \"#utility.yul\":18745:18924   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":18818:18827   */\n      dup5\n        /* \"#utility.yul\":18813:18816   */\n      dup10\n        /* \"#utility.yul\":18809:18828   */\n      add\n        /* \"#utility.yul\":18803:18829   */\n      mload\n        /* \"#utility.yul\":18861:18909   */\n      tag_576\n        /* \"#utility.yul\":18903:18907   */\n      0x1f\n        /* \"#utility.yul\":18895:18901   */\n      dup10\n        /* \"#utility.yul\":18891:18908   */\n      and\n        /* \"#utility.yul\":18880:18889   */\n      dup3\n        /* \"#utility.yul\":18861:18909   */\n      tag_353\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":18853:18859   */\n      dup4\n        /* \"#utility.yul\":18846:18910   */\n      sstore\n        /* \"#utility.yul\":18768:18924   */\n      pop\n        /* \"#utility.yul\":18745:18924   */\n    tag_575:\n        /* \"#utility.yul\":18970:18971   */\n      0x01\n        /* \"#utility.yul\":18966:18967   */\n      0x02\n        /* \"#utility.yul\":18958:18964   */\n      dup9\n        /* \"#utility.yul\":18954:18968   */\n      mul\n        /* \"#utility.yul\":18950:18972   */\n      add\n        /* \"#utility.yul\":18944:18948   */\n      dup9\n        /* \"#utility.yul\":18937:18973   */\n      sstore\n        /* \"#utility.yul\":18372:18983   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18335:19222   */\n    tag_567:\n      pop\n        /* \"#utility.yul\":17925:19228   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17833:19228   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19234:19332   */\n    tag_355:\n        /* \"#utility.yul\":19285:19291   */\n      0x00\n        /* \"#utility.yul\":19319:19324   */\n      dup2\n        /* \"#utility.yul\":19313:19325   */\n      mload\n        /* \"#utility.yul\":19303:19325   */\n      swap1\n      pop\n        /* \"#utility.yul\":19234:19332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19338:19506   */\n    tag_356:\n        /* \"#utility.yul\":19421:19432   */\n      0x00\n        /* \"#utility.yul\":19455:19461   */\n      dup3\n        /* \"#utility.yul\":19450:19453   */\n      dup3\n        /* \"#utility.yul\":19443:19462   */\n      mstore\n        /* \"#utility.yul\":19495:19499   */\n      0x20\n        /* \"#utility.yul\":19490:19493   */\n      dup3\n        /* \"#utility.yul\":19486:19500   */\n      add\n        /* \"#utility.yul\":19471:19500   */\n      swap1\n      pop\n        /* \"#utility.yul\":19338:19506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19512:19885   */\n    tag_357:\n        /* \"#utility.yul\":19598:19601   */\n      0x00\n        /* \"#utility.yul\":19626:19664   */\n      tag_580\n        /* \"#utility.yul\":19658:19663   */\n      dup3\n        /* \"#utility.yul\":19626:19664   */\n      tag_355\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":19680:19750   */\n      tag_581\n        /* \"#utility.yul\":19743:19749   */\n      dup2\n        /* \"#utility.yul\":19738:19741   */\n      dup6\n        /* \"#utility.yul\":19680:19750   */\n      tag_356\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":19673:19750   */\n      swap4\n      pop\n        /* \"#utility.yul\":19759:19824   */\n      tag_582\n        /* \"#utility.yul\":19817:19823   */\n      dup2\n        /* \"#utility.yul\":19812:19815   */\n      dup6\n        /* \"#utility.yul\":19805:19809   */\n      0x20\n        /* \"#utility.yul\":19798:19803   */\n      dup7\n        /* \"#utility.yul\":19794:19810   */\n      add\n        /* \"#utility.yul\":19759:19824   */\n      tag_312\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":19849:19878   */\n      tag_583\n        /* \"#utility.yul\":19871:19877   */\n      dup2\n        /* \"#utility.yul\":19849:19878   */\n      tag_313\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":19844:19847   */\n      dup5\n        /* \"#utility.yul\":19840:19879   */\n      add\n        /* \"#utility.yul\":19833:19879   */\n      swap2\n      pop\n        /* \"#utility.yul\":19602:19885   */\n      pop\n        /* \"#utility.yul\":19512:19885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19891:20531   */\n    tag_204:\n        /* \"#utility.yul\":20086:20090   */\n      0x00\n        /* \"#utility.yul\":20124:20127   */\n      0x80\n        /* \"#utility.yul\":20113:20122   */\n      dup3\n        /* \"#utility.yul\":20109:20128   */\n      add\n        /* \"#utility.yul\":20101:20128   */\n      swap1\n      pop\n        /* \"#utility.yul\":20138:20209   */\n      tag_585\n        /* \"#utility.yul\":20206:20207   */\n      0x00\n        /* \"#utility.yul\":20195:20204   */\n      dup4\n        /* \"#utility.yul\":20191:20208   */\n      add\n        /* \"#utility.yul\":20182:20188   */\n      dup8\n        /* \"#utility.yul\":20138:20209   */\n      tag_320\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":20219:20291   */\n      tag_586\n        /* \"#utility.yul\":20287:20289   */\n      0x20\n        /* \"#utility.yul\":20276:20285   */\n      dup4\n        /* \"#utility.yul\":20272:20290   */\n      add\n        /* \"#utility.yul\":20263:20269   */\n      dup7\n        /* \"#utility.yul\":20219:20291   */\n      tag_320\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":20301:20373   */\n      tag_587\n        /* \"#utility.yul\":20369:20371   */\n      0x40\n        /* \"#utility.yul\":20358:20367   */\n      dup4\n        /* \"#utility.yul\":20354:20372   */\n      add\n        /* \"#utility.yul\":20345:20351   */\n      dup6\n        /* \"#utility.yul\":20301:20373   */\n      tag_323\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":20420:20429   */\n      dup2\n        /* \"#utility.yul\":20414:20418   */\n      dup2\n        /* \"#utility.yul\":20410:20430   */\n      sub\n        /* \"#utility.yul\":20405:20407   */\n      0x60\n        /* \"#utility.yul\":20394:20403   */\n      dup4\n        /* \"#utility.yul\":20390:20408   */\n      add\n        /* \"#utility.yul\":20383:20431   */\n      mstore\n        /* \"#utility.yul\":20448:20524   */\n      tag_588\n        /* \"#utility.yul\":20519:20523   */\n      dup2\n        /* \"#utility.yul\":20510:20516   */\n      dup5\n        /* \"#utility.yul\":20448:20524   */\n      tag_357\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":20440:20524   */\n      swap1\n      pop\n        /* \"#utility.yul\":19891:20531   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20537:20678   */\n    tag_358:\n        /* \"#utility.yul\":20593:20598   */\n      0x00\n        /* \"#utility.yul\":20624:20630   */\n      dup2\n        /* \"#utility.yul\":20618:20631   */\n      mload\n        /* \"#utility.yul\":20609:20631   */\n      swap1\n      pop\n        /* \"#utility.yul\":20640:20672   */\n      tag_590\n        /* \"#utility.yul\":20666:20671   */\n      dup2\n        /* \"#utility.yul\":20640:20672   */\n      tag_306\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20537:20678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20684:21033   */\n    tag_207:\n        /* \"#utility.yul\":20753:20759   */\n      0x00\n        /* \"#utility.yul\":20802:20804   */\n      0x20\n        /* \"#utility.yul\":20790:20799   */\n      dup3\n        /* \"#utility.yul\":20781:20788   */\n      dup5\n        /* \"#utility.yul\":20777:20800   */\n      sub\n        /* \"#utility.yul\":20773:20805   */\n      slt\n        /* \"#utility.yul\":20770:20889   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":20808:20887   */\n      tag_593\n      tag_303\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":20770:20889   */\n    tag_592:\n        /* \"#utility.yul\":20928:20929   */\n      0x00\n        /* \"#utility.yul\":20953:21016   */\n      tag_594\n        /* \"#utility.yul\":21008:21015   */\n      dup5\n        /* \"#utility.yul\":20999:21005   */\n      dup3\n        /* \"#utility.yul\":20988:20997   */\n      dup6\n        /* \"#utility.yul\":20984:21006   */\n      add\n        /* \"#utility.yul\":20953:21016   */\n      tag_358\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":20943:21016   */\n      swap2\n      pop\n        /* \"#utility.yul\":20899:21026   */\n      pop\n        /* \"#utility.yul\":20684:21033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21039:21371   */\n    tag_252:\n        /* \"#utility.yul\":21160:21164   */\n      0x00\n        /* \"#utility.yul\":21198:21200   */\n      0x40\n        /* \"#utility.yul\":21187:21196   */\n      dup3\n        /* \"#utility.yul\":21183:21201   */\n      add\n        /* \"#utility.yul\":21175:21201   */\n      swap1\n      pop\n        /* \"#utility.yul\":21211:21282   */\n      tag_596\n        /* \"#utility.yul\":21279:21280   */\n      0x00\n        /* \"#utility.yul\":21268:21277   */\n      dup4\n        /* \"#utility.yul\":21264:21281   */\n      add\n        /* \"#utility.yul\":21255:21261   */\n      dup6\n        /* \"#utility.yul\":21211:21282   */\n      tag_320\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":21292:21364   */\n      tag_597\n        /* \"#utility.yul\":21360:21362   */\n      0x20\n        /* \"#utility.yul\":21349:21358   */\n      dup4\n        /* \"#utility.yul\":21345:21363   */\n      add\n        /* \"#utility.yul\":21336:21342   */\n      dup5\n        /* \"#utility.yul\":21292:21364   */\n      tag_323\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":21039:21371   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21377:21557   */\n    tag_264:\n        /* \"#utility.yul\":21425:21502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21422:21423   */\n      0x00\n        /* \"#utility.yul\":21415:21503   */\n      mstore\n        /* \"#utility.yul\":21522:21526   */\n      0x12\n        /* \"#utility.yul\":21519:21520   */\n      0x04\n        /* \"#utility.yul\":21512:21527   */\n      mstore\n        /* \"#utility.yul\":21546:21550   */\n      0x24\n        /* \"#utility.yul\":21543:21544   */\n      0x00\n        /* \"#utility.yul\":21536:21551   */\n      revert\n\n    auxdata: 0xa26469706673582212206b537b4434db908cdc6a38d1efbcf3bbd288ef38ea0c5a6399c7f590c2cac57e64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2740": {
									"entryPoint": null,
									"id": 2740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:16",
										"nodeType": "YulBlock",
										"src": "0:5231:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:16",
													"nodeType": "YulBlock",
													"src": "66:40:16",
													"statements": [
														{
															"nativeSrc": "77:22:16",
															"nodeType": "YulAssignment",
															"src": "77:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:16"
																},
																"nativeSrc": "87:12:16",
																"nodeType": "YulFunctionCall",
																"src": "87:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:16",
														"nodeType": "YulTypedName",
														"src": "49:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:16",
														"nodeType": "YulTypedName",
														"src": "59:6:16",
														"type": ""
													}
												],
												"src": "7:99:16"
											},
											{
												"body": {
													"nativeSrc": "140:152:16",
													"nodeType": "YulBlock",
													"src": "140:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:16",
																		"nodeType": "YulLiteral",
																		"src": "157:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:16",
																		"nodeType": "YulLiteral",
																		"src": "160:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:16"
																},
																"nativeSrc": "150:88:16",
																"nodeType": "YulFunctionCall",
																"src": "150:88:16"
															},
															"nativeSrc": "150:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:16",
																		"nodeType": "YulLiteral",
																		"src": "254:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:16",
																		"nodeType": "YulLiteral",
																		"src": "257:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:16"
																},
																"nativeSrc": "247:15:16",
																"nodeType": "YulFunctionCall",
																"src": "247:15:16"
															},
															"nativeSrc": "247:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:16",
																		"nodeType": "YulLiteral",
																		"src": "278:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:16",
																		"nodeType": "YulLiteral",
																		"src": "281:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:16"
																},
																"nativeSrc": "271:15:16",
																"nodeType": "YulFunctionCall",
																"src": "271:15:16"
															},
															"nativeSrc": "271:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:16"
											},
											{
												"body": {
													"nativeSrc": "326:152:16",
													"nodeType": "YulBlock",
													"src": "326:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:16",
																		"nodeType": "YulLiteral",
																		"src": "343:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:16",
																		"nodeType": "YulLiteral",
																		"src": "346:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:16"
																},
																"nativeSrc": "336:88:16",
																"nodeType": "YulFunctionCall",
																"src": "336:88:16"
															},
															"nativeSrc": "336:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:16",
																		"nodeType": "YulLiteral",
																		"src": "440:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:16",
																		"nodeType": "YulLiteral",
																		"src": "443:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:16"
																},
																"nativeSrc": "433:15:16",
																"nodeType": "YulFunctionCall",
																"src": "433:15:16"
															},
															"nativeSrc": "433:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:16",
																		"nodeType": "YulLiteral",
																		"src": "464:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:16",
																		"nodeType": "YulLiteral",
																		"src": "467:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:16"
																},
																"nativeSrc": "457:15:16",
																"nodeType": "YulFunctionCall",
																"src": "457:15:16"
															},
															"nativeSrc": "457:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:16"
											},
											{
												"body": {
													"nativeSrc": "535:269:16",
													"nodeType": "YulBlock",
													"src": "535:269:16",
													"statements": [
														{
															"nativeSrc": "545:22:16",
															"nodeType": "YulAssignment",
															"src": "545:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:16",
																		"nodeType": "YulLiteral",
																		"src": "565:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:16"
																},
																"nativeSrc": "555:12:16",
																"nodeType": "YulFunctionCall",
																"src": "555:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:16"
																}
															]
														},
														{
															"nativeSrc": "576:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:16",
																		"nodeType": "YulLiteral",
																		"src": "612:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:16"
																},
																"nativeSrc": "602:12:16",
																"nodeType": "YulFunctionCall",
																"src": "602:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:16",
																	"nodeType": "YulTypedName",
																	"src": "580:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:16",
																"nodeType": "YulBlock",
																"src": "653:51:16",
																"statements": [
																	{
																		"nativeSrc": "667:27:16",
																		"nodeType": "YulAssignment",
																		"src": "667:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:16",
																					"nodeType": "YulLiteral",
																					"src": "689:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:16"
																			},
																			"nativeSrc": "677:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:16"
																},
																"nativeSrc": "626:26:16",
																"nodeType": "YulFunctionCall",
																"src": "626:26:16"
															},
															"nativeSrc": "623:81:16",
															"nodeType": "YulIf",
															"src": "623:81:16"
														},
														{
															"body": {
																"nativeSrc": "756:42:16",
																"nodeType": "YulBlock",
																"src": "756:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:16"
																			},
																			"nativeSrc": "770:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:16"
																		},
																		"nativeSrc": "770:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:16",
																				"nodeType": "YulLiteral",
																				"src": "751:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:16"
																		},
																		"nativeSrc": "740:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:16"
																},
																"nativeSrc": "717:38:16",
																"nodeType": "YulFunctionCall",
																"src": "717:38:16"
															},
															"nativeSrc": "714:84:16",
															"nodeType": "YulIf",
															"src": "714:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:16",
														"nodeType": "YulTypedName",
														"src": "519:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:16",
														"nodeType": "YulTypedName",
														"src": "528:6:16",
														"type": ""
													}
												],
												"src": "484:320:16"
											},
											{
												"body": {
													"nativeSrc": "864:87:16",
													"nodeType": "YulBlock",
													"src": "864:87:16",
													"statements": [
														{
															"nativeSrc": "874:11:16",
															"nodeType": "YulAssignment",
															"src": "874:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:16",
																"nodeType": "YulIdentifier",
																"src": "882:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:16",
																		"nodeType": "YulLiteral",
																		"src": "902:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:16"
																},
																"nativeSrc": "895:14:16",
																"nodeType": "YulFunctionCall",
																"src": "895:14:16"
															},
															"nativeSrc": "895:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:16"
														},
														{
															"nativeSrc": "918:26:16",
															"nodeType": "YulAssignment",
															"src": "918:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:16",
																		"nodeType": "YulLiteral",
																		"src": "936:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:16",
																		"nodeType": "YulLiteral",
																		"src": "939:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:16"
																},
																"nativeSrc": "926:18:16",
																"nodeType": "YulFunctionCall",
																"src": "926:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:16",
														"nodeType": "YulTypedName",
														"src": "851:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:16",
														"nodeType": "YulTypedName",
														"src": "859:4:16",
														"type": ""
													}
												],
												"src": "810:141:16"
											},
											{
												"body": {
													"nativeSrc": "1001:49:16",
													"nodeType": "YulBlock",
													"src": "1001:49:16",
													"statements": [
														{
															"nativeSrc": "1011:33:16",
															"nodeType": "YulAssignment",
															"src": "1011:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:16"
																		},
																		"nativeSrc": "1025:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:16"
																},
																"nativeSrc": "1021:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:16",
														"nodeType": "YulTypedName",
														"src": "984:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:16",
														"nodeType": "YulTypedName",
														"src": "994:6:16",
														"type": ""
													}
												],
												"src": "957:93:16"
											},
											{
												"body": {
													"nativeSrc": "1109:54:16",
													"nodeType": "YulBlock",
													"src": "1109:54:16",
													"statements": [
														{
															"nativeSrc": "1119:37:16",
															"nodeType": "YulAssignment",
															"src": "1119:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:16"
																},
																"nativeSrc": "1140:16:16",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:16",
														"nodeType": "YulTypedName",
														"src": "1084:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:16",
														"nodeType": "YulTypedName",
														"src": "1090:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:16",
														"nodeType": "YulTypedName",
														"src": "1100:8:16",
														"type": ""
													}
												],
												"src": "1056:107:16"
											},
											{
												"body": {
													"nativeSrc": "1245:317:16",
													"nodeType": "YulBlock",
													"src": "1245:317:16",
													"statements": [
														{
															"nativeSrc": "1255:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:16"
																},
																"nativeSrc": "1272:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:16",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:16",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:16"
																},
																"nativeSrc": "1311:97:16",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:16",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:16",
															"nodeType": "YulAssignment",
															"src": "1417:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:16"
																},
																"nativeSrc": "1429:39:16",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:16"
																}
															]
														},
														{
															"nativeSrc": "1477:30:16",
															"nodeType": "YulAssignment",
															"src": "1477:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:16"
																		},
																		"nativeSrc": "1497:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:16"
																},
																"nativeSrc": "1486:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:16"
																}
															]
														},
														{
															"nativeSrc": "1516:40:16",
															"nodeType": "YulAssignment",
															"src": "1516:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:16"
																		},
																		"nativeSrc": "1536:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:16"
																},
																"nativeSrc": "1526:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:16",
														"nodeType": "YulTypedName",
														"src": "1206:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:16",
														"nodeType": "YulTypedName",
														"src": "1213:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:16",
														"nodeType": "YulTypedName",
														"src": "1225:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:16",
														"nodeType": "YulTypedName",
														"src": "1238:6:16",
														"type": ""
													}
												],
												"src": "1169:393:16"
											},
											{
												"body": {
													"nativeSrc": "1613:32:16",
													"nodeType": "YulBlock",
													"src": "1613:32:16",
													"statements": [
														{
															"nativeSrc": "1623:16:16",
															"nodeType": "YulAssignment",
															"src": "1623:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:16",
																"nodeType": "YulIdentifier",
																"src": "1634:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:16",
														"nodeType": "YulTypedName",
														"src": "1595:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:16",
														"nodeType": "YulTypedName",
														"src": "1605:7:16",
														"type": ""
													}
												],
												"src": "1568:77:16"
											},
											{
												"body": {
													"nativeSrc": "1683:28:16",
													"nodeType": "YulBlock",
													"src": "1683:28:16",
													"statements": [
														{
															"nativeSrc": "1693:12:16",
															"nodeType": "YulAssignment",
															"src": "1693:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:16",
																"nodeType": "YulIdentifier",
																"src": "1700:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:16",
														"nodeType": "YulTypedName",
														"src": "1669:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:16",
														"nodeType": "YulTypedName",
														"src": "1679:3:16",
														"type": ""
													}
												],
												"src": "1651:60:16"
											},
											{
												"body": {
													"nativeSrc": "1777:82:16",
													"nodeType": "YulBlock",
													"src": "1777:82:16",
													"statements": [
														{
															"nativeSrc": "1787:66:16",
															"nodeType": "YulAssignment",
															"src": "1787:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:16"
																				},
																				"nativeSrc": "1827:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:16"
																		},
																		"nativeSrc": "1818:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:16"
																},
																"nativeSrc": "1800:53:16",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:16",
														"nodeType": "YulTypedName",
														"src": "1757:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:16",
														"nodeType": "YulTypedName",
														"src": "1767:9:16",
														"type": ""
													}
												],
												"src": "1717:142:16"
											},
											{
												"body": {
													"nativeSrc": "1912:28:16",
													"nodeType": "YulBlock",
													"src": "1912:28:16",
													"statements": [
														{
															"nativeSrc": "1922:12:16",
															"nodeType": "YulAssignment",
															"src": "1922:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:16",
																"nodeType": "YulIdentifier",
																"src": "1929:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:16",
														"nodeType": "YulTypedName",
														"src": "1898:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:16",
														"nodeType": "YulTypedName",
														"src": "1908:3:16",
														"type": ""
													}
												],
												"src": "1865:75:16"
											},
											{
												"body": {
													"nativeSrc": "2022:193:16",
													"nodeType": "YulBlock",
													"src": "2022:193:16",
													"statements": [
														{
															"nativeSrc": "2032:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:16"
																},
																"nativeSrc": "2056:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:16",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:16"
																				},
																				"nativeSrc": "2145:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:16"
																				},
																				"nativeSrc": "2166:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:16"
																		},
																		"nativeSrc": "2117:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:16"
																},
																"nativeSrc": "2104:105:16",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:16"
															},
															"nativeSrc": "2104:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:16",
														"nodeType": "YulTypedName",
														"src": "1999:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:16",
														"nodeType": "YulTypedName",
														"src": "2005:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:16",
														"nodeType": "YulTypedName",
														"src": "2013:7:16",
														"type": ""
													}
												],
												"src": "1946:269:16"
											},
											{
												"body": {
													"nativeSrc": "2270:24:16",
													"nodeType": "YulBlock",
													"src": "2270:24:16",
													"statements": [
														{
															"nativeSrc": "2280:8:16",
															"nodeType": "YulAssignment",
															"src": "2280:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:16",
																"nodeType": "YulLiteral",
																"src": "2287:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:16",
														"nodeType": "YulTypedName",
														"src": "2266:3:16",
														"type": ""
													}
												],
												"src": "2221:73:16"
											},
											{
												"body": {
													"nativeSrc": "2353:136:16",
													"nodeType": "YulBlock",
													"src": "2353:136:16",
													"statements": [
														{
															"nativeSrc": "2363:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:16"
																},
																"nativeSrc": "2377:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:16"
																},
																"nativeSrc": "2418:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:16"
															},
															"nativeSrc": "2418:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:16",
														"nodeType": "YulTypedName",
														"src": "2339:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:16",
														"nodeType": "YulTypedName",
														"src": "2345:6:16",
														"type": ""
													}
												],
												"src": "2300:189:16"
											},
											{
												"body": {
													"nativeSrc": "2545:136:16",
													"nodeType": "YulBlock",
													"src": "2545:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:16",
																"nodeType": "YulBlock",
																"src": "2612:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:16"
																			},
																			"nativeSrc": "2626:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:16"
																		},
																		"nativeSrc": "2626:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:16"
																},
																"nativeSrc": "2562:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:16"
															},
															"nativeSrc": "2555:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:16",
																"nodeType": "YulBlock",
																"src": "2577:26:16",
																"statements": [
																	{
																		"nativeSrc": "2579:22:16",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:16"
																			},
																			"nativeSrc": "2588:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:16",
																"nodeType": "YulBlock",
																"src": "2559:2:16",
																"statements": []
															},
															"src": "2555:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:16",
														"nodeType": "YulTypedName",
														"src": "2533:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:16",
														"nodeType": "YulTypedName",
														"src": "2540:3:16",
														"type": ""
													}
												],
												"src": "2495:186:16"
											},
											{
												"body": {
													"nativeSrc": "2766:464:16",
													"nodeType": "YulBlock",
													"src": "2766:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:16",
																"nodeType": "YulBlock",
																"src": "2792:431:16",
																"statements": [
																	{
																		"nativeSrc": "2806:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:16"
																			},
																			"nativeSrc": "2822:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:16",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:16"
																					},
																					"nativeSrc": "2906:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:16"
																			},
																			"nativeSrc": "2892:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:16",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:16",
																			"nodeType": "YulBlock",
																			"src": "3093:27:16",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:16",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:16",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:16"
																			},
																			"nativeSrc": "3074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:16"
																		},
																		"nativeSrc": "3071:49:16",
																		"nodeType": "YulIf",
																		"src": "3071:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:16"
																							},
																							"nativeSrc": "3189:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:16"
																					},
																					"nativeSrc": "3175:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:16"
																			},
																			"nativeSrc": "3133:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:16"
																		},
																		"nativeSrc": "3133:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:16"
																},
																"nativeSrc": "2780:11:16",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:16"
															},
															"nativeSrc": "2777:446:16",
															"nodeType": "YulIf",
															"src": "2777:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:16",
														"nodeType": "YulTypedName",
														"src": "2742:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:16",
														"nodeType": "YulTypedName",
														"src": "2749:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:16",
														"nodeType": "YulTypedName",
														"src": "2754:10:16",
														"type": ""
													}
												],
												"src": "2687:543:16"
											},
											{
												"body": {
													"nativeSrc": "3299:54:16",
													"nodeType": "YulBlock",
													"src": "3299:54:16",
													"statements": [
														{
															"nativeSrc": "3309:37:16",
															"nodeType": "YulAssignment",
															"src": "3309:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:16"
																},
																"nativeSrc": "3330:16:16",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:16",
														"nodeType": "YulTypedName",
														"src": "3274:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:16",
														"nodeType": "YulTypedName",
														"src": "3280:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:16",
														"nodeType": "YulTypedName",
														"src": "3290:8:16",
														"type": ""
													}
												],
												"src": "3236:117:16"
											},
											{
												"body": {
													"nativeSrc": "3410:118:16",
													"nodeType": "YulBlock",
													"src": "3410:118:16",
													"statements": [
														{
															"nativeSrc": "3420:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:16"
																				},
																				"nativeSrc": "3465:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:16"
																				},
																				"nativeSrc": "3480:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:16"
																		},
																		"nativeSrc": "3436:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:16"
																},
																"nativeSrc": "3432:56:16",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:16",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:16",
															"nodeType": "YulAssignment",
															"src": "3497:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:16"
																},
																"nativeSrc": "3507:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:16",
														"nodeType": "YulTypedName",
														"src": "3387:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:16",
														"nodeType": "YulTypedName",
														"src": "3393:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:16",
														"nodeType": "YulTypedName",
														"src": "3403:6:16",
														"type": ""
													}
												],
												"src": "3359:169:16"
											},
											{
												"body": {
													"nativeSrc": "3614:214:16",
													"nodeType": "YulBlock",
													"src": "3614:214:16",
													"statements": [
														{
															"nativeSrc": "3747:37:16",
															"nodeType": "YulAssignment",
															"src": "3747:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:16"
																},
																"nativeSrc": "3755:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:16"
																}
															]
														},
														{
															"nativeSrc": "3793:29:16",
															"nodeType": "YulAssignment",
															"src": "3793:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:16"
																		},
																		"nativeSrc": "3810:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:16"
																},
																"nativeSrc": "3801:21:16",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:16",
														"nodeType": "YulTypedName",
														"src": "3595:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:16",
														"nodeType": "YulTypedName",
														"src": "3601:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:16",
														"nodeType": "YulTypedName",
														"src": "3609:4:16",
														"type": ""
													}
												],
												"src": "3533:295:16"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:16",
													"nodeType": "YulBlock",
													"src": "3925:1303:16",
													"statements": [
														{
															"nativeSrc": "3936:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:16"
																},
																"nativeSrc": "3950:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:16",
																"nodeType": "YulBlock",
																"src": "4072:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:16"
																			},
																			"nativeSrc": "4074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:16"
																		},
																		"nativeSrc": "4074:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:16",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:16"
																},
																"nativeSrc": "4041:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:16"
															},
															"nativeSrc": "4038:56:16",
															"nodeType": "YulIf",
															"src": "4038:56:16"
														},
														{
															"nativeSrc": "4104:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:16"
																		},
																		"nativeSrc": "4144:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:16"
																},
																"nativeSrc": "4118:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:16",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:16"
																},
																"nativeSrc": "4203:67:16",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:16"
															},
															"nativeSrc": "4203:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:16"
														},
														{
															"nativeSrc": "4280:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:16",
																"nodeType": "YulLiteral",
																"src": "4297:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:16",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:16",
															"nodeType": "YulAssignment",
															"src": "4308:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:16",
																"nodeType": "YulLiteral",
																"src": "4321:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:16",
																		"nodeType": "YulBlock",
																		"src": "4372:611:16",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:16",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:16"
																							},
																							"nativeSrc": "4413:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:16"
																					},
																					"nativeSrc": "4401:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:16",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:16"
																					},
																					"nativeSrc": "4451:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:16",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:16",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:16",
																					"nodeType": "YulBlock",
																					"src": "4569:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:16"
																												},
																												"nativeSrc": "4608:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:16"
																										},
																										"nativeSrc": "4602:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:16"
																								},
																								"nativeSrc": "4587:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:16"
																							},
																							"nativeSrc": "4587:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:16"
																						},
																						{
																							"nativeSrc": "4646:24:16",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:16",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:16"
																								},
																								"nativeSrc": "4656:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:16",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:16",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:16"
																								},
																								"nativeSrc": "4700:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:16"
																					},
																					"nativeSrc": "4532:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:16"
																				},
																				"nativeSrc": "4524:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:16",
																					"nodeType": "YulBlock",
																					"src": "4547:21:16",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:16",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:16",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:16"
																								},
																								"nativeSrc": "4554:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:16",
																					"nodeType": "YulBlock",
																					"src": "4528:3:16",
																					"statements": []
																				},
																				"src": "4524:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:16",
																					"nodeType": "YulBlock",
																					"src": "4768:156:16",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:16"
																										},
																										"nativeSrc": "4809:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:16"
																								},
																								"nativeSrc": "4803:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:16",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:16",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:16"
																												},
																												"nativeSrc": "4891:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:16"
																										},
																										"nativeSrc": "4861:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:16"
																								},
																								"nativeSrc": "4846:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:16"
																							},
																							"nativeSrc": "4846:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:16"
																					},
																					"nativeSrc": "4748:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:16"
																				},
																				"nativeSrc": "4745:179:16",
																				"nodeType": "YulIf",
																				"src": "4745:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:16",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:16"
																									},
																									"nativeSrc": "4954:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:16",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:16"
																							},
																							"nativeSrc": "4950:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:16"
																					},
																					"nativeSrc": "4937:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:16"
																				},
																				"nativeSrc": "4937:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:16"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:16",
																	"nodeType": "YulCase",
																	"src": "4365:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:16",
																		"nodeType": "YulBlock",
																		"src": "5000:222:16",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:16",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:16",
																					"nodeType": "YulBlock",
																					"src": "5051:67:16",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:16",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:16"
																										},
																										"nativeSrc": "5084:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:16"
																								},
																								"nativeSrc": "5078:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:16"
																				},
																				"nativeSrc": "5041:77:16",
																				"nodeType": "YulIf",
																				"src": "5041:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:16"
																							},
																							"nativeSrc": "5144:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:16"
																					},
																					"nativeSrc": "5131:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:16"
																				},
																				"nativeSrc": "5131:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:16"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:16",
																	"nodeType": "YulCase",
																	"src": "4992:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:16"
																},
																"nativeSrc": "4342:14:16",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:16"
															},
															"nativeSrc": "4335:887:16",
															"nodeType": "YulSwitch",
															"src": "4335:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:16",
														"nodeType": "YulTypedName",
														"src": "3914:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:16",
														"nodeType": "YulTypedName",
														"src": "3920:3:16",
														"type": ""
													}
												],
												"src": "3833:1395:16"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28BA PUSH1 0x2A SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28E4 PUSH1 0x2A SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28BA PUSH1 0x2A SWAP2 CODECOPY DUP2 MSTORE POP PUSH1 0x7 SWAP1 PUSH1 0x3 PUSH2 0x77 SWAP3 SWAP2 SWAP1 PUSH2 0x116 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x47656D204E465400000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x47454D4E46540000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST POP POP POP PUSH2 0x4F1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x15C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x15B JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x134 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x16D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18C JUMPI PUSH0 DUP2 DUP2 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x16E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x19C SWAP1 PUSH2 0x24C JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1AD JUMPI POP PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E4 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x263 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x21F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x2E2 DUP7 DUP4 PUSH2 0x29D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x326 PUSH2 0x321 PUSH2 0x31C DUP5 PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F DUP4 PUSH2 0x30C JUMP JUMPDEST PUSH2 0x353 PUSH2 0x34B DUP3 PUSH2 0x32D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x372 DUP2 DUP5 DUP5 PUSH2 0x336 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH2 0x38A PUSH0 DUP3 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x378 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3DA JUMPI PUSH2 0x3AB DUP2 PUSH2 0x27C JUMP JUMPDEST PUSH2 0x3B4 DUP5 PUSH2 0x28E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3D7 PUSH2 0x3CF DUP6 PUSH2 0x28E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x377 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FA PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3DF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x412 DUP4 DUP4 PUSH2 0x3EB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42B DUP3 PUSH2 0x1E8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x1F2 JUMP JUMPDEST JUMPDEST PUSH2 0x44E DUP3 SLOAD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x459 DUP3 DUP3 DUP6 PUSH2 0x399 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x48A JUMPI PUSH0 DUP5 ISZERO PUSH2 0x478 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x482 DUP6 DUP3 PUSH2 0x407 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x498 DUP7 PUSH2 0x27C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4BF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4DC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4D8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3EB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x23BC DUP1 PUSH2 0x4FE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xCD279C7C EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x870B1E89 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x263 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x370 JUMPI POP PUSH2 0x36F DUP3 PUSH2 0x941 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x410 DUP3 PUSH2 0xA22 JUMP JUMPDEST POP PUSH2 0x41A DUP3 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x433 DUP3 DUP3 PUSH2 0x42E PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xAE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BA DUP4 DUP4 PUSH2 0x4B5 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x550 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x772 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x55F DUP3 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C8 DUP3 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x1F61 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x647 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x695 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xD05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6DB SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x752 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x729 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x752 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x735 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x767 PUSH2 0xAE1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD5F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x77D DUP5 DUP5 DUP5 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x789 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x79A DUP3 PUSH2 0xA22 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x7B8 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E4 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x82F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x812 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x83F PUSH2 0x107A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x853 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x887 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x86F SWAP3 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH2 0x890 DUP5 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A4 DUP4 DUP4 PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x8AE DUP3 DUP3 PUSH2 0xD05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA0B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xA1B JUMPI POP PUSH2 0xA1A DUP3 PUSH2 0x1113 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA2D DUP4 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB05 DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB46 JUMPI PUSH2 0xB45 DUP2 DUP5 DUP7 PUSH2 0x1374 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH2 0xB85 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1074 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF0B PUSH2 0xAE1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF68 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFE9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFE1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1072 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x109B DUP3 PUSH2 0xA22 JUMP JUMPDEST POP PUSH0 PUSH2 0x10A5 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x10C3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x10EE JUMP JUMPDEST DUP1 PUSH2 0x10CD DUP5 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10DE SWAP3 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1501 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11ED JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x131F JUMPI PUSH0 PUSH2 0x11FC DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1266 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1279 JUMPI POP PUSH2 0x1277 DUP2 DUP5 PUSH2 0x8B3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12BB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B2 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x131D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x137F DUP4 DUP4 DUP4 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1432 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EA SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1429 SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1445 DUP5 PUSH2 0x15DC JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1495 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14F6 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x14A2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150B DUP4 DUP4 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1517 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15D3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1594 JUMPI POP PUSH2 0x1593 DUP5 DUP5 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x15D2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15BA DUP4 PUSH2 0xAA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1638 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x162E JUMPI PUSH2 0x162D PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1675 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16A4 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x169A JUMPI PUSH2 0x1699 PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16CD JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16F2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16E8 JUMPI PUSH2 0x16E7 PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1715 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1724 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x179D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x17A9 DUP4 DUP4 PUSH0 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x181B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x1831 JUMP JUMPDEST DUP2 EQ PUSH2 0x186F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1880 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1872 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C5 DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18DE PUSH0 DUP4 ADD DUP5 PUSH2 0x18BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1926 DUP3 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x1930 DUP2 DUP6 PUSH2 0x18EE JUMP JUMPDEST SWAP4 POP PUSH2 0x1940 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x1949 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x196C DUP2 DUP5 PUSH2 0x191C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x1974 JUMP JUMPDEST DUP2 EQ PUSH2 0x1990 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A1 DUP2 PUSH2 0x197D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BC JUMPI PUSH2 0x19BB PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FB DUP3 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0B DUP2 PUSH2 0x19F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A24 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A33 DUP2 PUSH2 0x19F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A3D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4E DUP2 PUSH2 0x1A2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A77 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AB6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AC7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AD8 DUP7 DUP3 DUP8 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF7 JUMPI PUSH2 0x1AF6 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B04 DUP5 DUP3 DUP6 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B16 DUP2 PUSH2 0x1974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2F PUSH0 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B58 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B69 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7C DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B97 DUP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB3 JUMPI PUSH2 0x1BB2 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C19 DUP3 PUSH2 0x190C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C38 JUMPI PUSH2 0x1C37 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C4A PUSH2 0x1820 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C56 DUP3 DUP3 PUSH2 0x1C10 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C7E DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAB PUSH2 0x1CA6 DUP5 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CC7 JUMPI PUSH2 0x1CC6 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH2 0x1CD2 DUP5 DUP3 DUP6 PUSH2 0x1C8B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x1BDB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D1F JUMPI PUSH2 0x1D1E PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2C DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D3D DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D4E DUP8 DUP3 DUP9 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x182D JUMP JUMPDEST JUMPDEST PUSH2 0x1D7B DUP8 DUP3 DUP9 ADD PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DA1 JUMPI PUSH2 0x1DA0 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH2 0x1DAA DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC9 PUSH2 0x1DC4 DUP5 PUSH2 0x1D87 JUMP JUMPDEST PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DE5 JUMPI PUSH2 0x1DE4 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH2 0x1DF0 DUP5 DUP3 DUP6 PUSH2 0x1C8B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E0C JUMPI PUSH2 0x1E0B PUSH2 0x1BDB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E1C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3B PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E49 DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E5A DUP7 DUP3 DUP8 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7A PUSH2 0x182D JUMP JUMPDEST JUMPDEST PUSH2 0x1E87 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1ECF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F3F PUSH0 DUP4 ADD DUP7 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1F4C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x1F59 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A02 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA2 DUP3 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x1FAC DUP2 DUP6 PUSH2 0x1F8E JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD3 DUP3 DUP6 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDF DUP3 DUP5 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2047 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x200C JUMP JUMPDEST PUSH2 0x2051 DUP7 DUP4 PUSH2 0x200C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208C PUSH2 0x2087 PUSH2 0x2082 DUP5 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x2069 JUMP JUMPDEST PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A5 DUP4 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x20B9 PUSH2 0x20B1 DUP3 PUSH2 0x2093 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2018 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x20CD PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x20D8 DUP2 DUP5 DUP5 PUSH2 0x209C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20FB JUMPI PUSH2 0x20F0 PUSH0 DUP3 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2140 JUMPI PUSH2 0x2111 DUP2 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x211A DUP5 PUSH2 0x1FFD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2129 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x213D PUSH2 0x2135 DUP6 PUSH2 0x1FFD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x20DD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2160 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2145 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2178 DUP4 DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2191 DUP3 PUSH2 0x18E4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH2 0x21B4 DUP3 SLOAD PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x21BF DUP3 DUP3 DUP6 PUSH2 0x20FF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21F0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x21E8 DUP6 DUP3 PUSH2 0x216D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x224F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21FE DUP7 PUSH2 0x1FEB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2225 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2200 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2242 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x223E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2151 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x227B DUP3 PUSH2 0x2257 JUMP JUMPDEST PUSH2 0x2285 DUP2 DUP6 PUSH2 0x2261 JUMP JUMPDEST SWAP4 POP PUSH2 0x2295 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x229E DUP2 PUSH2 0x190C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22BC PUSH0 DUP4 ADD DUP8 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x22C9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x22D6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22E8 DUP2 DUP5 PUSH2 0x2271 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2301 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231C JUMPI PUSH2 0x231B PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2329 DUP5 DUP3 DUP6 ADD PUSH2 0x22F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x2352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x537B4434DB908CDC6A38D1EF 0xBC RETURN 0xBB 0xD2 DUP9 0xEF CODESIZE 0xEA 0xC GAS PUSH4 0x99C7F590 0xC2 0xCA 0xC5 PUSH31 0x64736F6C6343000819003368747470733A2F2F6170692E6E706F696E742E69 PUSH16 0x2F323336376135346133386337396262 PUSH6 0x396139356874 PUSH21 0x70733A2F2F6170692E6E706F696E742E696F2F3662 PUSH5 0x6361306231 PUSH2 0x6239 PUSH4 0x35353039 CALLVALUE BALANCE BALANCE ADDRESS ",
							"sourceMap": "138:559:15:-:0;;;192:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;384:58;;;;;;;;;;1381:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;138:559:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:16:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;138:559:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1042": {
									"entryPoint": 4533,
									"id": 1042,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_976": {
									"entryPoint": 2792,
									"id": 976,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_369": {
									"entryPoint": 4218,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_624": {
									"entryPoint": 4980,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1172": {
									"entryPoint": 3784,
									"id": 1172,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_551": {
									"entryPoint": 2728,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_587": {
									"entryPoint": 5404,
									"id": 587,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_780": {
									"entryPoint": 5933,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1474": {
									"entryPoint": 2785,
									"id": 1474,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_538": {
									"entryPoint": 4476,
									"id": 538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1108": {
									"entryPoint": 2594,
									"id": 1108,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_795": {
									"entryPoint": 4342,
									"id": 795,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_821": {
									"entryPoint": 5377,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1079": {
									"entryPoint": 3423,
									"id": 1079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1433": {
									"entryPoint": 3333,
									"id": 1433,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_730": {
									"entryPoint": 2810,
									"id": 730,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_385": {
									"entryPoint": 1057,
									"id": 385,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_293": {
									"entryPoint": 1382,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeUri_2775": {
									"entryPoint": 1564,
									"id": 2775,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getApproved_402": {
									"entryPoint": 1030,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_435": {
									"entryPoint": 2227,
									"id": 435,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2452": {
									"entryPoint": 5596,
									"id": 2452,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_315": {
									"entryPoint": 887,
									"id": 315,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_306": {
									"entryPoint": 1365,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeMint_2760": {
									"entryPoint": 2202,
									"id": 2760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_499": {
									"entryPoint": 1334,
									"id": 499,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_525": {
									"entryPoint": 1906,
									"id": 525,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_418": {
									"entryPoint": 1884,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1357": {
									"entryPoint": 791,
									"id": 1357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1736": {
									"entryPoint": 4371,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_265": {
									"entryPoint": 2369,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_324": {
									"entryPoint": 1740,
									"id": 324,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1543": {
									"entryPoint": 5175,
									"id": 1543,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1414": {
									"entryPoint": 1935,
									"id": 1414,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_360": {
									"entryPoint": 4240,
									"id": 360,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_481": {
									"entryPoint": 1079,
									"id": 481,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7607,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8136,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7980,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8447,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 9049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8033,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8216,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21560:16",
										"nodeType": "YulBlock",
										"src": "0:21560:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "378:105:16",
													"nodeType": "YulBlock",
													"src": "378:105:16",
													"statements": [
														{
															"nativeSrc": "388:89:16",
															"nodeType": "YulAssignment",
															"src": "388:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:16",
																		"nodeType": "YulLiteral",
																		"src": "410:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:16"
																},
																"nativeSrc": "399:78:16",
																"nodeType": "YulFunctionCall",
																"src": "399:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:16",
														"nodeType": "YulTypedName",
														"src": "360:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:16",
														"nodeType": "YulTypedName",
														"src": "370:7:16",
														"type": ""
													}
												],
												"src": "334:149:16"
											},
											{
												"body": {
													"nativeSrc": "531:78:16",
													"nodeType": "YulBlock",
													"src": "531:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:16",
																"nodeType": "YulBlock",
																"src": "587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:16",
																					"nodeType": "YulLiteral",
																					"src": "596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:16"
																			},
																			"nativeSrc": "589:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:16"
																		},
																		"nativeSrc": "589:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:16"
																				},
																				"nativeSrc": "561:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:16"
																		},
																		"nativeSrc": "551:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:16"
																},
																"nativeSrc": "544:42:16",
																"nodeType": "YulFunctionCall",
																"src": "544:42:16"
															},
															"nativeSrc": "541:62:16",
															"nodeType": "YulIf",
															"src": "541:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:16",
														"nodeType": "YulTypedName",
														"src": "524:5:16",
														"type": ""
													}
												],
												"src": "489:120:16"
											},
											{
												"body": {
													"nativeSrc": "666:86:16",
													"nodeType": "YulBlock",
													"src": "666:86:16",
													"statements": [
														{
															"nativeSrc": "676:29:16",
															"nodeType": "YulAssignment",
															"src": "676:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:16"
																},
																"nativeSrc": "685:20:16",
																"nodeType": "YulFunctionCall",
																"src": "685:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:16"
																},
																"nativeSrc": "714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "714:32:16"
															},
															"nativeSrc": "714:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:16",
														"nodeType": "YulTypedName",
														"src": "644:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:16",
														"nodeType": "YulTypedName",
														"src": "652:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:16",
														"nodeType": "YulTypedName",
														"src": "660:5:16",
														"type": ""
													}
												],
												"src": "615:137:16"
											},
											{
												"body": {
													"nativeSrc": "823:262:16",
													"nodeType": "YulBlock",
													"src": "823:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:16",
																"nodeType": "YulBlock",
																"src": "869:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:16"
																			},
																			"nativeSrc": "871:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:16"
																		},
																		"nativeSrc": "871:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:16"
																		},
																		"nativeSrc": "840:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:16",
																		"nodeType": "YulLiteral",
																		"src": "865:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:16"
																},
																"nativeSrc": "836:32:16",
																"nodeType": "YulFunctionCall",
																"src": "836:32:16"
															},
															"nativeSrc": "833:119:16",
															"nodeType": "YulIf",
															"src": "833:119:16"
														},
														{
															"nativeSrc": "962:116:16",
															"nodeType": "YulBlock",
															"src": "962:116:16",
															"statements": [
																{
																	"nativeSrc": "977:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:16",
																		"nodeType": "YulLiteral",
																		"src": "991:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:16",
																			"nodeType": "YulTypedName",
																			"src": "981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:16",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:16"
																				},
																				"nativeSrc": "1036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:16"
																		},
																		"nativeSrc": "1016:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:16",
														"nodeType": "YulTypedName",
														"src": "793:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:16",
														"nodeType": "YulTypedName",
														"src": "804:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:16",
														"nodeType": "YulTypedName",
														"src": "816:6:16",
														"type": ""
													}
												],
												"src": "758:327:16"
											},
											{
												"body": {
													"nativeSrc": "1133:48:16",
													"nodeType": "YulBlock",
													"src": "1133:48:16",
													"statements": [
														{
															"nativeSrc": "1143:32:16",
															"nodeType": "YulAssignment",
															"src": "1143:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:16"
																		},
																		"nativeSrc": "1161:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:16"
																},
																"nativeSrc": "1154:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:16",
														"nodeType": "YulTypedName",
														"src": "1115:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:16",
														"nodeType": "YulTypedName",
														"src": "1125:7:16",
														"type": ""
													}
												],
												"src": "1091:90:16"
											},
											{
												"body": {
													"nativeSrc": "1246:50:16",
													"nodeType": "YulBlock",
													"src": "1246:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:16"
																		},
																		"nativeSrc": "1268:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																},
																"nativeSrc": "1256:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:16"
															},
															"nativeSrc": "1256:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:16",
														"nodeType": "YulTypedName",
														"src": "1234:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:16",
														"nodeType": "YulTypedName",
														"src": "1241:3:16",
														"type": ""
													}
												],
												"src": "1187:109:16"
											},
											{
												"body": {
													"nativeSrc": "1394:118:16",
													"nodeType": "YulBlock",
													"src": "1394:118:16",
													"statements": [
														{
															"nativeSrc": "1404:26:16",
															"nodeType": "YulAssignment",
															"src": "1404:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:16"
																},
																"nativeSrc": "1412:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:16"
																		},
																		"nativeSrc": "1487:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:16"
																},
																"nativeSrc": "1440:65:16",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:16"
															},
															"nativeSrc": "1440:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:16",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:16",
														"nodeType": "YulTypedName",
														"src": "1378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:16",
														"nodeType": "YulTypedName",
														"src": "1389:4:16",
														"type": ""
													}
												],
												"src": "1302:210:16"
											},
											{
												"body": {
													"nativeSrc": "1577:40:16",
													"nodeType": "YulBlock",
													"src": "1577:40:16",
													"statements": [
														{
															"nativeSrc": "1588:22:16",
															"nodeType": "YulAssignment",
															"src": "1588:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:16"
																},
																"nativeSrc": "1598:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:16",
														"nodeType": "YulTypedName",
														"src": "1560:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:16",
														"nodeType": "YulTypedName",
														"src": "1570:6:16",
														"type": ""
													}
												],
												"src": "1518:99:16"
											},
											{
												"body": {
													"nativeSrc": "1719:73:16",
													"nodeType": "YulBlock",
													"src": "1719:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:16"
																},
																"nativeSrc": "1729:19:16",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:16"
															},
															"nativeSrc": "1729:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:16"
														},
														{
															"nativeSrc": "1757:29:16",
															"nodeType": "YulAssignment",
															"src": "1757:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:16"
																},
																"nativeSrc": "1772:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:16",
														"nodeType": "YulTypedName",
														"src": "1691:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:16",
														"nodeType": "YulTypedName",
														"src": "1696:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:16",
														"nodeType": "YulTypedName",
														"src": "1707:11:16",
														"type": ""
													}
												],
												"src": "1623:169:16"
											},
											{
												"body": {
													"nativeSrc": "1860:77:16",
													"nodeType": "YulBlock",
													"src": "1860:77:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:16"
																},
																"nativeSrc": "1871:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:16"
															},
															"nativeSrc": "1871:23:16",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:16"
																		},
																		"nativeSrc": "1910:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:16"
																},
																"nativeSrc": "1903:27:16",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:16"
															},
															"nativeSrc": "1903:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:16",
														"nodeType": "YulTypedName",
														"src": "1842:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:16",
														"nodeType": "YulTypedName",
														"src": "1847:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:16",
														"nodeType": "YulTypedName",
														"src": "1852:6:16",
														"type": ""
													}
												],
												"src": "1798:139:16"
											},
											{
												"body": {
													"nativeSrc": "1991:54:16",
													"nodeType": "YulBlock",
													"src": "1991:54:16",
													"statements": [
														{
															"nativeSrc": "2001:38:16",
															"nodeType": "YulAssignment",
															"src": "2001:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:16"
																		},
																		"nativeSrc": "2015:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:16"
																		},
																		"nativeSrc": "2031:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:16"
																},
																"nativeSrc": "2011:28:16",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:16",
														"nodeType": "YulTypedName",
														"src": "1974:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:16",
														"nodeType": "YulTypedName",
														"src": "1984:6:16",
														"type": ""
													}
												],
												"src": "1943:102:16"
											},
											{
												"body": {
													"nativeSrc": "2143:285:16",
													"nodeType": "YulBlock",
													"src": "2143:285:16",
													"statements": [
														{
															"nativeSrc": "2153:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:16"
																},
																"nativeSrc": "2167:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:16",
															"nodeType": "YulAssignment",
															"src": "2215:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:16"
																},
																"nativeSrc": "2222:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:16",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:16"
																		},
																		"nativeSrc": "2337:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:16"
																},
																"nativeSrc": "2302:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:16"
															},
															"nativeSrc": "2302:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:16"
														},
														{
															"nativeSrc": "2376:46:16",
															"nodeType": "YulAssignment",
															"src": "2376:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:16"
																		},
																		"nativeSrc": "2392:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:16"
																},
																"nativeSrc": "2383:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:16",
														"nodeType": "YulTypedName",
														"src": "2124:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:16",
														"nodeType": "YulTypedName",
														"src": "2131:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:16",
														"nodeType": "YulTypedName",
														"src": "2139:3:16",
														"type": ""
													}
												],
												"src": "2051:377:16"
											},
											{
												"body": {
													"nativeSrc": "2552:195:16",
													"nodeType": "YulBlock",
													"src": "2552:195:16",
													"statements": [
														{
															"nativeSrc": "2562:26:16",
															"nodeType": "YulAssignment",
															"src": "2562:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:16"
																},
																"nativeSrc": "2570:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:16"
																		},
																		"nativeSrc": "2605:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:16"
																		},
																		"nativeSrc": "2624:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:16"
																},
																"nativeSrc": "2598:47:16",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:16"
															},
															"nativeSrc": "2598:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:16"
														},
														{
															"nativeSrc": "2654:86:16",
															"nodeType": "YulAssignment",
															"src": "2654:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:16"
																},
																"nativeSrc": "2662:78:16",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:16",
														"nodeType": "YulTypedName",
														"src": "2524:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:16",
														"nodeType": "YulTypedName",
														"src": "2536:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:16",
														"nodeType": "YulTypedName",
														"src": "2547:4:16",
														"type": ""
													}
												],
												"src": "2434:313:16"
											},
											{
												"body": {
													"nativeSrc": "2798:32:16",
													"nodeType": "YulBlock",
													"src": "2798:32:16",
													"statements": [
														{
															"nativeSrc": "2808:16:16",
															"nodeType": "YulAssignment",
															"src": "2808:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:16",
																"nodeType": "YulIdentifier",
																"src": "2819:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:16",
														"nodeType": "YulTypedName",
														"src": "2780:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:16",
														"nodeType": "YulTypedName",
														"src": "2790:7:16",
														"type": ""
													}
												],
												"src": "2753:77:16"
											},
											{
												"body": {
													"nativeSrc": "2879:79:16",
													"nodeType": "YulBlock",
													"src": "2879:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:16",
																"nodeType": "YulBlock",
																"src": "2936:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:16"
																			},
																			"nativeSrc": "2938:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:16"
																		},
																		"nativeSrc": "2938:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:16"
																				},
																				"nativeSrc": "2909:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:16"
																		},
																		"nativeSrc": "2899:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:16"
																},
																"nativeSrc": "2892:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:16"
															},
															"nativeSrc": "2889:63:16",
															"nodeType": "YulIf",
															"src": "2889:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:16",
														"nodeType": "YulTypedName",
														"src": "2872:5:16",
														"type": ""
													}
												],
												"src": "2836:122:16"
											},
											{
												"body": {
													"nativeSrc": "3016:87:16",
													"nodeType": "YulBlock",
													"src": "3016:87:16",
													"statements": [
														{
															"nativeSrc": "3026:29:16",
															"nodeType": "YulAssignment",
															"src": "3026:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:16"
																},
																"nativeSrc": "3035:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:16"
																},
																"nativeSrc": "3064:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:16"
															},
															"nativeSrc": "3064:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:16",
														"nodeType": "YulTypedName",
														"src": "2994:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:16",
														"nodeType": "YulTypedName",
														"src": "3002:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:16",
														"nodeType": "YulTypedName",
														"src": "3010:5:16",
														"type": ""
													}
												],
												"src": "2964:139:16"
											},
											{
												"body": {
													"nativeSrc": "3175:263:16",
													"nodeType": "YulBlock",
													"src": "3175:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:16",
																"nodeType": "YulBlock",
																"src": "3221:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:16"
																			},
																			"nativeSrc": "3223:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:16"
																		},
																		"nativeSrc": "3223:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:16"
																		},
																		"nativeSrc": "3192:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:16"
																},
																"nativeSrc": "3188:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:16"
															},
															"nativeSrc": "3185:119:16",
															"nodeType": "YulIf",
															"src": "3185:119:16"
														},
														{
															"nativeSrc": "3314:117:16",
															"nodeType": "YulBlock",
															"src": "3314:117:16",
															"statements": [
																{
																	"nativeSrc": "3329:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:16"
																				},
																				"nativeSrc": "3389:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:16"
																		},
																		"nativeSrc": "3368:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:16",
														"nodeType": "YulTypedName",
														"src": "3145:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:16",
														"nodeType": "YulTypedName",
														"src": "3156:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:16",
														"nodeType": "YulTypedName",
														"src": "3168:6:16",
														"type": ""
													}
												],
												"src": "3109:329:16"
											},
											{
												"body": {
													"nativeSrc": "3489:81:16",
													"nodeType": "YulBlock",
													"src": "3489:81:16",
													"statements": [
														{
															"nativeSrc": "3499:65:16",
															"nodeType": "YulAssignment",
															"src": "3499:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:16",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:16"
																},
																"nativeSrc": "3510:54:16",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:16",
														"nodeType": "YulTypedName",
														"src": "3471:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:16",
														"nodeType": "YulTypedName",
														"src": "3481:7:16",
														"type": ""
													}
												],
												"src": "3444:126:16"
											},
											{
												"body": {
													"nativeSrc": "3621:51:16",
													"nodeType": "YulBlock",
													"src": "3621:51:16",
													"statements": [
														{
															"nativeSrc": "3631:35:16",
															"nodeType": "YulAssignment",
															"src": "3631:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:16"
																},
																"nativeSrc": "3642:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:16",
														"nodeType": "YulTypedName",
														"src": "3603:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:16",
														"nodeType": "YulTypedName",
														"src": "3613:7:16",
														"type": ""
													}
												],
												"src": "3576:96:16"
											},
											{
												"body": {
													"nativeSrc": "3743:53:16",
													"nodeType": "YulBlock",
													"src": "3743:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:16"
																		},
																		"nativeSrc": "3765:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:16"
																},
																"nativeSrc": "3753:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:16"
															},
															"nativeSrc": "3753:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:16",
														"nodeType": "YulTypedName",
														"src": "3731:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:16",
														"nodeType": "YulTypedName",
														"src": "3738:3:16",
														"type": ""
													}
												],
												"src": "3678:118:16"
											},
											{
												"body": {
													"nativeSrc": "3900:124:16",
													"nodeType": "YulBlock",
													"src": "3900:124:16",
													"statements": [
														{
															"nativeSrc": "3910:26:16",
															"nodeType": "YulAssignment",
															"src": "3910:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:16"
																},
																"nativeSrc": "3918:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:16"
																		},
																		"nativeSrc": "3999:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:16"
																},
																"nativeSrc": "3946:71:16",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:16"
															},
															"nativeSrc": "3946:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:16",
														"nodeType": "YulTypedName",
														"src": "3872:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:16",
														"nodeType": "YulTypedName",
														"src": "3884:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:16",
														"nodeType": "YulTypedName",
														"src": "3895:4:16",
														"type": ""
													}
												],
												"src": "3802:222:16"
											},
											{
												"body": {
													"nativeSrc": "4073:79:16",
													"nodeType": "YulBlock",
													"src": "4073:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:16",
																"nodeType": "YulBlock",
																"src": "4130:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:16"
																			},
																			"nativeSrc": "4132:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:16"
																		},
																		"nativeSrc": "4132:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:16"
																				},
																				"nativeSrc": "4103:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:16"
																		},
																		"nativeSrc": "4093:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:16"
																},
																"nativeSrc": "4086:43:16",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:16"
															},
															"nativeSrc": "4083:63:16",
															"nodeType": "YulIf",
															"src": "4083:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:16",
														"nodeType": "YulTypedName",
														"src": "4066:5:16",
														"type": ""
													}
												],
												"src": "4030:122:16"
											},
											{
												"body": {
													"nativeSrc": "4210:87:16",
													"nodeType": "YulBlock",
													"src": "4210:87:16",
													"statements": [
														{
															"nativeSrc": "4220:29:16",
															"nodeType": "YulAssignment",
															"src": "4220:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:16"
																},
																"nativeSrc": "4229:20:16",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:16"
																},
																"nativeSrc": "4258:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:16"
															},
															"nativeSrc": "4258:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:16",
														"nodeType": "YulTypedName",
														"src": "4188:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:16",
														"nodeType": "YulTypedName",
														"src": "4196:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:16",
														"nodeType": "YulTypedName",
														"src": "4204:5:16",
														"type": ""
													}
												],
												"src": "4158:139:16"
											},
											{
												"body": {
													"nativeSrc": "4386:391:16",
													"nodeType": "YulBlock",
													"src": "4386:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:16",
																"nodeType": "YulBlock",
																"src": "4432:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:16"
																			},
																			"nativeSrc": "4434:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:16"
																		},
																		"nativeSrc": "4434:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:16"
																		},
																		"nativeSrc": "4403:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:16"
																},
																"nativeSrc": "4399:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:16"
															},
															"nativeSrc": "4396:119:16",
															"nodeType": "YulIf",
															"src": "4396:119:16"
														},
														{
															"nativeSrc": "4525:117:16",
															"nodeType": "YulBlock",
															"src": "4525:117:16",
															"statements": [
																{
																	"nativeSrc": "4540:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:16"
																				},
																				"nativeSrc": "4600:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:16"
																		},
																		"nativeSrc": "4579:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:16",
															"nodeType": "YulBlock",
															"src": "4652:118:16",
															"statements": [
																{
																	"nativeSrc": "4667:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:16"
																				},
																				"nativeSrc": "4728:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:16"
																		},
																		"nativeSrc": "4707:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:16",
														"nodeType": "YulTypedName",
														"src": "4348:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:16",
														"nodeType": "YulTypedName",
														"src": "4359:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:16",
														"nodeType": "YulTypedName",
														"src": "4371:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:16",
														"nodeType": "YulTypedName",
														"src": "4379:6:16",
														"type": ""
													}
												],
												"src": "4303:474:16"
											},
											{
												"body": {
													"nativeSrc": "4883:519:16",
													"nodeType": "YulBlock",
													"src": "4883:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:16",
																"nodeType": "YulBlock",
																"src": "4929:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:16"
																			},
																			"nativeSrc": "4931:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:16"
																		},
																		"nativeSrc": "4931:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:16"
																		},
																		"nativeSrc": "4900:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:16"
																},
																"nativeSrc": "4896:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:16"
															},
															"nativeSrc": "4893:119:16",
															"nodeType": "YulIf",
															"src": "4893:119:16"
														},
														{
															"nativeSrc": "5022:117:16",
															"nodeType": "YulBlock",
															"src": "5022:117:16",
															"statements": [
																{
																	"nativeSrc": "5037:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:16"
																				},
																				"nativeSrc": "5097:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:16"
																		},
																		"nativeSrc": "5076:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:16",
															"nodeType": "YulBlock",
															"src": "5149:118:16",
															"statements": [
																{
																	"nativeSrc": "5164:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:16"
																				},
																				"nativeSrc": "5225:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:16"
																		},
																		"nativeSrc": "5204:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:16",
															"nodeType": "YulBlock",
															"src": "5277:118:16",
															"statements": [
																{
																	"nativeSrc": "5292:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:16"
																				},
																				"nativeSrc": "5353:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:16"
																		},
																		"nativeSrc": "5332:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:16",
														"nodeType": "YulTypedName",
														"src": "4837:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:16",
														"nodeType": "YulTypedName",
														"src": "4848:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:16",
														"nodeType": "YulTypedName",
														"src": "4860:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:16",
														"nodeType": "YulTypedName",
														"src": "4868:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:16",
														"nodeType": "YulTypedName",
														"src": "4876:6:16",
														"type": ""
													}
												],
												"src": "4783:619:16"
											},
											{
												"body": {
													"nativeSrc": "5474:263:16",
													"nodeType": "YulBlock",
													"src": "5474:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:16",
																"nodeType": "YulBlock",
																"src": "5520:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:16"
																			},
																			"nativeSrc": "5522:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:16"
																		},
																		"nativeSrc": "5522:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:16"
																		},
																		"nativeSrc": "5491:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:16"
																},
																"nativeSrc": "5487:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:16"
															},
															"nativeSrc": "5484:119:16",
															"nodeType": "YulIf",
															"src": "5484:119:16"
														},
														{
															"nativeSrc": "5613:117:16",
															"nodeType": "YulBlock",
															"src": "5613:117:16",
															"statements": [
																{
																	"nativeSrc": "5628:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:16"
																				},
																				"nativeSrc": "5688:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:16"
																		},
																		"nativeSrc": "5667:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:16",
														"nodeType": "YulTypedName",
														"src": "5444:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:16",
														"nodeType": "YulTypedName",
														"src": "5455:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:16",
														"nodeType": "YulTypedName",
														"src": "5467:6:16",
														"type": ""
													}
												],
												"src": "5408:329:16"
											},
											{
												"body": {
													"nativeSrc": "5808:53:16",
													"nodeType": "YulBlock",
													"src": "5808:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:16"
																		},
																		"nativeSrc": "5830:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:16"
																},
																"nativeSrc": "5818:37:16",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:16"
															},
															"nativeSrc": "5818:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:16",
														"nodeType": "YulTypedName",
														"src": "5796:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:16",
														"nodeType": "YulTypedName",
														"src": "5803:3:16",
														"type": ""
													}
												],
												"src": "5743:118:16"
											},
											{
												"body": {
													"nativeSrc": "5965:124:16",
													"nodeType": "YulBlock",
													"src": "5965:124:16",
													"statements": [
														{
															"nativeSrc": "5975:26:16",
															"nodeType": "YulAssignment",
															"src": "5975:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:16"
																},
																"nativeSrc": "5983:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:16"
																		},
																		"nativeSrc": "6064:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:16"
																},
																"nativeSrc": "6011:71:16",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:16"
															},
															"nativeSrc": "6011:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:16",
														"nodeType": "YulTypedName",
														"src": "5937:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:16",
														"nodeType": "YulTypedName",
														"src": "5949:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:16",
														"nodeType": "YulTypedName",
														"src": "5960:4:16",
														"type": ""
													}
												],
												"src": "5867:222:16"
											},
											{
												"body": {
													"nativeSrc": "6178:391:16",
													"nodeType": "YulBlock",
													"src": "6178:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6224:83:16",
																"nodeType": "YulBlock",
																"src": "6224:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6226:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6226:77:16"
																			},
																			"nativeSrc": "6226:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6226:79:16"
																		},
																		"nativeSrc": "6226:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6226:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6199:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6199:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6208:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6208:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6195:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6195:3:16"
																		},
																		"nativeSrc": "6195:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6195:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6220:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6220:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6191:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6191:3:16"
																},
																"nativeSrc": "6191:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6191:32:16"
															},
															"nativeSrc": "6188:119:16",
															"nodeType": "YulIf",
															"src": "6188:119:16"
														},
														{
															"nativeSrc": "6317:117:16",
															"nodeType": "YulBlock",
															"src": "6317:117:16",
															"statements": [
																{
																	"nativeSrc": "6332:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6332:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6346:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6336:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6336:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6361:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6361:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6396:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6396:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6407:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6407:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6392:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6392:3:16"
																				},
																				"nativeSrc": "6392:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6392:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6416:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6416:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6371:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6371:20:16"
																		},
																		"nativeSrc": "6371:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6371:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6361:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6361:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6444:118:16",
															"nodeType": "YulBlock",
															"src": "6444:118:16",
															"statements": [
																{
																	"nativeSrc": "6459:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6459:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6473:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6473:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6463:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6463:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6489:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6489:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:16"
																				},
																				"nativeSrc": "6520:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6499:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:16"
																		},
																		"nativeSrc": "6499:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6489:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6095:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6140:9:16",
														"nodeType": "YulTypedName",
														"src": "6140:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6151:7:16",
														"nodeType": "YulTypedName",
														"src": "6151:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6163:6:16",
														"nodeType": "YulTypedName",
														"src": "6163:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6171:6:16",
														"nodeType": "YulTypedName",
														"src": "6171:6:16",
														"type": ""
													}
												],
												"src": "6095:474:16"
											},
											{
												"body": {
													"nativeSrc": "6615:76:16",
													"nodeType": "YulBlock",
													"src": "6615:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6669:16:16",
																"nodeType": "YulBlock",
																"src": "6669:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6678:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6678:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6681:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6681:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6671:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6671:6:16"
																			},
																			"nativeSrc": "6671:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6671:12:16"
																		},
																		"nativeSrc": "6671:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6671:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6638:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6638:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6660:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6660:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6645:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "6645:14:16"
																				},
																				"nativeSrc": "6645:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6645:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6635:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "6635:2:16"
																		},
																		"nativeSrc": "6635:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6628:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6628:6:16"
																},
																"nativeSrc": "6628:40:16",
																"nodeType": "YulFunctionCall",
																"src": "6628:40:16"
															},
															"nativeSrc": "6625:60:16",
															"nodeType": "YulIf",
															"src": "6625:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6575:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6608:5:16",
														"nodeType": "YulTypedName",
														"src": "6608:5:16",
														"type": ""
													}
												],
												"src": "6575:116:16"
											},
											{
												"body": {
													"nativeSrc": "6746:84:16",
													"nodeType": "YulBlock",
													"src": "6746:84:16",
													"statements": [
														{
															"nativeSrc": "6756:29:16",
															"nodeType": "YulAssignment",
															"src": "6756:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6778:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6778:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6765:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6765:12:16"
																},
																"nativeSrc": "6765:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6765:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6756:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6756:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6818:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6818:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6794:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "6794:23:16"
																},
																"nativeSrc": "6794:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6794:30:16"
															},
															"nativeSrc": "6794:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6794:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6697:133:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6724:6:16",
														"nodeType": "YulTypedName",
														"src": "6724:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6732:3:16",
														"nodeType": "YulTypedName",
														"src": "6732:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6740:5:16",
														"nodeType": "YulTypedName",
														"src": "6740:5:16",
														"type": ""
													}
												],
												"src": "6697:133:16"
											},
											{
												"body": {
													"nativeSrc": "6916:388:16",
													"nodeType": "YulBlock",
													"src": "6916:388:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6962:83:16",
																"nodeType": "YulBlock",
																"src": "6962:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6964:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6964:77:16"
																			},
																			"nativeSrc": "6964:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6964:79:16"
																		},
																		"nativeSrc": "6964:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6964:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6937:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6937:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6946:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6946:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6933:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6933:3:16"
																		},
																		"nativeSrc": "6933:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6933:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6958:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6958:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6929:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:16"
																},
																"nativeSrc": "6929:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6929:32:16"
															},
															"nativeSrc": "6926:119:16",
															"nodeType": "YulIf",
															"src": "6926:119:16"
														},
														{
															"nativeSrc": "7055:117:16",
															"nodeType": "YulBlock",
															"src": "7055:117:16",
															"statements": [
																{
																	"nativeSrc": "7070:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7070:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7084:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7084:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7074:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7074:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7099:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7099:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7134:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7134:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7145:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7145:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7130:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7130:3:16"
																				},
																				"nativeSrc": "7130:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7130:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7154:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7154:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7109:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7109:20:16"
																		},
																		"nativeSrc": "7109:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7099:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7099:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7182:115:16",
															"nodeType": "YulBlock",
															"src": "7182:115:16",
															"statements": [
																{
																	"nativeSrc": "7197:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7197:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7211:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7211:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7201:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7201:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7227:60:16",
																	"nodeType": "YulAssignment",
																	"src": "7227:60:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7259:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7259:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7270:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7270:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7255:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7255:3:16"
																				},
																				"nativeSrc": "7255:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7255:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7279:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7279:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7237:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "7237:17:16"
																		},
																		"nativeSrc": "7237:50:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:50:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7227:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7227:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6836:468:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6878:9:16",
														"nodeType": "YulTypedName",
														"src": "6878:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6889:7:16",
														"nodeType": "YulTypedName",
														"src": "6889:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6901:6:16",
														"nodeType": "YulTypedName",
														"src": "6901:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6909:6:16",
														"nodeType": "YulTypedName",
														"src": "6909:6:16",
														"type": ""
													}
												],
												"src": "6836:468:16"
											},
											{
												"body": {
													"nativeSrc": "7399:28:16",
													"nodeType": "YulBlock",
													"src": "7399:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7416:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7416:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7419:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7419:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7409:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7409:6:16"
																},
																"nativeSrc": "7409:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7409:12:16"
															},
															"nativeSrc": "7409:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7409:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7310:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7310:117:16"
											},
											{
												"body": {
													"nativeSrc": "7522:28:16",
													"nodeType": "YulBlock",
													"src": "7522:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7539:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7539:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7542:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7542:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7532:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:16"
																},
																"nativeSrc": "7532:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7532:12:16"
															},
															"nativeSrc": "7532:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7532:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7433:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7433:117:16"
											},
											{
												"body": {
													"nativeSrc": "7584:152:16",
													"nodeType": "YulBlock",
													"src": "7584:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7601:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7601:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7604:77:16",
																		"nodeType": "YulLiteral",
																		"src": "7604:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7594:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7594:6:16"
																},
																"nativeSrc": "7594:88:16",
																"nodeType": "YulFunctionCall",
																"src": "7594:88:16"
															},
															"nativeSrc": "7594:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "7594:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7698:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7698:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7701:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7701:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7691:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7691:6:16"
																},
																"nativeSrc": "7691:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7691:15:16"
															},
															"nativeSrc": "7691:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7691:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7722:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7722:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7725:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7725:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7715:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7715:6:16"
																},
																"nativeSrc": "7715:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7715:15:16"
															},
															"nativeSrc": "7715:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7715:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7556:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7556:180:16"
											},
											{
												"body": {
													"nativeSrc": "7785:238:16",
													"nodeType": "YulBlock",
													"src": "7785:238:16",
													"statements": [
														{
															"nativeSrc": "7795:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7795:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7817:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7817:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7847:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7847:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7825:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "7825:21:16"
																		},
																		"nativeSrc": "7825:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7825:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7813:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7813:3:16"
																},
																"nativeSrc": "7813:40:16",
																"nodeType": "YulFunctionCall",
																"src": "7813:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7799:10:16",
																	"nodeType": "YulTypedName",
																	"src": "7799:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7964:22:16",
																"nodeType": "YulBlock",
																"src": "7964:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7966:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7966:16:16"
																			},
																			"nativeSrc": "7966:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7966:18:16"
																		},
																		"nativeSrc": "7966:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7966:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7907:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7907:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7919:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7919:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7904:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7904:2:16"
																		},
																		"nativeSrc": "7904:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7904:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7943:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7943:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7955:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7955:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7940:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7940:2:16"
																		},
																		"nativeSrc": "7940:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7940:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7901:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7901:2:16"
																},
																"nativeSrc": "7901:62:16",
																"nodeType": "YulFunctionCall",
																"src": "7901:62:16"
															},
															"nativeSrc": "7898:88:16",
															"nodeType": "YulIf",
															"src": "7898:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8002:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8006:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "8006:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7995:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:16"
																},
																"nativeSrc": "7995:22:16",
																"nodeType": "YulFunctionCall",
																"src": "7995:22:16"
															},
															"nativeSrc": "7995:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "7995:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7742:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7771:6:16",
														"nodeType": "YulTypedName",
														"src": "7771:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7779:4:16",
														"nodeType": "YulTypedName",
														"src": "7779:4:16",
														"type": ""
													}
												],
												"src": "7742:281:16"
											},
											{
												"body": {
													"nativeSrc": "8070:88:16",
													"nodeType": "YulBlock",
													"src": "8070:88:16",
													"statements": [
														{
															"nativeSrc": "8080:30:16",
															"nodeType": "YulAssignment",
															"src": "8080:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8090:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "8090:18:16"
																},
																"nativeSrc": "8090:20:16",
																"nodeType": "YulFunctionCall",
																"src": "8090:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8080:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8139:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8139:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8147:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8147:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8119:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "8119:19:16"
																},
																"nativeSrc": "8119:33:16",
																"nodeType": "YulFunctionCall",
																"src": "8119:33:16"
															},
															"nativeSrc": "8119:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "8119:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8029:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8054:4:16",
														"nodeType": "YulTypedName",
														"src": "8054:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8063:6:16",
														"nodeType": "YulTypedName",
														"src": "8063:6:16",
														"type": ""
													}
												],
												"src": "8029:129:16"
											},
											{
												"body": {
													"nativeSrc": "8230:241:16",
													"nodeType": "YulBlock",
													"src": "8230:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8335:22:16",
																"nodeType": "YulBlock",
																"src": "8335:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8337:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "8337:16:16"
																			},
																			"nativeSrc": "8337:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8337:18:16"
																		},
																		"nativeSrc": "8337:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8337:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8307:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8307:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8315:18:16",
																		"nodeType": "YulLiteral",
																		"src": "8315:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8304:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8304:2:16"
																},
																"nativeSrc": "8304:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8304:30:16"
															},
															"nativeSrc": "8301:56:16",
															"nodeType": "YulIf",
															"src": "8301:56:16"
														},
														{
															"nativeSrc": "8367:37:16",
															"nodeType": "YulAssignment",
															"src": "8367:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8397:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8397:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8375:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "8375:21:16"
																},
																"nativeSrc": "8375:29:16",
																"nodeType": "YulFunctionCall",
																"src": "8375:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8367:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8367:4:16"
																}
															]
														},
														{
															"nativeSrc": "8441:23:16",
															"nodeType": "YulAssignment",
															"src": "8441:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8453:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8453:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8459:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8459:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8449:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8449:3:16"
																},
																"nativeSrc": "8449:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8449:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8441:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8441:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8164:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8214:6:16",
														"nodeType": "YulTypedName",
														"src": "8214:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8225:4:16",
														"nodeType": "YulTypedName",
														"src": "8225:4:16",
														"type": ""
													}
												],
												"src": "8164:307:16"
											},
											{
												"body": {
													"nativeSrc": "8541:84:16",
													"nodeType": "YulBlock",
													"src": "8541:84:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8565:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8565:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8570:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8570:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8575:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8575:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8552:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8552:12:16"
																},
																"nativeSrc": "8552:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8552:30:16"
															},
															"nativeSrc": "8552:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8552:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8602:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8602:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8607:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8607:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8598:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8598:3:16"
																		},
																		"nativeSrc": "8598:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8598:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8616:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8591:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:16"
																},
																"nativeSrc": "8591:27:16",
																"nodeType": "YulFunctionCall",
																"src": "8591:27:16"
															},
															"nativeSrc": "8591:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "8591:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8477:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8523:3:16",
														"nodeType": "YulTypedName",
														"src": "8523:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8528:3:16",
														"nodeType": "YulTypedName",
														"src": "8528:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8533:6:16",
														"nodeType": "YulTypedName",
														"src": "8533:6:16",
														"type": ""
													}
												],
												"src": "8477:148:16"
											},
											{
												"body": {
													"nativeSrc": "8714:340:16",
													"nodeType": "YulBlock",
													"src": "8714:340:16",
													"statements": [
														{
															"nativeSrc": "8724:74:16",
															"nodeType": "YulAssignment",
															"src": "8724:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8790:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8790:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8749:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "8749:40:16"
																		},
																		"nativeSrc": "8749:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8749:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8733:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "8733:15:16"
																},
																"nativeSrc": "8733:65:16",
																"nodeType": "YulFunctionCall",
																"src": "8733:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8724:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8724:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8814:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8814:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8821:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8821:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8807:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8807:6:16"
																},
																"nativeSrc": "8807:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8807:21:16"
															},
															"nativeSrc": "8807:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8807:21:16"
														},
														{
															"nativeSrc": "8837:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "8837:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8852:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8852:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8859:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8859:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8848:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8848:3:16"
																},
																"nativeSrc": "8848:16:16",
																"nodeType": "YulFunctionCall",
																"src": "8848:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8841:3:16",
																	"nodeType": "YulTypedName",
																	"src": "8841:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8902:83:16",
																"nodeType": "YulBlock",
																"src": "8902:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8904:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8904:77:16"
																			},
																			"nativeSrc": "8904:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8904:79:16"
																		},
																		"nativeSrc": "8904:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8904:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8883:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8883:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8888:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8888:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8879:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8879:3:16"
																		},
																		"nativeSrc": "8879:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8879:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8897:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8876:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8876:2:16"
																},
																"nativeSrc": "8876:25:16",
																"nodeType": "YulFunctionCall",
																"src": "8876:25:16"
															},
															"nativeSrc": "8873:112:16",
															"nodeType": "YulIf",
															"src": "8873:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9031:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9031:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9036:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9036:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9041:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9041:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8994:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "8994:36:16"
																},
																"nativeSrc": "8994:54:16",
																"nodeType": "YulFunctionCall",
																"src": "8994:54:16"
															},
															"nativeSrc": "8994:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "8994:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8631:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8687:3:16",
														"nodeType": "YulTypedName",
														"src": "8687:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8692:6:16",
														"nodeType": "YulTypedName",
														"src": "8692:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8700:3:16",
														"nodeType": "YulTypedName",
														"src": "8700:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8708:5:16",
														"nodeType": "YulTypedName",
														"src": "8708:5:16",
														"type": ""
													}
												],
												"src": "8631:423:16"
											},
											{
												"body": {
													"nativeSrc": "9134:277:16",
													"nodeType": "YulBlock",
													"src": "9134:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9183:83:16",
																"nodeType": "YulBlock",
																"src": "9183:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9185:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9185:77:16"
																			},
																			"nativeSrc": "9185:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9185:79:16"
																		},
																		"nativeSrc": "9185:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9185:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9162:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9162:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9170:4:16",
																						"nodeType": "YulLiteral",
																						"src": "9170:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9158:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9158:3:16"
																				},
																				"nativeSrc": "9158:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9158:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9177:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "9177:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9154:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9154:3:16"
																		},
																		"nativeSrc": "9154:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9154:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9147:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9147:6:16"
																},
																"nativeSrc": "9147:35:16",
																"nodeType": "YulFunctionCall",
																"src": "9147:35:16"
															},
															"nativeSrc": "9144:122:16",
															"nodeType": "YulIf",
															"src": "9144:122:16"
														},
														{
															"nativeSrc": "9275:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "9275:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9302:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9302:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9289:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "9289:12:16"
																},
																"nativeSrc": "9289:20:16",
																"nodeType": "YulFunctionCall",
																"src": "9289:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9279:6:16",
																	"nodeType": "YulTypedName",
																	"src": "9279:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9318:87:16",
															"nodeType": "YulAssignment",
															"src": "9318:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9378:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9378:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9386:4:16",
																				"nodeType": "YulLiteral",
																				"src": "9386:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9374:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9374:3:16"
																		},
																		"nativeSrc": "9374:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9374:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9393:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9393:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9401:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9401:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9327:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "9327:46:16"
																},
																"nativeSrc": "9327:78:16",
																"nodeType": "YulFunctionCall",
																"src": "9327:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9318:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "9318:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9073:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9112:6:16",
														"nodeType": "YulTypedName",
														"src": "9112:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9120:3:16",
														"nodeType": "YulTypedName",
														"src": "9120:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9128:5:16",
														"nodeType": "YulTypedName",
														"src": "9128:5:16",
														"type": ""
													}
												],
												"src": "9073:338:16"
											},
											{
												"body": {
													"nativeSrc": "9543:817:16",
													"nodeType": "YulBlock",
													"src": "9543:817:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9590:83:16",
																"nodeType": "YulBlock",
																"src": "9590:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9592:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9592:77:16"
																			},
																			"nativeSrc": "9592:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9592:79:16"
																		},
																		"nativeSrc": "9592:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9592:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9564:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9564:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9573:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9573:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9560:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9560:3:16"
																		},
																		"nativeSrc": "9560:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9560:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9585:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9585:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9556:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9556:3:16"
																},
																"nativeSrc": "9556:33:16",
																"nodeType": "YulFunctionCall",
																"src": "9556:33:16"
															},
															"nativeSrc": "9553:120:16",
															"nodeType": "YulIf",
															"src": "9553:120:16"
														},
														{
															"nativeSrc": "9683:117:16",
															"nodeType": "YulBlock",
															"src": "9683:117:16",
															"statements": [
																{
																	"nativeSrc": "9698:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9698:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9712:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9712:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9702:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9702:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9727:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9727:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9762:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9762:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9773:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9773:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9758:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9758:3:16"
																				},
																				"nativeSrc": "9758:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9758:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9782:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9782:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9737:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9737:20:16"
																		},
																		"nativeSrc": "9737:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9737:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9727:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9727:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9810:118:16",
															"nodeType": "YulBlock",
															"src": "9810:118:16",
															"statements": [
																{
																	"nativeSrc": "9825:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9825:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9839:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9839:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9829:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9829:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9855:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9855:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9890:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9890:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9901:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9901:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9886:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9886:3:16"
																				},
																				"nativeSrc": "9886:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9886:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9910:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9910:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9865:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9865:20:16"
																		},
																		"nativeSrc": "9865:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9865:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9855:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9855:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9938:118:16",
															"nodeType": "YulBlock",
															"src": "9938:118:16",
															"statements": [
																{
																	"nativeSrc": "9953:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9953:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9967:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9967:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9957:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9957:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9983:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9983:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10018:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "10018:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10029:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10029:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10014:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10014:3:16"
																				},
																				"nativeSrc": "10014:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10014:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10038:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "10038:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9993:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9993:20:16"
																		},
																		"nativeSrc": "9993:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9993:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9983:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9983:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10066:287:16",
															"nodeType": "YulBlock",
															"src": "10066:287:16",
															"statements": [
																{
																	"nativeSrc": "10081:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10081:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10112:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "10112:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10123:2:16",
																						"nodeType": "YulLiteral",
																						"src": "10123:2:16",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10108:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10108:3:16"
																				},
																				"nativeSrc": "10108:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10108:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10095:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "10095:12:16"
																		},
																		"nativeSrc": "10095:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10095:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10085:6:16",
																			"nodeType": "YulTypedName",
																			"src": "10085:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10174:83:16",
																		"nodeType": "YulBlock",
																		"src": "10174:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10176:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "10176:77:16"
																					},
																					"nativeSrc": "10176:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "10176:79:16"
																				},
																				"nativeSrc": "10176:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "10176:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10146:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10146:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10154:18:16",
																				"nodeType": "YulLiteral",
																				"src": "10154:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10143:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "10143:2:16"
																		},
																		"nativeSrc": "10143:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10143:30:16"
																	},
																	"nativeSrc": "10140:117:16",
																	"nodeType": "YulIf",
																	"src": "10140:117:16"
																},
																{
																	"nativeSrc": "10271:72:16",
																	"nodeType": "YulAssignment",
																	"src": "10271:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:16"
																				},
																				"nativeSrc": "10311:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10281:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "10281:29:16"
																		},
																		"nativeSrc": "10281:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10281:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10271:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "10271:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9417:943:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9489:9:16",
														"nodeType": "YulTypedName",
														"src": "9489:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9500:7:16",
														"nodeType": "YulTypedName",
														"src": "9500:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9512:6:16",
														"nodeType": "YulTypedName",
														"src": "9512:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9520:6:16",
														"nodeType": "YulTypedName",
														"src": "9520:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9528:6:16",
														"nodeType": "YulTypedName",
														"src": "9528:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9536:6:16",
														"nodeType": "YulTypedName",
														"src": "9536:6:16",
														"type": ""
													}
												],
												"src": "9417:943:16"
											},
											{
												"body": {
													"nativeSrc": "10433:241:16",
													"nodeType": "YulBlock",
													"src": "10433:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10538:22:16",
																"nodeType": "YulBlock",
																"src": "10538:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10540:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10540:16:16"
																			},
																			"nativeSrc": "10540:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10540:18:16"
																		},
																		"nativeSrc": "10540:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10540:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10510:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10510:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10518:18:16",
																		"nodeType": "YulLiteral",
																		"src": "10518:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10507:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10507:2:16"
																},
																"nativeSrc": "10507:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10507:30:16"
															},
															"nativeSrc": "10504:56:16",
															"nodeType": "YulIf",
															"src": "10504:56:16"
														},
														{
															"nativeSrc": "10570:37:16",
															"nodeType": "YulAssignment",
															"src": "10570:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10600:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10600:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10578:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "10578:21:16"
																},
																"nativeSrc": "10578:29:16",
																"nodeType": "YulFunctionCall",
																"src": "10578:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10570:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10570:4:16"
																}
															]
														},
														{
															"nativeSrc": "10644:23:16",
															"nodeType": "YulAssignment",
															"src": "10644:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10656:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10656:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10662:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10662:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10652:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:16"
																},
																"nativeSrc": "10652:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10652:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10644:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10644:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "10366:308:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10417:6:16",
														"nodeType": "YulTypedName",
														"src": "10417:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10428:4:16",
														"nodeType": "YulTypedName",
														"src": "10428:4:16",
														"type": ""
													}
												],
												"src": "10366:308:16"
											},
											{
												"body": {
													"nativeSrc": "10764:341:16",
													"nodeType": "YulBlock",
													"src": "10764:341:16",
													"statements": [
														{
															"nativeSrc": "10774:75:16",
															"nodeType": "YulAssignment",
															"src": "10774:75:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10841:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10841:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10799:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "10799:41:16"
																		},
																		"nativeSrc": "10799:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10799:49:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10783:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "10783:15:16"
																},
																"nativeSrc": "10783:66:16",
																"nodeType": "YulFunctionCall",
																"src": "10783:66:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10774:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10774:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10865:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10865:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10872:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10872:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10858:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10858:6:16"
																},
																"nativeSrc": "10858:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10858:21:16"
															},
															"nativeSrc": "10858:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10858:21:16"
														},
														{
															"nativeSrc": "10888:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10888:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10903:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10903:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10910:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10910:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10899:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:16"
																},
																"nativeSrc": "10899:16:16",
																"nodeType": "YulFunctionCall",
																"src": "10899:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10892:3:16",
																	"nodeType": "YulTypedName",
																	"src": "10892:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10953:83:16",
																"nodeType": "YulBlock",
																"src": "10953:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10955:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10955:77:16"
																			},
																			"nativeSrc": "10955:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10955:79:16"
																		},
																		"nativeSrc": "10955:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10955:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10934:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10934:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10939:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10939:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10930:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10930:3:16"
																		},
																		"nativeSrc": "10930:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10930:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10948:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10948:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10927:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10927:2:16"
																},
																"nativeSrc": "10927:25:16",
																"nodeType": "YulFunctionCall",
																"src": "10927:25:16"
															},
															"nativeSrc": "10924:112:16",
															"nodeType": "YulIf",
															"src": "10924:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11082:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11082:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11087:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11087:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11092:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11092:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11045:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "11045:36:16"
																},
																"nativeSrc": "11045:54:16",
																"nodeType": "YulFunctionCall",
																"src": "11045:54:16"
															},
															"nativeSrc": "11045:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "11045:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10680:425:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10737:3:16",
														"nodeType": "YulTypedName",
														"src": "10737:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10742:6:16",
														"nodeType": "YulTypedName",
														"src": "10742:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10750:3:16",
														"nodeType": "YulTypedName",
														"src": "10750:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10758:5:16",
														"nodeType": "YulTypedName",
														"src": "10758:5:16",
														"type": ""
													}
												],
												"src": "10680:425:16"
											},
											{
												"body": {
													"nativeSrc": "11187:278:16",
													"nodeType": "YulBlock",
													"src": "11187:278:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11236:83:16",
																"nodeType": "YulBlock",
																"src": "11236:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11238:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11238:77:16"
																			},
																			"nativeSrc": "11238:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11238:79:16"
																		},
																		"nativeSrc": "11238:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11238:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11215:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11215:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11223:4:16",
																						"nodeType": "YulLiteral",
																						"src": "11223:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11211:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11211:3:16"
																				},
																				"nativeSrc": "11211:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11211:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11230:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11230:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11207:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11207:3:16"
																		},
																		"nativeSrc": "11207:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11207:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11200:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:16"
																},
																"nativeSrc": "11200:35:16",
																"nodeType": "YulFunctionCall",
																"src": "11200:35:16"
															},
															"nativeSrc": "11197:122:16",
															"nodeType": "YulIf",
															"src": "11197:122:16"
														},
														{
															"nativeSrc": "11328:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11328:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11355:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11355:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11342:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "11342:12:16"
																},
																"nativeSrc": "11342:20:16",
																"nodeType": "YulFunctionCall",
																"src": "11342:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11332:6:16",
																	"nodeType": "YulTypedName",
																	"src": "11332:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11371:88:16",
															"nodeType": "YulAssignment",
															"src": "11371:88:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11432:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11432:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11440:4:16",
																				"nodeType": "YulLiteral",
																				"src": "11440:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11428:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11428:3:16"
																		},
																		"nativeSrc": "11428:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11428:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11447:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11447:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11455:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11455:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11380:47:16",
																	"nodeType": "YulIdentifier",
																	"src": "11380:47:16"
																},
																"nativeSrc": "11380:79:16",
																"nodeType": "YulFunctionCall",
																"src": "11380:79:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11371:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11371:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "11125:340:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11165:6:16",
														"nodeType": "YulTypedName",
														"src": "11165:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11173:3:16",
														"nodeType": "YulTypedName",
														"src": "11173:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11181:5:16",
														"nodeType": "YulTypedName",
														"src": "11181:5:16",
														"type": ""
													}
												],
												"src": "11125:340:16"
											},
											{
												"body": {
													"nativeSrc": "11581:689:16",
													"nodeType": "YulBlock",
													"src": "11581:689:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11627:83:16",
																"nodeType": "YulBlock",
																"src": "11627:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11629:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11629:77:16"
																			},
																			"nativeSrc": "11629:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11629:79:16"
																		},
																		"nativeSrc": "11629:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11629:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11602:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11602:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11611:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11611:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11598:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11598:3:16"
																		},
																		"nativeSrc": "11598:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11598:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11623:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11623:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11594:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11594:3:16"
																},
																"nativeSrc": "11594:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11594:32:16"
															},
															"nativeSrc": "11591:119:16",
															"nodeType": "YulIf",
															"src": "11591:119:16"
														},
														{
															"nativeSrc": "11720:117:16",
															"nodeType": "YulBlock",
															"src": "11720:117:16",
															"statements": [
																{
																	"nativeSrc": "11735:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11735:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11749:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11749:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11739:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11739:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11764:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11764:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11799:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11799:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11810:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11810:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11795:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11795:3:16"
																				},
																				"nativeSrc": "11795:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11795:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11819:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11819:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11774:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11774:20:16"
																		},
																		"nativeSrc": "11774:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11774:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11764:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11764:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11847:118:16",
															"nodeType": "YulBlock",
															"src": "11847:118:16",
															"statements": [
																{
																	"nativeSrc": "11862:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11862:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11876:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11876:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11866:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11866:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11892:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11892:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11927:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11927:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11938:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11938:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11923:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11923:3:16"
																				},
																				"nativeSrc": "11923:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11923:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11947:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11947:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11902:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11902:20:16"
																		},
																		"nativeSrc": "11902:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11902:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11892:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11892:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11975:288:16",
															"nodeType": "YulBlock",
															"src": "11975:288:16",
															"statements": [
																{
																	"nativeSrc": "11990:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11990:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12021:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12021:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12032:2:16",
																						"nodeType": "YulLiteral",
																						"src": "12032:2:16",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12017:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12017:3:16"
																				},
																				"nativeSrc": "12017:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12017:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12004:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "12004:12:16"
																		},
																		"nativeSrc": "12004:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12004:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11994:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11994:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12083:83:16",
																		"nodeType": "YulBlock",
																		"src": "12083:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12085:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "12085:77:16"
																					},
																					"nativeSrc": "12085:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "12085:79:16"
																				},
																				"nativeSrc": "12085:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "12085:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12055:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12055:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12063:18:16",
																				"nodeType": "YulLiteral",
																				"src": "12063:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12052:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12052:2:16"
																		},
																		"nativeSrc": "12052:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12052:30:16"
																	},
																	"nativeSrc": "12049:117:16",
																	"nodeType": "YulIf",
																	"src": "12049:117:16"
																},
																{
																	"nativeSrc": "12180:73:16",
																	"nodeType": "YulAssignment",
																	"src": "12180:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12225:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12225:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12236:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12236:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12221:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12221:3:16"
																				},
																				"nativeSrc": "12221:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12221:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12245:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12245:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "12190:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "12190:30:16"
																		},
																		"nativeSrc": "12190:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12190:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12180:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12180:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nativeSrc": "11471:799:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11535:9:16",
														"nodeType": "YulTypedName",
														"src": "11535:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11546:7:16",
														"nodeType": "YulTypedName",
														"src": "11546:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11558:6:16",
														"nodeType": "YulTypedName",
														"src": "11558:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11566:6:16",
														"nodeType": "YulTypedName",
														"src": "11566:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11574:6:16",
														"nodeType": "YulTypedName",
														"src": "11574:6:16",
														"type": ""
													}
												],
												"src": "11471:799:16"
											},
											{
												"body": {
													"nativeSrc": "12359:391:16",
													"nodeType": "YulBlock",
													"src": "12359:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "12405:83:16",
																"nodeType": "YulBlock",
																"src": "12405:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12407:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "12407:77:16"
																			},
																			"nativeSrc": "12407:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12407:79:16"
																		},
																		"nativeSrc": "12407:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12407:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12380:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12380:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12389:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12389:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12376:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12376:3:16"
																		},
																		"nativeSrc": "12376:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12376:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12401:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12401:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12372:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12372:3:16"
																},
																"nativeSrc": "12372:32:16",
																"nodeType": "YulFunctionCall",
																"src": "12372:32:16"
															},
															"nativeSrc": "12369:119:16",
															"nodeType": "YulIf",
															"src": "12369:119:16"
														},
														{
															"nativeSrc": "12498:117:16",
															"nodeType": "YulBlock",
															"src": "12498:117:16",
															"statements": [
																{
																	"nativeSrc": "12513:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12513:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12527:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12527:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12517:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12517:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12542:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12542:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12577:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12577:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12588:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12588:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12573:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12573:3:16"
																				},
																				"nativeSrc": "12573:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12573:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12597:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12597:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12552:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12552:20:16"
																		},
																		"nativeSrc": "12552:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12552:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12542:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12542:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12625:118:16",
															"nodeType": "YulBlock",
															"src": "12625:118:16",
															"statements": [
																{
																	"nativeSrc": "12640:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12640:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12654:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12654:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12644:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12644:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12670:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12670:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12705:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12705:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12716:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12716:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12701:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12701:3:16"
																				},
																				"nativeSrc": "12701:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12701:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12725:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12725:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12680:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12680:20:16"
																		},
																		"nativeSrc": "12680:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12680:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12670:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12670:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12276:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12321:9:16",
														"nodeType": "YulTypedName",
														"src": "12321:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12332:7:16",
														"nodeType": "YulTypedName",
														"src": "12332:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12344:6:16",
														"nodeType": "YulTypedName",
														"src": "12344:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12352:6:16",
														"nodeType": "YulTypedName",
														"src": "12352:6:16",
														"type": ""
													}
												],
												"src": "12276:474:16"
											},
											{
												"body": {
													"nativeSrc": "12784:152:16",
													"nodeType": "YulBlock",
													"src": "12784:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12801:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12801:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12804:77:16",
																		"nodeType": "YulLiteral",
																		"src": "12804:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12794:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12794:6:16"
																},
																"nativeSrc": "12794:88:16",
																"nodeType": "YulFunctionCall",
																"src": "12794:88:16"
															},
															"nativeSrc": "12794:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "12794:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12898:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12898:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12901:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12901:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12891:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12891:6:16"
																},
																"nativeSrc": "12891:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12891:15:16"
															},
															"nativeSrc": "12891:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12891:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12922:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12922:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12925:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12925:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12915:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12915:6:16"
																},
																"nativeSrc": "12915:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12915:15:16"
															},
															"nativeSrc": "12915:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12915:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12756:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "12756:180:16"
											},
											{
												"body": {
													"nativeSrc": "12993:269:16",
													"nodeType": "YulBlock",
													"src": "12993:269:16",
													"statements": [
														{
															"nativeSrc": "13003:22:16",
															"nodeType": "YulAssignment",
															"src": "13003:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13017:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13017:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13023:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13023:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13013:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13013:3:16"
																},
																"nativeSrc": "13013:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13013:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13003:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13003:6:16"
																}
															]
														},
														{
															"nativeSrc": "13034:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13034:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13064:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13064:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13070:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13070:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13060:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13060:3:16"
																},
																"nativeSrc": "13060:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13060:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13038:18:16",
																	"nodeType": "YulTypedName",
																	"src": "13038:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13111:51:16",
																"nodeType": "YulBlock",
																"src": "13111:51:16",
																"statements": [
																	{
																		"nativeSrc": "13125:27:16",
																		"nodeType": "YulAssignment",
																		"src": "13125:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13139:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "13139:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13147:4:16",
																					"nodeType": "YulLiteral",
																					"src": "13147:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13135:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13135:3:16"
																			},
																			"nativeSrc": "13135:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13135:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13125:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13125:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13091:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "13091:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13084:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13084:6:16"
																},
																"nativeSrc": "13084:26:16",
																"nodeType": "YulFunctionCall",
																"src": "13084:26:16"
															},
															"nativeSrc": "13081:81:16",
															"nodeType": "YulIf",
															"src": "13081:81:16"
														},
														{
															"body": {
																"nativeSrc": "13214:42:16",
																"nodeType": "YulBlock",
																"src": "13214:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13228:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13228:16:16"
																			},
																			"nativeSrc": "13228:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13228:18:16"
																		},
																		"nativeSrc": "13228:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13228:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13178:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "13178:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13201:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13201:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13209:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13209:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13198:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "13198:2:16"
																		},
																		"nativeSrc": "13198:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13198:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13175:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13175:2:16"
																},
																"nativeSrc": "13175:38:16",
																"nodeType": "YulFunctionCall",
																"src": "13175:38:16"
															},
															"nativeSrc": "13172:84:16",
															"nodeType": "YulIf",
															"src": "13172:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12942:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12977:4:16",
														"nodeType": "YulTypedName",
														"src": "12977:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12986:6:16",
														"nodeType": "YulTypedName",
														"src": "12986:6:16",
														"type": ""
													}
												],
												"src": "12942:320:16"
											},
											{
												"body": {
													"nativeSrc": "13422:288:16",
													"nodeType": "YulBlock",
													"src": "13422:288:16",
													"statements": [
														{
															"nativeSrc": "13432:26:16",
															"nodeType": "YulAssignment",
															"src": "13432:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13444:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "13444:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13455:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13455:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13440:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13440:3:16"
																},
																"nativeSrc": "13440:18:16",
																"nodeType": "YulFunctionCall",
																"src": "13440:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13432:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13432:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13512:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13512:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13525:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13525:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13536:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13536:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13521:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13521:3:16"
																		},
																		"nativeSrc": "13521:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13521:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13468:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "13468:43:16"
																},
																"nativeSrc": "13468:71:16",
																"nodeType": "YulFunctionCall",
																"src": "13468:71:16"
															},
															"nativeSrc": "13468:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "13468:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13593:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13593:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13606:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13606:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13617:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13617:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13602:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13602:3:16"
																		},
																		"nativeSrc": "13602:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13602:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13549:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "13549:43:16"
																},
																"nativeSrc": "13549:72:16",
																"nodeType": "YulFunctionCall",
																"src": "13549:72:16"
															},
															"nativeSrc": "13549:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "13549:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13675:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13675:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13688:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13688:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13699:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13699:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13684:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13684:3:16"
																		},
																		"nativeSrc": "13684:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13684:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13631:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "13631:43:16"
																},
																"nativeSrc": "13631:72:16",
																"nodeType": "YulFunctionCall",
																"src": "13631:72:16"
															},
															"nativeSrc": "13631:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "13631:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13268:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13378:9:16",
														"nodeType": "YulTypedName",
														"src": "13378:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13390:6:16",
														"nodeType": "YulTypedName",
														"src": "13390:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13398:6:16",
														"nodeType": "YulTypedName",
														"src": "13398:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13406:6:16",
														"nodeType": "YulTypedName",
														"src": "13406:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13417:4:16",
														"nodeType": "YulTypedName",
														"src": "13417:4:16",
														"type": ""
													}
												],
												"src": "13268:442:16"
											},
											{
												"body": {
													"nativeSrc": "13744:152:16",
													"nodeType": "YulBlock",
													"src": "13744:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13761:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13761:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13764:77:16",
																		"nodeType": "YulLiteral",
																		"src": "13764:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13754:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:16"
																},
																"nativeSrc": "13754:88:16",
																"nodeType": "YulFunctionCall",
																"src": "13754:88:16"
															},
															"nativeSrc": "13754:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "13754:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13858:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13858:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13861:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13861:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13851:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13851:6:16"
																},
																"nativeSrc": "13851:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13851:15:16"
															},
															"nativeSrc": "13851:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13851:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13882:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13882:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13885:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13885:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13875:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13875:6:16"
																},
																"nativeSrc": "13875:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13875:15:16"
															},
															"nativeSrc": "13875:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13875:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "13716:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "13716:180:16"
											},
											{
												"body": {
													"nativeSrc": "14016:34:16",
													"nodeType": "YulBlock",
													"src": "14016:34:16",
													"statements": [
														{
															"nativeSrc": "14026:18:16",
															"nodeType": "YulAssignment",
															"src": "14026:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "14041:3:16",
																"nodeType": "YulIdentifier",
																"src": "14041:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14026:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "14026:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13902:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13988:3:16",
														"nodeType": "YulTypedName",
														"src": "13988:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13993:6:16",
														"nodeType": "YulTypedName",
														"src": "13993:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14004:11:16",
														"nodeType": "YulTypedName",
														"src": "14004:11:16",
														"type": ""
													}
												],
												"src": "13902:148:16"
											},
											{
												"body": {
													"nativeSrc": "14166:280:16",
													"nodeType": "YulBlock",
													"src": "14166:280:16",
													"statements": [
														{
															"nativeSrc": "14176:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14176:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14223:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14223:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14190:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "14190:32:16"
																},
																"nativeSrc": "14190:39:16",
																"nodeType": "YulFunctionCall",
																"src": "14190:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14180:6:16",
																	"nodeType": "YulTypedName",
																	"src": "14180:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14238:96:16",
															"nodeType": "YulAssignment",
															"src": "14238:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14322:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14322:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14327:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14327:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14245:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "14245:76:16"
																},
																"nativeSrc": "14245:89:16",
																"nodeType": "YulFunctionCall",
																"src": "14245:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14238:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14238:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14382:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "14382:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14389:4:16",
																				"nodeType": "YulLiteral",
																				"src": "14389:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14378:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14378:3:16"
																		},
																		"nativeSrc": "14378:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14378:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14396:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14396:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14401:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14401:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14343:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "14343:34:16"
																},
																"nativeSrc": "14343:65:16",
																"nodeType": "YulFunctionCall",
																"src": "14343:65:16"
															},
															"nativeSrc": "14343:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "14343:65:16"
														},
														{
															"nativeSrc": "14417:23:16",
															"nodeType": "YulAssignment",
															"src": "14417:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14428:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14428:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14433:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14433:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14424:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14424:3:16"
																},
																"nativeSrc": "14424:16:16",
																"nodeType": "YulFunctionCall",
																"src": "14424:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14417:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14417:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14056:390:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14147:5:16",
														"nodeType": "YulTypedName",
														"src": "14147:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14154:3:16",
														"nodeType": "YulTypedName",
														"src": "14154:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14162:3:16",
														"nodeType": "YulTypedName",
														"src": "14162:3:16",
														"type": ""
													}
												],
												"src": "14056:390:16"
											},
											{
												"body": {
													"nativeSrc": "14636:251:16",
													"nodeType": "YulBlock",
													"src": "14636:251:16",
													"statements": [
														{
															"nativeSrc": "14647:102:16",
															"nodeType": "YulAssignment",
															"src": "14647:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14736:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14736:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14745:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14745:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14654:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "14654:81:16"
																},
																"nativeSrc": "14654:95:16",
																"nodeType": "YulFunctionCall",
																"src": "14654:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14647:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14647:3:16"
																}
															]
														},
														{
															"nativeSrc": "14759:102:16",
															"nodeType": "YulAssignment",
															"src": "14759:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14848:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14848:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14857:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14857:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14766:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "14766:81:16"
																},
																"nativeSrc": "14766:95:16",
																"nodeType": "YulFunctionCall",
																"src": "14766:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14759:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14759:3:16"
																}
															]
														},
														{
															"nativeSrc": "14871:10:16",
															"nodeType": "YulAssignment",
															"src": "14871:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "14878:3:16",
																"nodeType": "YulIdentifier",
																"src": "14878:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14871:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14871:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14452:435:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14607:3:16",
														"nodeType": "YulTypedName",
														"src": "14607:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14613:6:16",
														"nodeType": "YulTypedName",
														"src": "14613:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14621:6:16",
														"nodeType": "YulTypedName",
														"src": "14621:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14632:3:16",
														"nodeType": "YulTypedName",
														"src": "14632:3:16",
														"type": ""
													}
												],
												"src": "14452:435:16"
											},
											{
												"body": {
													"nativeSrc": "14947:87:16",
													"nodeType": "YulBlock",
													"src": "14947:87:16",
													"statements": [
														{
															"nativeSrc": "14957:11:16",
															"nodeType": "YulAssignment",
															"src": "14957:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "14965:3:16",
																"nodeType": "YulIdentifier",
																"src": "14965:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14957:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14957:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14985:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14985:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14988:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14988:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14978:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14978:6:16"
																},
																"nativeSrc": "14978:14:16",
																"nodeType": "YulFunctionCall",
																"src": "14978:14:16"
															},
															"nativeSrc": "14978:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "14978:14:16"
														},
														{
															"nativeSrc": "15001:26:16",
															"nodeType": "YulAssignment",
															"src": "15001:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15019:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15019:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15022:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15022:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15009:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "15009:9:16"
																},
																"nativeSrc": "15009:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15009:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15001:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15001:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14893:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14934:3:16",
														"nodeType": "YulTypedName",
														"src": "14934:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14942:4:16",
														"nodeType": "YulTypedName",
														"src": "14942:4:16",
														"type": ""
													}
												],
												"src": "14893:141:16"
											},
											{
												"body": {
													"nativeSrc": "15084:49:16",
													"nodeType": "YulBlock",
													"src": "15084:49:16",
													"statements": [
														{
															"nativeSrc": "15094:33:16",
															"nodeType": "YulAssignment",
															"src": "15094:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15112:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "15112:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15119:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15119:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15108:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15108:3:16"
																		},
																		"nativeSrc": "15108:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15108:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15124:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15124:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15104:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15104:3:16"
																},
																"nativeSrc": "15104:23:16",
																"nodeType": "YulFunctionCall",
																"src": "15104:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15094:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15094:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15040:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15067:5:16",
														"nodeType": "YulTypedName",
														"src": "15067:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15077:6:16",
														"nodeType": "YulTypedName",
														"src": "15077:6:16",
														"type": ""
													}
												],
												"src": "15040:93:16"
											},
											{
												"body": {
													"nativeSrc": "15192:54:16",
													"nodeType": "YulBlock",
													"src": "15192:54:16",
													"statements": [
														{
															"nativeSrc": "15202:37:16",
															"nodeType": "YulAssignment",
															"src": "15202:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15227:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15227:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15233:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15233:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15223:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15223:3:16"
																},
																"nativeSrc": "15223:16:16",
																"nodeType": "YulFunctionCall",
																"src": "15223:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15202:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "15202:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15139:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15167:4:16",
														"nodeType": "YulTypedName",
														"src": "15167:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15173:5:16",
														"nodeType": "YulTypedName",
														"src": "15173:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15183:8:16",
														"nodeType": "YulTypedName",
														"src": "15183:8:16",
														"type": ""
													}
												],
												"src": "15139:107:16"
											},
											{
												"body": {
													"nativeSrc": "15328:317:16",
													"nodeType": "YulBlock",
													"src": "15328:317:16",
													"statements": [
														{
															"nativeSrc": "15338:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15338:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "15359:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "15359:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15371:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15371:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15355:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15355:3:16"
																},
																"nativeSrc": "15355:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15355:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15342:9:16",
																	"nodeType": "YulTypedName",
																	"src": "15342:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15382:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15382:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15413:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15413:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15424:66:16",
																		"nodeType": "YulLiteral",
																		"src": "15424:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15394:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "15394:18:16"
																},
																"nativeSrc": "15394:97:16",
																"nodeType": "YulFunctionCall",
																"src": "15394:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15386:4:16",
																	"nodeType": "YulTypedName",
																	"src": "15386:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15500:51:16",
															"nodeType": "YulAssignment",
															"src": "15500:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15531:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15531:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "15542:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "15542:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15512:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "15512:18:16"
																},
																"nativeSrc": "15512:39:16",
																"nodeType": "YulFunctionCall",
																"src": "15512:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15500:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "15500:8:16"
																}
															]
														},
														{
															"nativeSrc": "15560:30:16",
															"nodeType": "YulAssignment",
															"src": "15560:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15573:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15573:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "15584:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15584:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15580:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15580:3:16"
																		},
																		"nativeSrc": "15580:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15580:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15569:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15569:3:16"
																},
																"nativeSrc": "15569:21:16",
																"nodeType": "YulFunctionCall",
																"src": "15569:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15560:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "15560:5:16"
																}
															]
														},
														{
															"nativeSrc": "15599:40:16",
															"nodeType": "YulAssignment",
															"src": "15599:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15612:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15612:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15623:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "15623:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15633:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15633:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15619:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15619:3:16"
																		},
																		"nativeSrc": "15619:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15619:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15609:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "15609:2:16"
																},
																"nativeSrc": "15609:30:16",
																"nodeType": "YulFunctionCall",
																"src": "15609:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15599:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15599:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15252:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15289:5:16",
														"nodeType": "YulTypedName",
														"src": "15289:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15296:10:16",
														"nodeType": "YulTypedName",
														"src": "15296:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15308:8:16",
														"nodeType": "YulTypedName",
														"src": "15308:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15321:6:16",
														"nodeType": "YulTypedName",
														"src": "15321:6:16",
														"type": ""
													}
												],
												"src": "15252:393:16"
											},
											{
												"body": {
													"nativeSrc": "15683:28:16",
													"nodeType": "YulBlock",
													"src": "15683:28:16",
													"statements": [
														{
															"nativeSrc": "15693:12:16",
															"nodeType": "YulAssignment",
															"src": "15693:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "15700:5:16",
																"nodeType": "YulIdentifier",
																"src": "15700:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15693:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15693:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15651:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15669:5:16",
														"nodeType": "YulTypedName",
														"src": "15669:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15679:3:16",
														"nodeType": "YulTypedName",
														"src": "15679:3:16",
														"type": ""
													}
												],
												"src": "15651:60:16"
											},
											{
												"body": {
													"nativeSrc": "15777:82:16",
													"nodeType": "YulBlock",
													"src": "15777:82:16",
													"statements": [
														{
															"nativeSrc": "15787:66:16",
															"nodeType": "YulAssignment",
															"src": "15787:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15845:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "15845:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15827:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "15827:17:16"
																				},
																				"nativeSrc": "15827:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15827:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15818:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "15818:8:16"
																		},
																		"nativeSrc": "15818:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15818:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15800:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "15800:17:16"
																},
																"nativeSrc": "15800:53:16",
																"nodeType": "YulFunctionCall",
																"src": "15800:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15787:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "15787:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15717:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15757:5:16",
														"nodeType": "YulTypedName",
														"src": "15757:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15767:9:16",
														"nodeType": "YulTypedName",
														"src": "15767:9:16",
														"type": ""
													}
												],
												"src": "15717:142:16"
											},
											{
												"body": {
													"nativeSrc": "15912:28:16",
													"nodeType": "YulBlock",
													"src": "15912:28:16",
													"statements": [
														{
															"nativeSrc": "15922:12:16",
															"nodeType": "YulAssignment",
															"src": "15922:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "15929:5:16",
																"nodeType": "YulIdentifier",
																"src": "15929:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15922:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15922:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15865:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15898:5:16",
														"nodeType": "YulTypedName",
														"src": "15898:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15908:3:16",
														"nodeType": "YulTypedName",
														"src": "15908:3:16",
														"type": ""
													}
												],
												"src": "15865:75:16"
											},
											{
												"body": {
													"nativeSrc": "16022:193:16",
													"nodeType": "YulBlock",
													"src": "16022:193:16",
													"statements": [
														{
															"nativeSrc": "16032:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16032:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "16087:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "16087:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "16056:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "16056:30:16"
																},
																"nativeSrc": "16056:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16056:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16036:16:16",
																	"nodeType": "YulTypedName",
																	"src": "16036:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16111:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16111:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16151:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "16151:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16145:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "16145:5:16"
																				},
																				"nativeSrc": "16145:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16145:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16158:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16158:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "16190:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "16190:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "16166:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "16166:23:16"
																				},
																				"nativeSrc": "16166:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16166:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "16117:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "16117:27:16"
																		},
																		"nativeSrc": "16117:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16117:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16104:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16104:6:16"
																},
																"nativeSrc": "16104:105:16",
																"nodeType": "YulFunctionCall",
																"src": "16104:105:16"
															},
															"nativeSrc": "16104:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "16104:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15946:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15999:4:16",
														"nodeType": "YulTypedName",
														"src": "15999:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16005:6:16",
														"nodeType": "YulTypedName",
														"src": "16005:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16013:7:16",
														"nodeType": "YulTypedName",
														"src": "16013:7:16",
														"type": ""
													}
												],
												"src": "15946:269:16"
											},
											{
												"body": {
													"nativeSrc": "16270:24:16",
													"nodeType": "YulBlock",
													"src": "16270:24:16",
													"statements": [
														{
															"nativeSrc": "16280:8:16",
															"nodeType": "YulAssignment",
															"src": "16280:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "16287:1:16",
																"nodeType": "YulLiteral",
																"src": "16287:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16280:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16280:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16221:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16266:3:16",
														"nodeType": "YulTypedName",
														"src": "16266:3:16",
														"type": ""
													}
												],
												"src": "16221:73:16"
											},
											{
												"body": {
													"nativeSrc": "16353:136:16",
													"nodeType": "YulBlock",
													"src": "16353:136:16",
													"statements": [
														{
															"nativeSrc": "16363:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16363:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "16377:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "16377:30:16"
																},
																"nativeSrc": "16377:32:16",
																"nodeType": "YulFunctionCall",
																"src": "16377:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "16367:6:16",
																	"nodeType": "YulTypedName",
																	"src": "16367:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16462:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16462:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16468:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16468:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "16476:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16476:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "16418:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "16418:43:16"
																},
																"nativeSrc": "16418:65:16",
																"nodeType": "YulFunctionCall",
																"src": "16418:65:16"
															},
															"nativeSrc": "16418:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "16418:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16300:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16339:4:16",
														"nodeType": "YulTypedName",
														"src": "16339:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16345:6:16",
														"nodeType": "YulTypedName",
														"src": "16345:6:16",
														"type": ""
													}
												],
												"src": "16300:189:16"
											},
											{
												"body": {
													"nativeSrc": "16545:136:16",
													"nodeType": "YulBlock",
													"src": "16545:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "16612:63:16",
																"nodeType": "YulBlock",
																"src": "16612:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16656:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "16656:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16663:1:16",
																					"nodeType": "YulLiteral",
																					"src": "16663:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "16626:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "16626:29:16"
																			},
																			"nativeSrc": "16626:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16626:39:16"
																		},
																		"nativeSrc": "16626:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "16626:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16565:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16565:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16572:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16572:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16562:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "16562:2:16"
																},
																"nativeSrc": "16562:14:16",
																"nodeType": "YulFunctionCall",
																"src": "16562:14:16"
															},
															"nativeSrc": "16555:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16577:26:16",
																"nodeType": "YulBlock",
																"src": "16577:26:16",
																"statements": [
																	{
																		"nativeSrc": "16579:22:16",
																		"nodeType": "YulAssignment",
																		"src": "16579:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16592:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "16592:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "16599:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16588:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "16588:3:16"
																			},
																			"nativeSrc": "16588:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16588:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "16579:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16579:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16559:2:16",
																"nodeType": "YulBlock",
																"src": "16559:2:16",
																"statements": []
															},
															"src": "16555:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "16495:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16533:5:16",
														"nodeType": "YulTypedName",
														"src": "16533:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16540:3:16",
														"nodeType": "YulTypedName",
														"src": "16540:3:16",
														"type": ""
													}
												],
												"src": "16495:186:16"
											},
											{
												"body": {
													"nativeSrc": "16766:464:16",
													"nodeType": "YulBlock",
													"src": "16766:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "16792:431:16",
																"nodeType": "YulBlock",
																"src": "16792:431:16",
																"statements": [
																	{
																		"nativeSrc": "16806:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16806:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16854:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "16854:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16822:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "16822:31:16"
																			},
																			"nativeSrc": "16822:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16822:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16810:8:16",
																				"nodeType": "YulTypedName",
																				"src": "16810:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16873:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16873:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16896:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "16896:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16924:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "16924:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16906:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "16906:17:16"
																					},
																					"nativeSrc": "16906:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "16906:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16892:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "16892:3:16"
																			},
																			"nativeSrc": "16892:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16892:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16877:11:16",
																				"nodeType": "YulTypedName",
																				"src": "16877:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17093:27:16",
																			"nodeType": "YulBlock",
																			"src": "17093:27:16",
																			"statements": [
																				{
																					"nativeSrc": "17095:23:16",
																					"nodeType": "YulAssignment",
																					"src": "17095:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "17110:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "17110:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "17095:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "17095:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "17077:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "17077:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17089:2:16",
																					"nodeType": "YulLiteral",
																					"src": "17089:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "17074:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "17074:2:16"
																			},
																			"nativeSrc": "17074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17074:18:16"
																		},
																		"nativeSrc": "17071:49:16",
																		"nodeType": "YulIf",
																		"src": "17071:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "17162:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "17162:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "17179:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "17179:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17207:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "17207:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "17189:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "17189:17:16"
																							},
																							"nativeSrc": "17189:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "17189:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17175:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "17175:3:16"
																					},
																					"nativeSrc": "17175:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "17175:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "17133:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "17133:28:16"
																			},
																			"nativeSrc": "17133:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17133:80:16"
																		},
																		"nativeSrc": "17133:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "17133:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16783:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16783:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16788:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16780:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "16780:2:16"
																},
																"nativeSrc": "16780:11:16",
																"nodeType": "YulFunctionCall",
																"src": "16780:11:16"
															},
															"nativeSrc": "16777:446:16",
															"nodeType": "YulIf",
															"src": "16777:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "16687:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "16742:5:16",
														"nodeType": "YulTypedName",
														"src": "16742:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16749:3:16",
														"nodeType": "YulTypedName",
														"src": "16749:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "16754:10:16",
														"nodeType": "YulTypedName",
														"src": "16754:10:16",
														"type": ""
													}
												],
												"src": "16687:543:16"
											},
											{
												"body": {
													"nativeSrc": "17299:54:16",
													"nodeType": "YulBlock",
													"src": "17299:54:16",
													"statements": [
														{
															"nativeSrc": "17309:37:16",
															"nodeType": "YulAssignment",
															"src": "17309:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17334:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17334:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17340:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17340:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17330:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17330:3:16"
																},
																"nativeSrc": "17330:16:16",
																"nodeType": "YulFunctionCall",
																"src": "17330:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17309:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "17309:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17236:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17274:4:16",
														"nodeType": "YulTypedName",
														"src": "17274:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17280:5:16",
														"nodeType": "YulTypedName",
														"src": "17280:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17290:8:16",
														"nodeType": "YulTypedName",
														"src": "17290:8:16",
														"type": ""
													}
												],
												"src": "17236:117:16"
											},
											{
												"body": {
													"nativeSrc": "17410:118:16",
													"nodeType": "YulBlock",
													"src": "17410:118:16",
													"statements": [
														{
															"nativeSrc": "17420:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17420:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17469:1:16",
																						"nodeType": "YulLiteral",
																						"src": "17469:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "17472:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "17472:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "17465:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "17465:3:16"
																				},
																				"nativeSrc": "17465:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17465:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17484:1:16",
																						"nodeType": "YulLiteral",
																						"src": "17484:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "17480:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "17480:3:16"
																				},
																				"nativeSrc": "17480:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17480:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "17436:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "17436:28:16"
																		},
																		"nativeSrc": "17436:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17436:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "17432:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17432:3:16"
																},
																"nativeSrc": "17432:56:16",
																"nodeType": "YulFunctionCall",
																"src": "17432:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17424:4:16",
																	"nodeType": "YulTypedName",
																	"src": "17424:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17497:25:16",
															"nodeType": "YulAssignment",
															"src": "17497:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17511:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17511:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "17517:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17517:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17507:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17507:3:16"
																},
																"nativeSrc": "17507:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17507:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17497:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17497:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "17359:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17387:4:16",
														"nodeType": "YulTypedName",
														"src": "17387:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "17393:5:16",
														"nodeType": "YulTypedName",
														"src": "17393:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17403:6:16",
														"nodeType": "YulTypedName",
														"src": "17403:6:16",
														"type": ""
													}
												],
												"src": "17359:169:16"
											},
											{
												"body": {
													"nativeSrc": "17614:214:16",
													"nodeType": "YulBlock",
													"src": "17614:214:16",
													"statements": [
														{
															"nativeSrc": "17747:37:16",
															"nodeType": "YulAssignment",
															"src": "17747:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17774:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17774:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17780:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17780:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "17755:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "17755:18:16"
																},
																"nativeSrc": "17755:29:16",
																"nodeType": "YulFunctionCall",
																"src": "17755:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17747:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17747:4:16"
																}
															]
														},
														{
															"nativeSrc": "17793:29:16",
															"nodeType": "YulAssignment",
															"src": "17793:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17804:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17804:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17814:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17814:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17817:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "17817:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17810:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17810:3:16"
																		},
																		"nativeSrc": "17810:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17810:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17801:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "17801:2:16"
																},
																"nativeSrc": "17801:21:16",
																"nodeType": "YulFunctionCall",
																"src": "17801:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17793:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17793:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "17533:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17595:4:16",
														"nodeType": "YulTypedName",
														"src": "17595:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17601:3:16",
														"nodeType": "YulTypedName",
														"src": "17601:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "17609:4:16",
														"nodeType": "YulTypedName",
														"src": "17609:4:16",
														"type": ""
													}
												],
												"src": "17533:295:16"
											},
											{
												"body": {
													"nativeSrc": "17925:1303:16",
													"nodeType": "YulBlock",
													"src": "17925:1303:16",
													"statements": [
														{
															"nativeSrc": "17936:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17936:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17983:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17983:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17950:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "17950:32:16"
																},
																"nativeSrc": "17950:37:16",
																"nodeType": "YulFunctionCall",
																"src": "17950:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17940:6:16",
																	"nodeType": "YulTypedName",
																	"src": "17940:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18072:22:16",
																"nodeType": "YulBlock",
																"src": "18072:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18074:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "18074:16:16"
																			},
																			"nativeSrc": "18074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18074:18:16"
																		},
																		"nativeSrc": "18074:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18074:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18044:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18044:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18052:18:16",
																		"nodeType": "YulLiteral",
																		"src": "18052:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18041:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18041:2:16"
																},
																"nativeSrc": "18041:30:16",
																"nodeType": "YulFunctionCall",
																"src": "18041:30:16"
															},
															"nativeSrc": "18038:56:16",
															"nodeType": "YulIf",
															"src": "18038:56:16"
														},
														{
															"nativeSrc": "18104:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18104:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "18150:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "18150:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "18144:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "18144:5:16"
																		},
																		"nativeSrc": "18144:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18144:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "18118:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "18118:25:16"
																},
																"nativeSrc": "18118:38:16",
																"nodeType": "YulFunctionCall",
																"src": "18118:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "18108:6:16",
																	"nodeType": "YulTypedName",
																	"src": "18108:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18249:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18249:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18255:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18255:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18263:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18263:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18203:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "18203:45:16"
																},
																"nativeSrc": "18203:67:16",
																"nodeType": "YulFunctionCall",
																"src": "18203:67:16"
															},
															"nativeSrc": "18203:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "18203:67:16"
														},
														{
															"nativeSrc": "18280:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18280:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "18297:1:16",
																"nodeType": "YulLiteral",
																"src": "18297:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18284:9:16",
																	"nodeType": "YulTypedName",
																	"src": "18284:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18308:17:16",
															"nodeType": "YulAssignment",
															"src": "18308:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "18321:4:16",
																"nodeType": "YulLiteral",
																"src": "18321:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18308:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "18308:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18372:611:16",
																		"nodeType": "YulBlock",
																		"src": "18372:611:16",
																		"statements": [
																			{
																				"nativeSrc": "18386:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18386:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "18405:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "18405:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "18417:4:16",
																									"nodeType": "YulLiteral",
																									"src": "18417:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "18413:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "18413:3:16"
																							},
																							"nativeSrc": "18413:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "18413:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18401:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "18401:3:16"
																					},
																					"nativeSrc": "18401:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18401:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "18390:7:16",
																						"nodeType": "YulTypedName",
																						"src": "18390:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18437:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18437:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18483:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "18483:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "18451:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "18451:31:16"
																					},
																					"nativeSrc": "18451:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18451:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "18441:6:16",
																						"nodeType": "YulTypedName",
																						"src": "18441:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18501:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18501:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18510:1:16",
																					"nodeType": "YulLiteral",
																					"src": "18510:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "18505:1:16",
																						"nodeType": "YulTypedName",
																						"src": "18505:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18569:163:16",
																					"nodeType": "YulBlock",
																					"src": "18569:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18594:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "18594:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "18612:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "18612:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "18617:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "18617:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "18608:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "18608:3:16"
																												},
																												"nativeSrc": "18608:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "18608:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "18602:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "18602:5:16"
																										},
																										"nativeSrc": "18602:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "18602:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18587:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "18587:6:16"
																								},
																								"nativeSrc": "18587:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "18587:42:16"
																							},
																							"nativeSrc": "18587:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "18587:42:16"
																						},
																						{
																							"nativeSrc": "18646:24:16",
																							"nodeType": "YulAssignment",
																							"src": "18646:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18660:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "18660:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18668:1:16",
																										"nodeType": "YulLiteral",
																										"src": "18668:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18656:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "18656:3:16"
																								},
																								"nativeSrc": "18656:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "18656:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "18646:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "18646:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "18687:31:16",
																							"nodeType": "YulAssignment",
																							"src": "18687:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "18704:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "18704:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18715:2:16",
																										"nodeType": "YulLiteral",
																										"src": "18715:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18700:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "18700:3:16"
																								},
																								"nativeSrc": "18700:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "18700:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "18687:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "18687:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "18535:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "18535:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18538:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "18538:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18532:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "18532:2:16"
																					},
																					"nativeSrc": "18532:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18532:14:16"
																				},
																				"nativeSrc": "18524:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "18547:21:16",
																					"nodeType": "YulBlock",
																					"src": "18547:21:16",
																					"statements": [
																						{
																							"nativeSrc": "18549:17:16",
																							"nodeType": "YulAssignment",
																							"src": "18549:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "18558:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "18558:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18561:4:16",
																										"nodeType": "YulLiteral",
																										"src": "18561:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18554:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "18554:3:16"
																								},
																								"nativeSrc": "18554:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "18554:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "18549:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "18549:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "18528:3:16",
																					"nodeType": "YulBlock",
																					"src": "18528:3:16",
																					"statements": []
																				},
																				"src": "18524:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "18768:156:16",
																					"nodeType": "YulBlock",
																					"src": "18768:156:16",
																					"statements": [
																						{
																							"nativeSrc": "18786:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18786:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18813:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "18813:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18818:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "18818:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18809:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "18809:3:16"
																										},
																										"nativeSrc": "18809:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "18809:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18803:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "18803:5:16"
																								},
																								"nativeSrc": "18803:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "18803:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18790:9:16",
																									"nodeType": "YulTypedName",
																									"src": "18790:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18853:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "18853:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18880:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "18880:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18895:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "18895:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18903:4:16",
																														"nodeType": "YulLiteral",
																														"src": "18903:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18891:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "18891:3:16"
																												},
																												"nativeSrc": "18891:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "18891:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18861:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "18861:18:16"
																										},
																										"nativeSrc": "18861:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "18861:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18846:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "18846:6:16"
																								},
																								"nativeSrc": "18846:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "18846:64:16"
																							},
																							"nativeSrc": "18846:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "18846:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18751:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "18751:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18760:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "18760:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18748:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "18748:2:16"
																					},
																					"nativeSrc": "18748:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18748:19:16"
																				},
																				"nativeSrc": "18745:179:16",
																				"nodeType": "YulIf",
																				"src": "18745:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18944:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "18944:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18958:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "18958:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18966:1:16",
																											"nodeType": "YulLiteral",
																											"src": "18966:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18954:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "18954:3:16"
																									},
																									"nativeSrc": "18954:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "18954:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18970:1:16",
																									"nodeType": "YulLiteral",
																									"src": "18970:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18950:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "18950:3:16"
																							},
																							"nativeSrc": "18950:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "18950:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18937:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "18937:6:16"
																					},
																					"nativeSrc": "18937:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18937:36:16"
																				},
																				"nativeSrc": "18937:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "18937:36:16"
																			}
																		]
																	},
																	"nativeSrc": "18365:618:16",
																	"nodeType": "YulCase",
																	"src": "18365:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18370:1:16",
																		"nodeType": "YulLiteral",
																		"src": "18370:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19000:222:16",
																		"nodeType": "YulBlock",
																		"src": "19000:222:16",
																		"statements": [
																			{
																				"nativeSrc": "19014:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19014:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19027:1:16",
																					"nodeType": "YulLiteral",
																					"src": "19027:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "19018:5:16",
																						"nodeType": "YulTypedName",
																						"src": "19018:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19051:67:16",
																					"nodeType": "YulBlock",
																					"src": "19051:67:16",
																					"statements": [
																						{
																							"nativeSrc": "19069:35:16",
																							"nodeType": "YulAssignment",
																							"src": "19069:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19088:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "19088:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19093:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "19093:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19084:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "19084:3:16"
																										},
																										"nativeSrc": "19084:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "19084:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19078:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "19078:5:16"
																								},
																								"nativeSrc": "19078:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19078:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "19069:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "19069:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19044:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "19044:6:16"
																				},
																				"nativeSrc": "19041:77:16",
																				"nodeType": "YulIf",
																				"src": "19041:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19138:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "19138:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "19197:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "19197:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19204:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19204:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "19144:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "19144:52:16"
																							},
																							"nativeSrc": "19144:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "19144:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19131:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "19131:6:16"
																					},
																					"nativeSrc": "19131:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19131:81:16"
																				},
																				"nativeSrc": "19131:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "19131:81:16"
																			}
																		]
																	},
																	"nativeSrc": "18992:230:16",
																	"nodeType": "YulCase",
																	"src": "18992:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18345:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18345:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18353:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18353:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18342:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18342:2:16"
																},
																"nativeSrc": "18342:14:16",
																"nodeType": "YulFunctionCall",
																"src": "18342:14:16"
															},
															"nativeSrc": "18335:887:16",
															"nodeType": "YulSwitch",
															"src": "18335:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "17833:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17914:4:16",
														"nodeType": "YulTypedName",
														"src": "17914:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17920:3:16",
														"nodeType": "YulTypedName",
														"src": "17920:3:16",
														"type": ""
													}
												],
												"src": "17833:1395:16"
											},
											{
												"body": {
													"nativeSrc": "19292:40:16",
													"nodeType": "YulBlock",
													"src": "19292:40:16",
													"statements": [
														{
															"nativeSrc": "19303:22:16",
															"nodeType": "YulAssignment",
															"src": "19303:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19319:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19319:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19313:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "19313:5:16"
																},
																"nativeSrc": "19313:12:16",
																"nodeType": "YulFunctionCall",
																"src": "19313:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19303:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19303:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "19234:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19275:5:16",
														"nodeType": "YulTypedName",
														"src": "19275:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19285:6:16",
														"nodeType": "YulTypedName",
														"src": "19285:6:16",
														"type": ""
													}
												],
												"src": "19234:98:16"
											},
											{
												"body": {
													"nativeSrc": "19433:73:16",
													"nodeType": "YulBlock",
													"src": "19433:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19450:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19450:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19455:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19455:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19443:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19443:6:16"
																},
																"nativeSrc": "19443:19:16",
																"nodeType": "YulFunctionCall",
																"src": "19443:19:16"
															},
															"nativeSrc": "19443:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "19443:19:16"
														},
														{
															"nativeSrc": "19471:29:16",
															"nodeType": "YulAssignment",
															"src": "19471:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19490:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19490:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19495:4:16",
																		"nodeType": "YulLiteral",
																		"src": "19495:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19486:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19486:3:16"
																},
																"nativeSrc": "19486:14:16",
																"nodeType": "YulFunctionCall",
																"src": "19486:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19471:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "19471:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19338:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19405:3:16",
														"nodeType": "YulTypedName",
														"src": "19405:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19410:6:16",
														"nodeType": "YulTypedName",
														"src": "19410:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19421:11:16",
														"nodeType": "YulTypedName",
														"src": "19421:11:16",
														"type": ""
													}
												],
												"src": "19338:168:16"
											},
											{
												"body": {
													"nativeSrc": "19602:283:16",
													"nodeType": "YulBlock",
													"src": "19602:283:16",
													"statements": [
														{
															"nativeSrc": "19612:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19612:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19658:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19658:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "19626:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "19626:31:16"
																},
																"nativeSrc": "19626:38:16",
																"nodeType": "YulFunctionCall",
																"src": "19626:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19616:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19616:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19673:77:16",
															"nodeType": "YulAssignment",
															"src": "19673:77:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19738:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19738:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19743:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19743:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19680:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "19680:57:16"
																},
																"nativeSrc": "19680:70:16",
																"nodeType": "YulFunctionCall",
																"src": "19680:70:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19673:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19673:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19798:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "19798:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19805:4:16",
																				"nodeType": "YulLiteral",
																				"src": "19805:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19794:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19794:3:16"
																		},
																		"nativeSrc": "19794:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19794:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19812:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19812:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19817:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19817:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19759:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "19759:34:16"
																},
																"nativeSrc": "19759:65:16",
																"nodeType": "YulFunctionCall",
																"src": "19759:65:16"
															},
															"nativeSrc": "19759:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "19759:65:16"
														},
														{
															"nativeSrc": "19833:46:16",
															"nodeType": "YulAssignment",
															"src": "19833:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19844:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19844:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19871:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "19871:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19849:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "19849:21:16"
																		},
																		"nativeSrc": "19849:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19849:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19840:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19840:3:16"
																},
																"nativeSrc": "19840:39:16",
																"nodeType": "YulFunctionCall",
																"src": "19840:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19833:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19833:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19512:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19583:5:16",
														"nodeType": "YulTypedName",
														"src": "19583:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19590:3:16",
														"nodeType": "YulTypedName",
														"src": "19590:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19598:3:16",
														"nodeType": "YulTypedName",
														"src": "19598:3:16",
														"type": ""
													}
												],
												"src": "19512:373:16"
											},
											{
												"body": {
													"nativeSrc": "20091:440:16",
													"nodeType": "YulBlock",
													"src": "20091:440:16",
													"statements": [
														{
															"nativeSrc": "20101:27:16",
															"nodeType": "YulAssignment",
															"src": "20101:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20113:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "20113:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20124:3:16",
																		"nodeType": "YulLiteral",
																		"src": "20124:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20109:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20109:3:16"
																},
																"nativeSrc": "20109:19:16",
																"nodeType": "YulFunctionCall",
																"src": "20109:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20101:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20101:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20182:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20182:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20195:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20195:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20206:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20206:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20191:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20191:3:16"
																		},
																		"nativeSrc": "20191:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20191:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20138:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20138:43:16"
																},
																"nativeSrc": "20138:71:16",
																"nodeType": "YulFunctionCall",
																"src": "20138:71:16"
															},
															"nativeSrc": "20138:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "20138:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20263:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20263:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20276:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20276:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20287:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20287:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20272:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20272:3:16"
																		},
																		"nativeSrc": "20272:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20272:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20219:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20219:43:16"
																},
																"nativeSrc": "20219:72:16",
																"nodeType": "YulFunctionCall",
																"src": "20219:72:16"
															},
															"nativeSrc": "20219:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "20219:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20345:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20345:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20358:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20358:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20369:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20369:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20354:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20354:3:16"
																		},
																		"nativeSrc": "20354:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20354:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20301:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20301:43:16"
																},
																"nativeSrc": "20301:72:16",
																"nodeType": "YulFunctionCall",
																"src": "20301:72:16"
															},
															"nativeSrc": "20301:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "20301:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20394:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20394:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20405:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20405:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20390:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20390:3:16"
																		},
																		"nativeSrc": "20390:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20390:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20414:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "20414:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20420:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20420:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20410:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20410:3:16"
																		},
																		"nativeSrc": "20410:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20410:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20383:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20383:6:16"
																},
																"nativeSrc": "20383:48:16",
																"nodeType": "YulFunctionCall",
																"src": "20383:48:16"
															},
															"nativeSrc": "20383:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "20383:48:16"
														},
														{
															"nativeSrc": "20440:84:16",
															"nodeType": "YulAssignment",
															"src": "20440:84:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20510:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20510:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20519:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20519:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20448:61:16",
																	"nodeType": "YulIdentifier",
																	"src": "20448:61:16"
																},
																"nativeSrc": "20448:76:16",
																"nodeType": "YulFunctionCall",
																"src": "20448:76:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20440:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20440:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19891:640:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20039:9:16",
														"nodeType": "YulTypedName",
														"src": "20039:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20051:6:16",
														"nodeType": "YulTypedName",
														"src": "20051:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20059:6:16",
														"nodeType": "YulTypedName",
														"src": "20059:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20067:6:16",
														"nodeType": "YulTypedName",
														"src": "20067:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20075:6:16",
														"nodeType": "YulTypedName",
														"src": "20075:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20086:4:16",
														"nodeType": "YulTypedName",
														"src": "20086:4:16",
														"type": ""
													}
												],
												"src": "19891:640:16"
											},
											{
												"body": {
													"nativeSrc": "20599:79:16",
													"nodeType": "YulBlock",
													"src": "20599:79:16",
													"statements": [
														{
															"nativeSrc": "20609:22:16",
															"nodeType": "YulAssignment",
															"src": "20609:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20624:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20624:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20618:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "20618:5:16"
																},
																"nativeSrc": "20618:13:16",
																"nodeType": "YulFunctionCall",
																"src": "20618:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20609:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "20609:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20666:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "20666:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "20640:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "20640:25:16"
																},
																"nativeSrc": "20640:32:16",
																"nodeType": "YulFunctionCall",
																"src": "20640:32:16"
															},
															"nativeSrc": "20640:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "20640:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "20537:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20577:6:16",
														"nodeType": "YulTypedName",
														"src": "20577:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20585:3:16",
														"nodeType": "YulTypedName",
														"src": "20585:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20593:5:16",
														"nodeType": "YulTypedName",
														"src": "20593:5:16",
														"type": ""
													}
												],
												"src": "20537:141:16"
											},
											{
												"body": {
													"nativeSrc": "20760:273:16",
													"nodeType": "YulBlock",
													"src": "20760:273:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "20806:83:16",
																"nodeType": "YulBlock",
																"src": "20806:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20808:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "20808:77:16"
																			},
																			"nativeSrc": "20808:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "20808:79:16"
																		},
																		"nativeSrc": "20808:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "20808:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20781:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "20781:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20790:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20790:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20777:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20777:3:16"
																		},
																		"nativeSrc": "20777:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20777:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20802:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20802:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20773:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20773:3:16"
																},
																"nativeSrc": "20773:32:16",
																"nodeType": "YulFunctionCall",
																"src": "20773:32:16"
															},
															"nativeSrc": "20770:119:16",
															"nodeType": "YulIf",
															"src": "20770:119:16"
														},
														{
															"nativeSrc": "20899:127:16",
															"nodeType": "YulBlock",
															"src": "20899:127:16",
															"statements": [
																{
																	"nativeSrc": "20914:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20914:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20928:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20928:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20918:6:16",
																			"nodeType": "YulTypedName",
																			"src": "20918:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20943:73:16",
																	"nodeType": "YulAssignment",
																	"src": "20943:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20988:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "20988:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20999:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "20999:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20984:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "20984:3:16"
																				},
																				"nativeSrc": "20984:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "20984:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21008:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "21008:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20953:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "20953:30:16"
																		},
																		"nativeSrc": "20953:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20953:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20943:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "20943:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "20684:349:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20730:9:16",
														"nodeType": "YulTypedName",
														"src": "20730:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20741:7:16",
														"nodeType": "YulTypedName",
														"src": "20741:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20753:6:16",
														"nodeType": "YulTypedName",
														"src": "20753:6:16",
														"type": ""
													}
												],
												"src": "20684:349:16"
											},
											{
												"body": {
													"nativeSrc": "21165:206:16",
													"nodeType": "YulBlock",
													"src": "21165:206:16",
													"statements": [
														{
															"nativeSrc": "21175:26:16",
															"nodeType": "YulAssignment",
															"src": "21175:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21187:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "21187:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21198:2:16",
																		"nodeType": "YulLiteral",
																		"src": "21198:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21183:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21183:3:16"
																},
																"nativeSrc": "21183:18:16",
																"nodeType": "YulFunctionCall",
																"src": "21183:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21175:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21175:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21255:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21255:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21268:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21268:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21279:1:16",
																				"nodeType": "YulLiteral",
																				"src": "21279:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21264:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21264:3:16"
																		},
																		"nativeSrc": "21264:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21264:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21211:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21211:43:16"
																},
																"nativeSrc": "21211:71:16",
																"nodeType": "YulFunctionCall",
																"src": "21211:71:16"
															},
															"nativeSrc": "21211:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "21211:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21336:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21336:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21349:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21349:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21360:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21360:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21345:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21345:3:16"
																		},
																		"nativeSrc": "21345:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21345:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21292:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21292:43:16"
																},
																"nativeSrc": "21292:72:16",
																"nodeType": "YulFunctionCall",
																"src": "21292:72:16"
															},
															"nativeSrc": "21292:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "21292:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21039:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21129:9:16",
														"nodeType": "YulTypedName",
														"src": "21129:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21141:6:16",
														"nodeType": "YulTypedName",
														"src": "21141:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21149:6:16",
														"nodeType": "YulTypedName",
														"src": "21149:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21160:4:16",
														"nodeType": "YulTypedName",
														"src": "21160:4:16",
														"type": ""
													}
												],
												"src": "21039:332:16"
											},
											{
												"body": {
													"nativeSrc": "21405:152:16",
													"nodeType": "YulBlock",
													"src": "21405:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21422:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21422:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21425:77:16",
																		"nodeType": "YulLiteral",
																		"src": "21425:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21415:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21415:6:16"
																},
																"nativeSrc": "21415:88:16",
																"nodeType": "YulFunctionCall",
																"src": "21415:88:16"
															},
															"nativeSrc": "21415:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "21415:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21519:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21519:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21522:4:16",
																		"nodeType": "YulLiteral",
																		"src": "21522:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21512:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21512:6:16"
																},
																"nativeSrc": "21512:15:16",
																"nodeType": "YulFunctionCall",
																"src": "21512:15:16"
															},
															"nativeSrc": "21512:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "21512:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21543:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21543:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21546:4:16",
																		"nodeType": "YulLiteral",
																		"src": "21546:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21536:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21536:6:16"
																},
																"nativeSrc": "21536:15:16",
																"nodeType": "YulFunctionCall",
																"src": "21536:15:16"
															},
															"nativeSrc": "21536:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "21536:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21377:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "21377:180:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806370a0823111610095578063b88d4fde11610064578063b88d4fde1461027f578063c87b56dd1461029b578063cd279c7c146102cb578063e985e9c5146102e7576100f3565b806370a08231146101f9578063870b1e891461022957806395d89b4114610245578063a22cb46514610263576100f3565b8063095ea7b3116100d1578063095ea7b31461017557806323b872dd1461019157806342842e0e146101ad5780636352211e146101c9576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c9190611886565b610317565b60405161011e91906118cb565b60405180910390f35b61012f610377565b60405161013c9190611954565b60405180910390f35b61015f600480360381019061015a91906119a7565b610406565b60405161016c9190611a11565b60405180910390f35b61018f600480360381019061018a9190611a54565b610421565b005b6101ab60048036038101906101a69190611a92565b610437565b005b6101c760048036038101906101c29190611a92565b610536565b005b6101e360048036038101906101de91906119a7565b610555565b6040516101f09190611a11565b60405180910390f35b610213600480360381019061020e9190611ae2565b610566565b6040516102209190611b1c565b60405180910390f35b610243600480360381019061023e9190611b35565b61061c565b005b61024d6106cc565b60405161025a9190611954565b60405180910390f35b61027d60048036038101906102789190611b9d565b61075c565b005b61029960048036038101906102949190611d07565b610772565b005b6102b560048036038101906102b091906119a7565b61078f565b6040516102c29190611954565b60405180910390f35b6102e560048036038101906102e09190611e25565b61089a565b005b61030160048036038101906102fc9190611e91565b6108b3565b60405161030e91906118cb565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610370575061036f82610941565b5b9050919050565b60605f805461038590611efc565b80601f01602080910402602001604051908101604052809291908181526020018280546103b190611efc565b80156103fc5780601f106103d3576101008083540402835291602001916103fc565b820191905f5260205f20905b8154815290600101906020018083116103df57829003601f168201915b5050505050905090565b5f61041082610a22565b5061041a82610aa8565b9050919050565b610433828261042e610ae1565b610ae8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a7575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161049e9190611a11565b60405180910390fd5b5f6104ba83836104b5610ae1565b610afa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610530578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052793929190611f2c565b60405180910390fd5b50505050565b61055083838360405180602001604052805f815250610772565b505050565b5f61055f82610a22565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d7575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105ce9190611a11565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106c8826007838154811061063457610633611f61565b5b905f5260205f2001805461064790611efc565b80601f016020809104026020016040519081016040528092919081815260200182805461067390611efc565b80156106be5780601f10610695576101008083540402835291602001916106be565b820191905f5260205f20905b8154815290600101906020018083116106a157829003601f168201915b5050505050610d05565b5050565b6060600180546106db90611efc565b80601f016020809104026020016040519081016040528092919081815260200182805461070790611efc565b80156107525780601f1061072957610100808354040283529160200191610752565b820191905f5260205f20905b81548152906001019060200180831161073557829003601f168201915b5050505050905090565b61076e610767610ae1565b8383610d5f565b5050565b61077d848484610437565b61078984848484610ec8565b50505050565b606061079a82610a22565b505f60065f8481526020019081526020015f2080546107b890611efc565b80601f01602080910402602001604051908101604052809291908181526020018280546107e490611efc565b801561082f5780601f106108065761010080835404028352916020019161082f565b820191905f5260205f20905b81548152906001019060200180831161081257829003601f168201915b505050505090505f61083f61107a565b90505f815103610853578192505050610895565b5f8251111561088757808260405160200161086f929190611fc8565b60405160208183030381529060405292505050610895565b61089084611090565b925050505b919050565b6108a483836110f6565b6108ae8282610d05565b505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a0b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a1b5750610a1a82611113565b5b9050919050565b5f80610a2d8361117c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a9f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a969190611b1c565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610af583838360016111b5565b505050565b5f80610b058461117c565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b4657610b45818486611374565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bd157610b855f855f806111b5565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c5057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b8060065f8481526020019081526020015f209081610d239190612188565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610d539190611b1c565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dcf57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610dc69190611a11565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ebb91906118cb565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611074578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f0b610ae1565b8685856040518563ffffffff1660e01b8152600401610f2d94939291906122a9565b6020604051808303815f875af1925050508015610f6857506040513d601f19601f82011682018060405250810190610f659190612307565b60015b610fe9573d805f8114610f96576040519150601f19603f3d011682016040523d82523d5f602084013e610f9b565b606091505b505f815103610fe157836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fd89190611a11565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461107257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110699190611a11565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061109b82610a22565b505f6110a561107a565b90505f8151116110c35760405180602001604052805f8152506110ee565b806110cd84611437565b6040516020016110de929190611fc8565b6040516020818303038152906040525b915050919050565b61110f828260405180602001604052805f815250611501565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111ed57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561131f575f6111fc84610a22565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561126657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611279575061127781846108b3565b155b156112bb57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112b29190611a11565b60405180910390fd5b811561131d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61137f83838361151c565b611432575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113f357806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113ea9190611b1c565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611429929190612332565b60405180910390fd5b505050565b60605f6001611445846115dc565b0190505f8167ffffffffffffffff81111561146357611462611be3565b5b6040519080825280601f01601f1916602001820160405280156114955781602001600182028036833780820191505090505b5090505f82602001820190505b6001156114f6578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114eb576114ea612359565b5b0494505f85036114a2575b819350505050919050565b61150b838361172d565b6115175f848484610ec8565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115d357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611594575061159384846108b3565b5b806115d257508273ffffffffffffffffffffffffffffffffffffffff166115ba83610aa8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611638577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161162e5761162d612359565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611675576d04ee2d6d415b85acef8100000000838161166b5761166a612359565b5b0492506020810190505b662386f26fc1000083106116a457662386f26fc10000838161169a57611699612359565b5b0492506010810190505b6305f5e10083106116cd576305f5e10083816116c3576116c2612359565b5b0492506008810190505b61271083106116f25761271083816116e8576116e7612359565b5b0492506004810190505b60648310611715576064838161170b5761170a612359565b5b0492506002810190505b600a8310611724576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361179d575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117949190611a11565b60405180910390fd5b5f6117a983835f610afa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461181b575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118129190611a11565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61186581611831565b811461186f575f80fd5b50565b5f813590506118808161185c565b92915050565b5f6020828403121561189b5761189a611829565b5b5f6118a884828501611872565b91505092915050565b5f8115159050919050565b6118c5816118b1565b82525050565b5f6020820190506118de5f8301846118bc565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611926826118e4565b61193081856118ee565b93506119408185602086016118fe565b6119498161190c565b840191505092915050565b5f6020820190508181035f83015261196c818461191c565b905092915050565b5f819050919050565b61198681611974565b8114611990575f80fd5b50565b5f813590506119a18161197d565b92915050565b5f602082840312156119bc576119bb611829565b5b5f6119c984828501611993565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119fb826119d2565b9050919050565b611a0b816119f1565b82525050565b5f602082019050611a245f830184611a02565b92915050565b611a33816119f1565b8114611a3d575f80fd5b50565b5f81359050611a4e81611a2a565b92915050565b5f8060408385031215611a6a57611a69611829565b5b5f611a7785828601611a40565b9250506020611a8885828601611993565b9150509250929050565b5f805f60608486031215611aa957611aa8611829565b5b5f611ab686828701611a40565b9350506020611ac786828701611a40565b9250506040611ad886828701611993565b9150509250925092565b5f60208284031215611af757611af6611829565b5b5f611b0484828501611a40565b91505092915050565b611b1681611974565b82525050565b5f602082019050611b2f5f830184611b0d565b92915050565b5f8060408385031215611b4b57611b4a611829565b5b5f611b5885828601611993565b9250506020611b6985828601611993565b9150509250929050565b611b7c816118b1565b8114611b86575f80fd5b50565b5f81359050611b9781611b73565b92915050565b5f8060408385031215611bb357611bb2611829565b5b5f611bc085828601611a40565b9250506020611bd185828601611b89565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611c198261190c565b810181811067ffffffffffffffff82111715611c3857611c37611be3565b5b80604052505050565b5f611c4a611820565b9050611c568282611c10565b919050565b5f67ffffffffffffffff821115611c7557611c74611be3565b5b611c7e8261190c565b9050602081019050919050565b828183375f83830152505050565b5f611cab611ca684611c5b565b611c41565b905082815260208101848484011115611cc757611cc6611bdf565b5b611cd2848285611c8b565b509392505050565b5f82601f830112611cee57611ced611bdb565b5b8135611cfe848260208601611c99565b91505092915050565b5f805f8060808587031215611d1f57611d1e611829565b5b5f611d2c87828801611a40565b9450506020611d3d87828801611a40565b9350506040611d4e87828801611993565b925050606085013567ffffffffffffffff811115611d6f57611d6e61182d565b5b611d7b87828801611cda565b91505092959194509250565b5f67ffffffffffffffff821115611da157611da0611be3565b5b611daa8261190c565b9050602081019050919050565b5f611dc9611dc484611d87565b611c41565b905082815260208101848484011115611de557611de4611bdf565b5b611df0848285611c8b565b509392505050565b5f82601f830112611e0c57611e0b611bdb565b5b8135611e1c848260208601611db7565b91505092915050565b5f805f60608486031215611e3c57611e3b611829565b5b5f611e4986828701611a40565b9350506020611e5a86828701611993565b925050604084013567ffffffffffffffff811115611e7b57611e7a61182d565b5b611e8786828701611df8565b9150509250925092565b5f8060408385031215611ea757611ea6611829565b5b5f611eb485828601611a40565b9250506020611ec585828601611a40565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f1357607f821691505b602082108103611f2657611f25611ecf565b5b50919050565b5f606082019050611f3f5f830186611a02565b611f4c6020830185611b0d565b611f596040830184611a02565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b5f611fa2826118e4565b611fac8185611f8e565b9350611fbc8185602086016118fe565b80840191505092915050565b5f611fd38285611f98565b9150611fdf8284611f98565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261200c565b612051868361200c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61208c61208761208284611974565b612069565b611974565b9050919050565b5f819050919050565b6120a583612072565b6120b96120b182612093565b848454612018565b825550505050565b5f90565b6120cd6120c1565b6120d881848461209c565b505050565b5b818110156120fb576120f05f826120c5565b6001810190506120de565b5050565b601f8211156121405761211181611feb565b61211a84611ffd565b81016020851015612129578190505b61213d61213585611ffd565b8301826120dd565b50505b505050565b5f82821c905092915050565b5f6121605f1984600802612145565b1980831691505092915050565b5f6121788383612151565b9150826002028217905092915050565b612191826118e4565b67ffffffffffffffff8111156121aa576121a9611be3565b5b6121b48254611efc565b6121bf8282856120ff565b5f60209050601f8311600181146121f0575f84156121de578287015190505b6121e8858261216d565b86555061224f565b601f1984166121fe86611feb565b5f5b8281101561222557848901518255600182019150602085019450602081019050612200565b86831015612242578489015161223e601f891682612151565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f61227b82612257565b6122858185612261565b93506122958185602086016118fe565b61229e8161190c565b840191505092915050565b5f6080820190506122bc5f830187611a02565b6122c96020830186611a02565b6122d66040830185611b0d565b81810360608301526122e88184612271565b905095945050505050565b5f815190506123018161185c565b92915050565b5f6020828403121561231c5761231b611829565b5b5f612329848285016122f3565b91505092915050565b5f6040820190506123455f830185611a02565b6123526020830184611b0d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212206b537b4434db908cdc6a38d1efbcf3bbd288ef38ea0c5a6399c7f590c2cac57e64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xCD279C7C EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E7 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x870B1E89 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x263 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x370 JUMPI POP PUSH2 0x36F DUP3 PUSH2 0x941 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x410 DUP3 PUSH2 0xA22 JUMP JUMPDEST POP PUSH2 0x41A DUP3 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x433 DUP3 DUP3 PUSH2 0x42E PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xAE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BA DUP4 DUP4 PUSH2 0x4B5 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x550 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x772 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x55F DUP3 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C8 DUP3 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x1F61 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x647 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x695 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xD05 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6DB SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x752 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x729 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x752 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x735 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x767 PUSH2 0xAE1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD5F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x77D DUP5 DUP5 DUP5 PUSH2 0x437 JUMP JUMPDEST PUSH2 0x789 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x79A DUP3 PUSH2 0xA22 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x7B8 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E4 SWAP1 PUSH2 0x1EFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x82F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x812 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x83F PUSH2 0x107A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x853 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x887 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x86F SWAP3 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH2 0x890 DUP5 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A4 DUP4 DUP4 PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x8AE DUP3 DUP3 PUSH2 0xD05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA0B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xA1B JUMPI POP PUSH2 0xA1A DUP3 PUSH2 0x1113 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA2D DUP4 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB05 DUP5 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB46 JUMPI PUSH2 0xB45 DUP2 DUP5 DUP7 PUSH2 0x1374 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH2 0xB85 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1074 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF0B PUSH2 0xAE1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF68 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFE9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFE1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1072 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x109B DUP3 PUSH2 0xA22 JUMP JUMPDEST POP PUSH0 PUSH2 0x10A5 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x10C3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x10EE JUMP JUMPDEST DUP1 PUSH2 0x10CD DUP5 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10DE SWAP3 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1501 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11ED JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x131F JUMPI PUSH0 PUSH2 0x11FC DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1266 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1279 JUMPI POP PUSH2 0x1277 DUP2 DUP5 PUSH2 0x8B3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12BB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B2 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x131D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x137F DUP4 DUP4 DUP4 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1432 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EA SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1429 SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1445 DUP5 PUSH2 0x15DC JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1495 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14F6 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x14A2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x150B DUP4 DUP4 PUSH2 0x172D JUMP JUMPDEST PUSH2 0x1517 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xEC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15D3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1594 JUMPI POP PUSH2 0x1593 DUP5 DUP5 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x15D2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15BA DUP4 PUSH2 0xAA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1638 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x162E JUMPI PUSH2 0x162D PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1675 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x16A4 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x169A JUMPI PUSH2 0x1699 PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16CD JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16F2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16E8 JUMPI PUSH2 0x16E7 PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1715 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x2359 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1724 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x179D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x17A9 DUP4 DUP4 PUSH0 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x181B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x1831 JUMP JUMPDEST DUP2 EQ PUSH2 0x186F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1880 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1872 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C5 DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18DE PUSH0 DUP4 ADD DUP5 PUSH2 0x18BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1926 DUP3 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x1930 DUP2 DUP6 PUSH2 0x18EE JUMP JUMPDEST SWAP4 POP PUSH2 0x1940 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x1949 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x196C DUP2 DUP5 PUSH2 0x191C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x1974 JUMP JUMPDEST DUP2 EQ PUSH2 0x1990 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A1 DUP2 PUSH2 0x197D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BC JUMPI PUSH2 0x19BB PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FB DUP3 PUSH2 0x19D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0B DUP2 PUSH2 0x19F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A24 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A33 DUP2 PUSH2 0x19F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A3D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4E DUP2 PUSH2 0x1A2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A77 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A88 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AB6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AC7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AD8 DUP7 DUP3 DUP8 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF7 JUMPI PUSH2 0x1AF6 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B04 DUP5 DUP3 DUP6 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B16 DUP2 PUSH2 0x1974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2F PUSH0 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B58 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B69 DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B7C DUP2 PUSH2 0x18B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B97 DUP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB3 JUMPI PUSH2 0x1BB2 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1C19 DUP3 PUSH2 0x190C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C38 JUMPI PUSH2 0x1C37 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C4A PUSH2 0x1820 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C56 DUP3 DUP3 PUSH2 0x1C10 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C7E DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAB PUSH2 0x1CA6 DUP5 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CC7 JUMPI PUSH2 0x1CC6 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH2 0x1CD2 DUP5 DUP3 DUP6 PUSH2 0x1C8B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x1BDB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D1F JUMPI PUSH2 0x1D1E PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2C DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D3D DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D4E DUP8 DUP3 DUP9 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x182D JUMP JUMPDEST JUMPDEST PUSH2 0x1D7B DUP8 DUP3 DUP9 ADD PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DA1 JUMPI PUSH2 0x1DA0 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH2 0x1DAA DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC9 PUSH2 0x1DC4 DUP5 PUSH2 0x1D87 JUMP JUMPDEST PUSH2 0x1C41 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DE5 JUMPI PUSH2 0x1DE4 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH2 0x1DF0 DUP5 DUP3 DUP6 PUSH2 0x1C8B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E0C JUMPI PUSH2 0x1E0B PUSH2 0x1BDB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E1C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3B PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E49 DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E5A DUP7 DUP3 DUP8 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7A PUSH2 0x182D JUMP JUMPDEST JUMPDEST PUSH2 0x1E87 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1ECF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F3F PUSH0 DUP4 ADD DUP7 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1F4C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x1F59 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A02 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA2 DUP3 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x1FAC DUP2 DUP6 PUSH2 0x1F8E JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD3 DUP3 DUP6 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDF DUP3 DUP5 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2047 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x200C JUMP JUMPDEST PUSH2 0x2051 DUP7 DUP4 PUSH2 0x200C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208C PUSH2 0x2087 PUSH2 0x2082 DUP5 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x2069 JUMP JUMPDEST PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A5 DUP4 PUSH2 0x2072 JUMP JUMPDEST PUSH2 0x20B9 PUSH2 0x20B1 DUP3 PUSH2 0x2093 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2018 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x20CD PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x20D8 DUP2 DUP5 DUP5 PUSH2 0x209C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20FB JUMPI PUSH2 0x20F0 PUSH0 DUP3 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2140 JUMPI PUSH2 0x2111 DUP2 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x211A DUP5 PUSH2 0x1FFD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2129 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x213D PUSH2 0x2135 DUP6 PUSH2 0x1FFD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x20DD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2160 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2145 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2178 DUP4 DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2191 DUP3 PUSH2 0x18E4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x1BE3 JUMP JUMPDEST JUMPDEST PUSH2 0x21B4 DUP3 SLOAD PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x21BF DUP3 DUP3 DUP6 PUSH2 0x20FF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21F0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21DE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x21E8 DUP6 DUP3 PUSH2 0x216D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x224F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21FE DUP7 PUSH2 0x1FEB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2225 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2200 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2242 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x223E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2151 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x227B DUP3 PUSH2 0x2257 JUMP JUMPDEST PUSH2 0x2285 DUP2 DUP6 PUSH2 0x2261 JUMP JUMPDEST SWAP4 POP PUSH2 0x2295 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x229E DUP2 PUSH2 0x190C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22BC PUSH0 DUP4 ADD DUP8 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x22C9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x22D6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22E8 DUP2 DUP5 PUSH2 0x2271 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2301 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231C JUMPI PUSH2 0x231B PUSH2 0x1829 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2329 DUP5 DUP3 DUP6 ADD PUSH2 0x22F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x2352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x537B4434DB908CDC6A38D1EF 0xBC RETURN 0xBB 0xD2 DUP9 0xEF CODESIZE 0xEA 0xC GAS PUSH4 0x99C7F590 0xC2 0xCA 0xC5 PUSH31 0x64736F6C634300081900330000000000000000000000000000000000000000 ",
							"sourceMap": "138:559:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;608:87:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2518:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:148:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:7;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:4:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;608:87:15:-;660:28;673:2;677:7;685:1;677:10;;;;;;;;:::i;:::-;;;;;;;;;660:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:28::i;:::-;608:87;;:::o;2518:93:4:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:7:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;448:148:15:-;531:22;541:2;545:7;531:9;:22::i;:::-;563:26;576:7;585:3;563:12;:26::i;:::-;448:148;;;:::o;3928:153:4:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;14418:120:4:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1922:167:7:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;15591:312:4:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;10633:100::-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;5707:115:4:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;447:696:10:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;10954:182:4:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;10139:916:13:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;9955:327:4:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:474::-;6163:6;6171;6220:2;6208:9;6199:7;6195:23;6191:32;6188:119;;;6226:79;;:::i;:::-;6188:119;6346:1;6371:53;6416:7;6407:6;6396:9;6392:22;6371:53;:::i;:::-;6361:63;;6317:117;6473:2;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6444:118;6095:474;;;;;:::o;6575:116::-;6645:21;6660:5;6645:21;:::i;:::-;6638:5;6635:32;6625:60;;6681:1;6678;6671:12;6625:60;6575:116;:::o;6697:133::-;6740:5;6778:6;6765:20;6756:29;;6794:30;6818:5;6794:30;:::i;:::-;6697:133;;;;:::o;6836:468::-;6901:6;6909;6958:2;6946:9;6937:7;6933:23;6929:32;6926:119;;;6964:79;;:::i;:::-;6926:119;7084:1;7109:53;7154:7;7145:6;7134:9;7130:22;7109:53;:::i;:::-;7099:63;;7055:117;7211:2;7237:50;7279:7;7270:6;7259:9;7255:22;7237:50;:::i;:::-;7227:60;;7182:115;6836:468;;;;;:::o;7310:117::-;7419:1;7416;7409:12;7433:117;7542:1;7539;7532:12;7556:180;7604:77;7601:1;7594:88;7701:4;7698:1;7691:15;7725:4;7722:1;7715:15;7742:281;7825:27;7847:4;7825:27;:::i;:::-;7817:6;7813:40;7955:6;7943:10;7940:22;7919:18;7907:10;7904:34;7901:62;7898:88;;;7966:18;;:::i;:::-;7898:88;8006:10;8002:2;7995:22;7785:238;7742:281;;:::o;8029:129::-;8063:6;8090:20;;:::i;:::-;8080:30;;8119:33;8147:4;8139:6;8119:33;:::i;:::-;8029:129;;;:::o;8164:307::-;8225:4;8315:18;8307:6;8304:30;8301:56;;;8337:18;;:::i;:::-;8301:56;8375:29;8397:6;8375:29;:::i;:::-;8367:37;;8459:4;8453;8449:15;8441:23;;8164:307;;;:::o;8477:148::-;8575:6;8570:3;8565;8552:30;8616:1;8607:6;8602:3;8598:16;8591:27;8477:148;;;:::o;8631:423::-;8708:5;8733:65;8749:48;8790:6;8749:48;:::i;:::-;8733:65;:::i;:::-;8724:74;;8821:6;8814:5;8807:21;8859:4;8852:5;8848:16;8897:3;8888:6;8883:3;8879:16;8876:25;8873:112;;;8904:79;;:::i;:::-;8873:112;8994:54;9041:6;9036:3;9031;8994:54;:::i;:::-;8714:340;8631:423;;;;;:::o;9073:338::-;9128:5;9177:3;9170:4;9162:6;9158:17;9154:27;9144:122;;9185:79;;:::i;:::-;9144:122;9302:6;9289:20;9327:78;9401:3;9393:6;9386:4;9378:6;9374:17;9327:78;:::i;:::-;9318:87;;9134:277;9073:338;;;;:::o;9417:943::-;9512:6;9520;9528;9536;9585:3;9573:9;9564:7;9560:23;9556:33;9553:120;;;9592:79;;:::i;:::-;9553:120;9712:1;9737:53;9782:7;9773:6;9762:9;9758:22;9737:53;:::i;:::-;9727:63;;9683:117;9839:2;9865:53;9910:7;9901:6;9890:9;9886:22;9865:53;:::i;:::-;9855:63;;9810:118;9967:2;9993:53;10038:7;10029:6;10018:9;10014:22;9993:53;:::i;:::-;9983:63;;9938:118;10123:2;10112:9;10108:18;10095:32;10154:18;10146:6;10143:30;10140:117;;;10176:79;;:::i;:::-;10140:117;10281:62;10335:7;10326:6;10315:9;10311:22;10281:62;:::i;:::-;10271:72;;10066:287;9417:943;;;;;;;:::o;10366:308::-;10428:4;10518:18;10510:6;10507:30;10504:56;;;10540:18;;:::i;:::-;10504:56;10578:29;10600:6;10578:29;:::i;:::-;10570:37;;10662:4;10656;10652:15;10644:23;;10366:308;;;:::o;10680:425::-;10758:5;10783:66;10799:49;10841:6;10799:49;:::i;:::-;10783:66;:::i;:::-;10774:75;;10872:6;10865:5;10858:21;10910:4;10903:5;10899:16;10948:3;10939:6;10934:3;10930:16;10927:25;10924:112;;;10955:79;;:::i;:::-;10924:112;11045:54;11092:6;11087:3;11082;11045:54;:::i;:::-;10764:341;10680:425;;;;;:::o;11125:340::-;11181:5;11230:3;11223:4;11215:6;11211:17;11207:27;11197:122;;11238:79;;:::i;:::-;11197:122;11355:6;11342:20;11380:79;11455:3;11447:6;11440:4;11432:6;11428:17;11380:79;:::i;:::-;11371:88;;11187:278;11125:340;;;;:::o;11471:799::-;11558:6;11566;11574;11623:2;11611:9;11602:7;11598:23;11594:32;11591:119;;;11629:79;;:::i;:::-;11591:119;11749:1;11774:53;11819:7;11810:6;11799:9;11795:22;11774:53;:::i;:::-;11764:63;;11720:117;11876:2;11902:53;11947:7;11938:6;11927:9;11923:22;11902:53;:::i;:::-;11892:63;;11847:118;12032:2;12021:9;12017:18;12004:32;12063:18;12055:6;12052:30;12049:117;;;12085:79;;:::i;:::-;12049:117;12190:63;12245:7;12236:6;12225:9;12221:22;12190:63;:::i;:::-;12180:73;;11975:288;11471:799;;;;;:::o;12276:474::-;12344:6;12352;12401:2;12389:9;12380:7;12376:23;12372:32;12369:119;;;12407:79;;:::i;:::-;12369:119;12527:1;12552:53;12597:7;12588:6;12577:9;12573:22;12552:53;:::i;:::-;12542:63;;12498:117;12654:2;12680:53;12725:7;12716:6;12705:9;12701:22;12680:53;:::i;:::-;12670:63;;12625:118;12276:474;;;;;:::o;12756:180::-;12804:77;12801:1;12794:88;12901:4;12898:1;12891:15;12925:4;12922:1;12915:15;12942:320;12986:6;13023:1;13017:4;13013:12;13003:22;;13070:1;13064:4;13060:12;13091:18;13081:81;;13147:4;13139:6;13135:17;13125:27;;13081:81;13209:2;13201:6;13198:14;13178:18;13175:38;13172:84;;13228:18;;:::i;:::-;13172:84;12993:269;12942:320;;;:::o;13268:442::-;13417:4;13455:2;13444:9;13440:18;13432:26;;13468:71;13536:1;13525:9;13521:17;13512:6;13468:71;:::i;:::-;13549:72;13617:2;13606:9;13602:18;13593:6;13549:72;:::i;:::-;13631;13699:2;13688:9;13684:18;13675:6;13631:72;:::i;:::-;13268:442;;;;;;:::o;13716:180::-;13764:77;13761:1;13754:88;13861:4;13858:1;13851:15;13885:4;13882:1;13875:15;13902:148;14004:11;14041:3;14026:18;;13902:148;;;;:::o;14056:390::-;14162:3;14190:39;14223:5;14190:39;:::i;:::-;14245:89;14327:6;14322:3;14245:89;:::i;:::-;14238:96;;14343:65;14401:6;14396:3;14389:4;14382:5;14378:16;14343:65;:::i;:::-;14433:6;14428:3;14424:16;14417:23;;14166:280;14056:390;;;;:::o;14452:435::-;14632:3;14654:95;14745:3;14736:6;14654:95;:::i;:::-;14647:102;;14766:95;14857:3;14848:6;14766:95;:::i;:::-;14759:102;;14878:3;14871:10;;14452:435;;;;;:::o;14893:141::-;14942:4;14965:3;14957:11;;14988:3;14985:1;14978:14;15022:4;15019:1;15009:18;15001:26;;14893:141;;;:::o;15040:93::-;15077:6;15124:2;15119;15112:5;15108:14;15104:23;15094:33;;15040:93;;;:::o;15139:107::-;15183:8;15233:5;15227:4;15223:16;15202:37;;15139:107;;;;:::o;15252:393::-;15321:6;15371:1;15359:10;15355:18;15394:97;15424:66;15413:9;15394:97;:::i;:::-;15512:39;15542:8;15531:9;15512:39;:::i;:::-;15500:51;;15584:4;15580:9;15573:5;15569:21;15560:30;;15633:4;15623:8;15619:19;15612:5;15609:30;15599:40;;15328:317;;15252:393;;;;;:::o;15651:60::-;15679:3;15700:5;15693:12;;15651:60;;;:::o;15717:142::-;15767:9;15800:53;15818:34;15827:24;15845:5;15827:24;:::i;:::-;15818:34;:::i;:::-;15800:53;:::i;:::-;15787:66;;15717:142;;;:::o;15865:75::-;15908:3;15929:5;15922:12;;15865:75;;;:::o;15946:269::-;16056:39;16087:7;16056:39;:::i;:::-;16117:91;16166:41;16190:16;16166:41;:::i;:::-;16158:6;16151:4;16145:11;16117:91;:::i;:::-;16111:4;16104:105;16022:193;15946:269;;;:::o;16221:73::-;16266:3;16221:73;:::o;16300:189::-;16377:32;;:::i;:::-;16418:65;16476:6;16468;16462:4;16418:65;:::i;:::-;16353:136;16300:189;;:::o;16495:186::-;16555:120;16572:3;16565:5;16562:14;16555:120;;;16626:39;16663:1;16656:5;16626:39;:::i;:::-;16599:1;16592:5;16588:13;16579:22;;16555:120;;;16495:186;;:::o;16687:543::-;16788:2;16783:3;16780:11;16777:446;;;16822:38;16854:5;16822:38;:::i;:::-;16906:29;16924:10;16906:29;:::i;:::-;16896:8;16892:44;17089:2;17077:10;17074:18;17071:49;;;17110:8;17095:23;;17071:49;17133:80;17189:22;17207:3;17189:22;:::i;:::-;17179:8;17175:37;17162:11;17133:80;:::i;:::-;16792:431;;16777:446;16687:543;;;:::o;17236:117::-;17290:8;17340:5;17334:4;17330:16;17309:37;;17236:117;;;;:::o;17359:169::-;17403:6;17436:51;17484:1;17480:6;17472:5;17469:1;17465:13;17436:51;:::i;:::-;17432:56;17517:4;17511;17507:15;17497:25;;17410:118;17359:169;;;;:::o;17533:295::-;17609:4;17755:29;17780:3;17774:4;17755:29;:::i;:::-;17747:37;;17817:3;17814:1;17810:11;17804:4;17801:21;17793:29;;17533:295;;;;:::o;17833:1395::-;17950:37;17983:3;17950:37;:::i;:::-;18052:18;18044:6;18041:30;18038:56;;;18074:18;;:::i;:::-;18038:56;18118:38;18150:4;18144:11;18118:38;:::i;:::-;18203:67;18263:6;18255;18249:4;18203:67;:::i;:::-;18297:1;18321:4;18308:17;;18353:2;18345:6;18342:14;18370:1;18365:618;;;;19027:1;19044:6;19041:77;;;19093:9;19088:3;19084:19;19078:26;19069:35;;19041:77;19144:67;19204:6;19197:5;19144:67;:::i;:::-;19138:4;19131:81;19000:222;18335:887;;18365:618;18417:4;18413:9;18405:6;18401:22;18451:37;18483:4;18451:37;:::i;:::-;18510:1;18524:208;18538:7;18535:1;18532:14;18524:208;;;18617:9;18612:3;18608:19;18602:26;18594:6;18587:42;18668:1;18660:6;18656:14;18646:24;;18715:2;18704:9;18700:18;18687:31;;18561:4;18558:1;18554:12;18549:17;;18524:208;;;18760:6;18751:7;18748:19;18745:179;;;18818:9;18813:3;18809:19;18803:26;18861:48;18903:4;18895:6;18891:17;18880:9;18861:48;:::i;:::-;18853:6;18846:64;18768:156;18745:179;18970:1;18966;18958:6;18954:14;18950:22;18944:4;18937:36;18372:611;;;18335:887;;17925:1303;;;17833:1395;;:::o;19234:98::-;19285:6;19319:5;19313:12;19303:22;;19234:98;;;:::o;19338:168::-;19421:11;19455:6;19450:3;19443:19;19495:4;19490:3;19486:14;19471:29;;19338:168;;;;:::o;19512:373::-;19598:3;19626:38;19658:5;19626:38;:::i;:::-;19680:70;19743:6;19738:3;19680:70;:::i;:::-;19673:77;;19759:65;19817:6;19812:3;19805:4;19798:5;19794:16;19759:65;:::i;:::-;19849:29;19871:6;19849:29;:::i;:::-;19844:3;19840:39;19833:46;;19602:283;19512:373;;;;:::o;19891:640::-;20086:4;20124:3;20113:9;20109:19;20101:27;;20138:71;20206:1;20195:9;20191:17;20182:6;20138:71;:::i;:::-;20219:72;20287:2;20276:9;20272:18;20263:6;20219:72;:::i;:::-;20301;20369:2;20358:9;20354:18;20345:6;20301:72;:::i;:::-;20420:9;20414:4;20410:20;20405:2;20394:9;20390:18;20383:48;20448:76;20519:4;20510:6;20448:76;:::i;:::-;20440:84;;19891:640;;;;;;;:::o;20537:141::-;20593:5;20624:6;20618:13;20609:22;;20640:32;20666:5;20640:32;:::i;:::-;20537:141;;;;:::o;20684:349::-;20753:6;20802:2;20790:9;20781:7;20777:23;20773:32;20770:119;;;20808:79;;:::i;:::-;20770:119;20928:1;20953:63;21008:7;20999:6;20988:9;20984:22;20953:63;:::i;:::-;20943:73;;20899:127;20684:349;;;;:::o;21039:332::-;21160:4;21198:2;21187:9;21183:18;21175:26;;21211:71;21279:1;21268:9;21264:17;21255:6;21211:71;:::i;:::-;21292:72;21360:2;21349:9;21345:18;21336:6;21292:72;:::i;:::-;21039:332;;;;;:::o;21377:180::-;21425:77;21422:1;21415:88;21522:4;21519:1;21512:15;21546:4;21543:1;21536:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1829600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"changeUri(uint256,uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeMint(address,uint256,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "2A"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH data",
									"source": 15,
									"value": "ABBB6250C0C0EF97A0D5865F4D95250E6A163C7DD92F6C2F933AA2D824A5E939"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "2A"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "2A"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH data",
									"source": 15,
									"value": "B87B14083892E557AC644ED6F47814FE3071FE6952C548D24DE97E8CF93CB194"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "2A"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "2A"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH data",
									"source": 15,
									"value": "ABBB6250C0C0EF97A0D5865F4D95250E6A163C7DD92F6C2F933AA2D824A5E939"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "2A"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "7"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 192,
									"end": 377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 377,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 192,
									"end": 377,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 384,
									"end": 442,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 442,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 384,
									"end": 442,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 384,
									"end": 442,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "47656D204E465400000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "47454D4E46540000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "98"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 16,
									"value": "98"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "99"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 16,
									"value": "99"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "104"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 16,
									"value": "104"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "105"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 16,
									"value": "105"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "109"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "110"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 16,
									"value": "110"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 16,
									"value": "109"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 138,
									"end": 697,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 138,
									"end": 697,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 697,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b537b4434db908cdc6a38d1efbcf3bbd288ef38ea0c5a6399c7f590c2cac57e64736f6c63430008190033",
									".code": [
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "CD279C7C"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "870B1E89"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 697,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 138,
											"end": 697,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 608,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 608,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 608,
											"end": 695,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 608,
											"end": 695,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 608,
											"end": 695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 608,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 608,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 608,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 608,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 448,
											"end": 596,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 448,
											"end": 596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 448,
											"end": 596,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 596,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 448,
											"end": 596,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 448,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 448,
											"end": 596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 448,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 448,
											"end": 596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 7,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 608,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 608,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 673,
											"end": 675,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 677,
											"end": 684,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 677,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 677,
											"end": 687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 660,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 660,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 660,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 688,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 660,
											"end": 688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 608,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 448,
											"end": 596,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 448,
											"end": 596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 531,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 541,
											"end": 543,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 545,
											"end": 552,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 531,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 531,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 531,
											"end": 553,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 531,
											"end": 553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 563,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 576,
											"end": 583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 585,
											"end": 588,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 563,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 563,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 563,
											"end": 589,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 563,
											"end": 589,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 448,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 659,
											"end": 670,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 10,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1035,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1078,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10225,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10284,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10304,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10420,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10651,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10764,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10877,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6095,
											"end": 6569,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 6095,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6163,
											"end": 6169,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6177,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6220,
											"end": 6222,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6208,
											"end": 6217,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6191,
											"end": 6223,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6188,
											"end": 6307,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6188,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6188,
											"end": 6307,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 6226,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6188,
											"end": 6307,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6188,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6371,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 6416,
											"end": 6423,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6396,
											"end": 6405,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6371,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 6371,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6371,
											"end": 6424,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 6371,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6361,
											"end": 6424,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6361,
											"end": 6424,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6317,
											"end": 6434,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6444,
											"end": 6562,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6095,
											"end": 6569,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6095,
											"end": 6569,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6095,
											"end": 6569,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6095,
											"end": 6569,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6095,
											"end": 6569,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6095,
											"end": 6569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6575,
											"end": 6691,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 6575,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 6660,
											"end": 6665,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 6645,
											"end": 6666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6638,
											"end": 6643,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6635,
											"end": 6667,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6625,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 6625,
											"end": 6685,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6679,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6625,
											"end": 6685,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 6625,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6575,
											"end": 6691,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6575,
											"end": 6691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6697,
											"end": 6830,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 6697,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6740,
											"end": 6745,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6784,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6765,
											"end": 6785,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6756,
											"end": 6785,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6756,
											"end": 6785,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6794,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 6818,
											"end": 6823,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6794,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 6794,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6794,
											"end": 6824,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 6794,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6697,
											"end": 6830,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6697,
											"end": 6830,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6697,
											"end": 6830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6697,
											"end": 6830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6697,
											"end": 6830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6836,
											"end": 7304,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 6836,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6958,
											"end": 6960,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6946,
											"end": 6955,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6933,
											"end": 6956,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6929,
											"end": 6961,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6926,
											"end": 7045,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6926,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 6926,
											"end": 7045,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6964,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 6964,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 6964,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6964,
											"end": 7043,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 6964,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6926,
											"end": 7045,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 6926,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 7154,
											"end": 7161,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7151,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7134,
											"end": 7143,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7130,
											"end": 7152,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7109,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 7109,
											"end": 7162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7109,
											"end": 7162,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 7109,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7099,
											"end": 7162,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7099,
											"end": 7162,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7172,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7211,
											"end": 7213,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7237,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 7279,
											"end": 7286,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7270,
											"end": 7276,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7259,
											"end": 7268,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7255,
											"end": 7277,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7237,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 7237,
											"end": 7287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7237,
											"end": 7287,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 7237,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7227,
											"end": 7287,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7227,
											"end": 7287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7182,
											"end": 7297,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6836,
											"end": 7304,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6836,
											"end": 7304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6836,
											"end": 7304,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6836,
											"end": 7304,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6836,
											"end": 7304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6836,
											"end": 7304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7310,
											"end": 7427,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 7310,
											"end": 7427,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7417,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7409,
											"end": 7421,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7433,
											"end": 7550,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 7433,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7532,
											"end": 7544,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7556,
											"end": 7736,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 7556,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7604,
											"end": 7681,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7682,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7705,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7691,
											"end": 7706,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7725,
											"end": 7729,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7730,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7742,
											"end": 8023,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 7742,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 7847,
											"end": 7851,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 7825,
											"end": 7852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7825,
											"end": 7852,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 7825,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7817,
											"end": 7823,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7813,
											"end": 7853,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7955,
											"end": 7961,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7943,
											"end": 7953,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7940,
											"end": 7962,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7917,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7904,
											"end": 7938,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7901,
											"end": 7963,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 7898,
											"end": 7986,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7898,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 7898,
											"end": 7986,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 7966,
											"end": 7984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7898,
											"end": 7986,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 7898,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8006,
											"end": 8016,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8017,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7785,
											"end": 8023,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7742,
											"end": 8023,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7742,
											"end": 8023,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7742,
											"end": 8023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8029,
											"end": 8158,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 8029,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8063,
											"end": 8069,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 8090,
											"end": 8110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 8090,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8080,
											"end": 8110,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8080,
											"end": 8110,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 8147,
											"end": 8151,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8139,
											"end": 8145,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 8119,
											"end": 8152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8119,
											"end": 8152,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 8119,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8029,
											"end": 8158,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8029,
											"end": 8158,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8029,
											"end": 8158,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8029,
											"end": 8158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8164,
											"end": 8471,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 8164,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8225,
											"end": 8229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8333,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8304,
											"end": 8334,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8301,
											"end": 8357,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8301,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 8301,
											"end": 8357,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 8337,
											"end": 8355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8301,
											"end": 8357,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 8301,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8375,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 8397,
											"end": 8403,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8375,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 8375,
											"end": 8404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8375,
											"end": 8404,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 8375,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8367,
											"end": 8404,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8367,
											"end": 8404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8453,
											"end": 8457,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8449,
											"end": 8464,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8441,
											"end": 8464,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8441,
											"end": 8464,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8164,
											"end": 8471,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8164,
											"end": 8471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8164,
											"end": 8471,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8164,
											"end": 8471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8477,
											"end": 8625,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8477,
											"end": 8625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8575,
											"end": 8581,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8570,
											"end": 8573,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8565,
											"end": 8568,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8552,
											"end": 8582,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 8616,
											"end": 8617,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8602,
											"end": 8605,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8598,
											"end": 8614,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8591,
											"end": 8618,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8477,
											"end": 8625,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8477,
											"end": 8625,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8477,
											"end": 8625,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8477,
											"end": 8625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8631,
											"end": 9054,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 8631,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 8749,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8749,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 8749,
											"end": 8797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8749,
											"end": 8797,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 8749,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 8733,
											"end": 8798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8724,
											"end": 8798,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8724,
											"end": 8798,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8821,
											"end": 8827,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8814,
											"end": 8819,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8807,
											"end": 8828,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8859,
											"end": 8863,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8852,
											"end": 8857,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8848,
											"end": 8864,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8897,
											"end": 8900,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8888,
											"end": 8894,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8883,
											"end": 8886,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8876,
											"end": 8901,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8873,
											"end": 8985,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8873,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 8873,
											"end": 8985,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8904,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 8904,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 8904,
											"end": 8983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8904,
											"end": 8983,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 8904,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8873,
											"end": 8985,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 8873,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8994,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 9041,
											"end": 9047,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9036,
											"end": 9039,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9031,
											"end": 9034,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8994,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8994,
											"end": 9048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8994,
											"end": 9048,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 8994,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8714,
											"end": 9054,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8631,
											"end": 9054,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8631,
											"end": 9054,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8631,
											"end": 9054,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8631,
											"end": 9054,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8631,
											"end": 9054,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8631,
											"end": 9054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9411,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 9073,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9128,
											"end": 9133,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9180,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9170,
											"end": 9174,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9158,
											"end": 9175,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9154,
											"end": 9181,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9144,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 9144,
											"end": 9266,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9185,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 9185,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 9185,
											"end": 9264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9185,
											"end": 9264,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 9185,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9144,
											"end": 9266,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 9144,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9302,
											"end": 9308,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9289,
											"end": 9309,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 9327,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 9401,
											"end": 9404,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9393,
											"end": 9399,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9386,
											"end": 9390,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9378,
											"end": 9384,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9374,
											"end": 9391,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9327,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 9327,
											"end": 9405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9327,
											"end": 9405,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 9327,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9318,
											"end": 9405,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9318,
											"end": 9405,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9134,
											"end": 9411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9411,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9411,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9512,
											"end": 9518,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9528,
											"end": 9534,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9536,
											"end": 9542,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9585,
											"end": 9588,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 9573,
											"end": 9582,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9564,
											"end": 9571,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9560,
											"end": 9583,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9556,
											"end": 9589,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9553,
											"end": 9673,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9553,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 9553,
											"end": 9673,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9592,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 9592,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 9592,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9592,
											"end": 9671,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 9592,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9553,
											"end": 9673,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 9553,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9712,
											"end": 9713,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 9782,
											"end": 9789,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9773,
											"end": 9779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9762,
											"end": 9771,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9758,
											"end": 9780,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9737,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 9737,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9737,
											"end": 9790,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 9737,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9727,
											"end": 9790,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9727,
											"end": 9790,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9683,
											"end": 9800,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9839,
											"end": 9841,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9865,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 9910,
											"end": 9917,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9901,
											"end": 9907,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9890,
											"end": 9899,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9886,
											"end": 9908,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9865,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 9865,
											"end": 9918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9865,
											"end": 9918,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 9865,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9855,
											"end": 9918,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 9855,
											"end": 9918,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9810,
											"end": 9928,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9967,
											"end": 9969,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9993,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 10038,
											"end": 10045,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10029,
											"end": 10035,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10018,
											"end": 10027,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 10014,
											"end": 10036,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9993,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 9993,
											"end": 10046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9993,
											"end": 10046,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 9993,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9983,
											"end": 10046,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9983,
											"end": 10046,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9938,
											"end": 10056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10123,
											"end": 10125,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10112,
											"end": 10121,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10108,
											"end": 10126,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10095,
											"end": 10127,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10146,
											"end": 10152,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 10176,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 10140,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10281,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10281,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 10281,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10281,
											"end": 10343,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10281,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10271,
											"end": 10343,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10271,
											"end": 10343,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10066,
											"end": 10353,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10428,
											"end": 10432,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10510,
											"end": 10516,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10507,
											"end": 10537,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 10540,
											"end": 10558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 10504,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 10600,
											"end": 10606,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 10578,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 10578,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10570,
											"end": 10607,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10570,
											"end": 10607,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10662,
											"end": 10666,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10656,
											"end": 10660,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10652,
											"end": 10667,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10644,
											"end": 10667,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10644,
											"end": 10667,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10366,
											"end": 10674,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10366,
											"end": 10674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 10841,
											"end": 10847,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 10799,
											"end": 10848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 10799,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 10783,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 10783,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10774,
											"end": 10849,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10774,
											"end": 10849,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10872,
											"end": 10878,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10865,
											"end": 10870,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10858,
											"end": 10879,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10910,
											"end": 10914,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10903,
											"end": 10908,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10899,
											"end": 10915,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10948,
											"end": 10951,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10939,
											"end": 10945,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10934,
											"end": 10937,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10930,
											"end": 10946,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 10955,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 10955,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 10924,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 11092,
											"end": 11098,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11087,
											"end": 11090,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 11045,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 11045,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 11105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 11105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 11105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11181,
											"end": 11186,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11230,
											"end": 11233,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11223,
											"end": 11227,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 11215,
											"end": 11221,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11211,
											"end": 11228,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11207,
											"end": 11234,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 11238,
											"end": 11317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 11238,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 11197,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11342,
											"end": 11362,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 11455,
											"end": 11458,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 11453,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11440,
											"end": 11444,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11428,
											"end": 11445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 11380,
											"end": 11459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11371,
											"end": 11459,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11371,
											"end": 11459,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11187,
											"end": 11465,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11125,
											"end": 11465,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11125,
											"end": 11465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 12270,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 11471,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11574,
											"end": 11580,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11623,
											"end": 11625,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 11611,
											"end": 11620,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11598,
											"end": 11621,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11594,
											"end": 11626,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11591,
											"end": 11710,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11591,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 11591,
											"end": 11710,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11629,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 11629,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 11629,
											"end": 11708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11629,
											"end": 11708,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 11629,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11591,
											"end": 11710,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 11591,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 11819,
											"end": 11826,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11810,
											"end": 11816,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11799,
											"end": 11808,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11795,
											"end": 11817,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11774,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 11774,
											"end": 11827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11774,
											"end": 11827,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 11774,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 11764,
											"end": 11827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11720,
											"end": 11837,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11876,
											"end": 11878,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11902,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 11947,
											"end": 11954,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11938,
											"end": 11944,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11927,
											"end": 11936,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11923,
											"end": 11945,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11902,
											"end": 11955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 11902,
											"end": 11955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11902,
											"end": 11955,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 11902,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11892,
											"end": 11955,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11892,
											"end": 11955,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11847,
											"end": 11965,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12021,
											"end": 12030,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12035,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12004,
											"end": 12036,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 12063,
											"end": 12081,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12055,
											"end": 12061,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12052,
											"end": 12082,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12166,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12166,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 12049,
											"end": 12166,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12085,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 12085,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 12085,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12085,
											"end": 12164,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 12085,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12166,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 12049,
											"end": 12166,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12190,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 12245,
											"end": 12252,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12236,
											"end": 12242,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12225,
											"end": 12234,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12221,
											"end": 12243,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12190,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 12190,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12190,
											"end": 12253,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 12190,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12180,
											"end": 12253,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12180,
											"end": 12253,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11975,
											"end": 12263,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 12270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 12270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 12270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 12270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 12270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 12270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12276,
											"end": 12750,
											"name": "tag",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 12276,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12344,
											"end": 12350,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12352,
											"end": 12358,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12401,
											"end": 12403,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12389,
											"end": 12398,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12380,
											"end": 12387,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12376,
											"end": 12399,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12372,
											"end": 12404,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 12369,
											"end": 12488,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12369,
											"end": 12488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 12369,
											"end": 12488,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12407,
											"end": 12486,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 12407,
											"end": 12486,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 12407,
											"end": 12486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12407,
											"end": 12486,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 12407,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12369,
											"end": 12488,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 12369,
											"end": 12488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12527,
											"end": 12528,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12588,
											"end": 12594,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12577,
											"end": 12586,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12573,
											"end": 12595,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12552,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 12552,
											"end": 12605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12552,
											"end": 12605,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 12552,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12605,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12498,
											"end": 12615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12654,
											"end": 12656,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12680,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 12725,
											"end": 12732,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12716,
											"end": 12722,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12705,
											"end": 12714,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12701,
											"end": 12723,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12680,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 12680,
											"end": 12733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12680,
											"end": 12733,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 12680,
											"end": 12733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12670,
											"end": 12733,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12670,
											"end": 12733,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12625,
											"end": 12743,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12276,
											"end": 12750,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12276,
											"end": 12750,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12276,
											"end": 12750,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12276,
											"end": 12750,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12276,
											"end": 12750,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12276,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12756,
											"end": 12936,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 12756,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12804,
											"end": 12881,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12801,
											"end": 12802,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12882,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12901,
											"end": 12905,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 12898,
											"end": 12899,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12891,
											"end": 12906,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12925,
											"end": 12929,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12922,
											"end": 12923,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12942,
											"end": 13262,
											"name": "tag",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 12942,
											"end": 13262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12986,
											"end": 12992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13024,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 13017,
											"end": 13021,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13013,
											"end": 13025,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 13003,
											"end": 13025,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13003,
											"end": 13025,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13070,
											"end": 13071,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13064,
											"end": 13068,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13060,
											"end": 13072,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13091,
											"end": 13109,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13081,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 13081,
											"end": 13162,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13147,
											"end": 13151,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 13139,
											"end": 13145,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13135,
											"end": 13152,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13125,
											"end": 13152,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13125,
											"end": 13152,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13081,
											"end": 13162,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 13081,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13209,
											"end": 13211,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13201,
											"end": 13207,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13198,
											"end": 13212,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13175,
											"end": 13213,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13172,
											"end": 13256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 13172,
											"end": 13256,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 13228,
											"end": 13246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13172,
											"end": 13256,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 13172,
											"end": 13256,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12993,
											"end": 13262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12942,
											"end": 13262,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12942,
											"end": 13262,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12942,
											"end": 13262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12942,
											"end": 13262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13417,
											"end": 13421,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13455,
											"end": 13457,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 13444,
											"end": 13453,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13440,
											"end": 13458,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13432,
											"end": 13458,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13432,
											"end": 13458,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13468,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 13536,
											"end": 13537,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13525,
											"end": 13534,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13521,
											"end": 13538,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13512,
											"end": 13518,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13468,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 13468,
											"end": 13539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13468,
											"end": 13539,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 13468,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13549,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 13617,
											"end": 13619,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13606,
											"end": 13615,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13602,
											"end": 13620,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13549,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 13549,
											"end": 13621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13549,
											"end": 13621,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 13549,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 13699,
											"end": 13701,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13688,
											"end": 13697,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13684,
											"end": 13702,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13675,
											"end": 13681,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 13631,
											"end": 13703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 13631,
											"end": 13703,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13268,
											"end": 13710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13716,
											"end": 13896,
											"name": "tag",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 13716,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13764,
											"end": 13841,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13761,
											"end": 13762,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13754,
											"end": 13842,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13861,
											"end": 13865,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 13858,
											"end": 13859,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13851,
											"end": 13866,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13885,
											"end": 13889,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 13882,
											"end": 13883,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13875,
											"end": 13890,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 13902,
											"end": 14050,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 13902,
											"end": 14050,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14004,
											"end": 14015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14041,
											"end": 14044,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14026,
											"end": 14044,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14026,
											"end": 14044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13902,
											"end": 14050,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13902,
											"end": 14050,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13902,
											"end": 14050,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13902,
											"end": 14050,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13902,
											"end": 14050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14056,
											"end": 14446,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 14056,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14162,
											"end": 14165,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14190,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 14223,
											"end": 14228,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14190,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 14190,
											"end": 14229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14190,
											"end": 14229,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 14190,
											"end": 14229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14245,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 14327,
											"end": 14333,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14322,
											"end": 14325,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14245,
											"end": 14334,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 14245,
											"end": 14334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14245,
											"end": 14334,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 14245,
											"end": 14334,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14238,
											"end": 14334,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14238,
											"end": 14334,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14343,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 14401,
											"end": 14407,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14396,
											"end": 14399,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14389,
											"end": 14393,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14382,
											"end": 14387,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 14378,
											"end": 14394,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14343,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 14343,
											"end": 14408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14343,
											"end": 14408,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 14343,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14433,
											"end": 14439,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14428,
											"end": 14431,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14424,
											"end": 14440,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14417,
											"end": 14440,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14417,
											"end": 14440,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14166,
											"end": 14446,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14056,
											"end": 14446,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14056,
											"end": 14446,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14056,
											"end": 14446,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14056,
											"end": 14446,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14056,
											"end": 14446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14452,
											"end": 14887,
											"name": "tag",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 14452,
											"end": 14887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14632,
											"end": 14635,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14654,
											"end": 14749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 14745,
											"end": 14748,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14736,
											"end": 14742,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14654,
											"end": 14749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 14654,
											"end": 14749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14654,
											"end": 14749,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 14654,
											"end": 14749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14647,
											"end": 14749,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14647,
											"end": 14749,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14766,
											"end": 14861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 14857,
											"end": 14860,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14848,
											"end": 14854,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14766,
											"end": 14861,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 14766,
											"end": 14861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14766,
											"end": 14861,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 14766,
											"end": 14861,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14759,
											"end": 14861,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14759,
											"end": 14861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14878,
											"end": 14881,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14881,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14881,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14452,
											"end": 14887,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14452,
											"end": 14887,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14452,
											"end": 14887,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14452,
											"end": 14887,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14452,
											"end": 14887,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14452,
											"end": 14887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14893,
											"end": 15034,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 14893,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14942,
											"end": 14946,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14965,
											"end": 14968,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14957,
											"end": 14968,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14957,
											"end": 14968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14988,
											"end": 14991,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14985,
											"end": 14986,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14978,
											"end": 14992,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15022,
											"end": 15026,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15019,
											"end": 15020,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15027,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 15001,
											"end": 15027,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15001,
											"end": 15027,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14893,
											"end": 15034,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14893,
											"end": 15034,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14893,
											"end": 15034,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14893,
											"end": 15034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15040,
											"end": 15133,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 15040,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15077,
											"end": 15083,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15124,
											"end": 15126,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15119,
											"end": 15121,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15112,
											"end": 15117,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15108,
											"end": 15122,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15104,
											"end": 15127,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 15094,
											"end": 15127,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15094,
											"end": 15127,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15040,
											"end": 15133,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15040,
											"end": 15133,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15040,
											"end": 15133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15040,
											"end": 15133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15139,
											"end": 15246,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 15139,
											"end": 15246,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15183,
											"end": 15191,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15233,
											"end": 15238,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15223,
											"end": 15239,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 15202,
											"end": 15239,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15202,
											"end": 15239,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15139,
											"end": 15246,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15139,
											"end": 15246,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15139,
											"end": 15246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15139,
											"end": 15246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15139,
											"end": 15246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15252,
											"end": 15645,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 15252,
											"end": 15645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15321,
											"end": 15327,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15372,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 15359,
											"end": 15369,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15355,
											"end": 15373,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 15394,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 15424,
											"end": 15490,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15413,
											"end": 15422,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15394,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 15394,
											"end": 15491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15394,
											"end": 15491,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 15394,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15512,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 15542,
											"end": 15550,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15531,
											"end": 15540,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15512,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 15512,
											"end": 15551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15512,
											"end": 15551,
											"name": "tag",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 15512,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15500,
											"end": 15551,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 15500,
											"end": 15551,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15584,
											"end": 15588,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15580,
											"end": 15589,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 15573,
											"end": 15578,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15569,
											"end": 15590,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15560,
											"end": 15590,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15560,
											"end": 15590,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15633,
											"end": 15637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15623,
											"end": 15631,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15619,
											"end": 15638,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15612,
											"end": 15617,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15609,
											"end": 15639,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 15599,
											"end": 15639,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15599,
											"end": 15639,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15328,
											"end": 15645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15328,
											"end": 15645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15252,
											"end": 15645,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15252,
											"end": 15645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15252,
											"end": 15645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15252,
											"end": 15645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15252,
											"end": 15645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15252,
											"end": 15645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15711,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 15651,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15679,
											"end": 15682,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15700,
											"end": 15705,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15693,
											"end": 15705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15693,
											"end": 15705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15711,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15711,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15711,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15717,
											"end": 15859,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 15717,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15767,
											"end": 15776,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 15818,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 15827,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 15845,
											"end": 15850,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15827,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 15827,
											"end": 15851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15827,
											"end": 15851,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 15827,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15818,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 15818,
											"end": 15852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15818,
											"end": 15852,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 15818,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15800,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 15800,
											"end": 15853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15800,
											"end": 15853,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 15800,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15787,
											"end": 15853,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15787,
											"end": 15853,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15717,
											"end": 15859,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15717,
											"end": 15859,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15717,
											"end": 15859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15717,
											"end": 15859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 15940,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 15865,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15908,
											"end": 15911,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15929,
											"end": 15934,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15922,
											"end": 15934,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15922,
											"end": 15934,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 15940,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 15940,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 15940,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 15940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15946,
											"end": 16215,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 15946,
											"end": 16215,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16056,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 16087,
											"end": 16094,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16056,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 16056,
											"end": 16095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16056,
											"end": 16095,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 16056,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16117,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 16166,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 16190,
											"end": 16206,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16166,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 16166,
											"end": 16207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16166,
											"end": 16207,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 16166,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16158,
											"end": 16164,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16151,
											"end": 16155,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16145,
											"end": 16156,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 16117,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 16117,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16117,
											"end": 16208,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 16117,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16111,
											"end": 16115,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16104,
											"end": 16209,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 16022,
											"end": 16215,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15946,
											"end": 16215,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15946,
											"end": 16215,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15946,
											"end": 16215,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15946,
											"end": 16215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16221,
											"end": 16294,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 16221,
											"end": 16294,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16266,
											"end": 16269,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16221,
											"end": 16294,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16221,
											"end": 16294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16489,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 16300,
											"end": 16489,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16377,
											"end": 16409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 16377,
											"end": 16409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 16377,
											"end": 16409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16377,
											"end": 16409,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 16377,
											"end": 16409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16418,
											"end": 16483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 16476,
											"end": 16482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16468,
											"end": 16474,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16462,
											"end": 16466,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16418,
											"end": 16483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 16418,
											"end": 16483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16418,
											"end": 16483,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 16418,
											"end": 16483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16353,
											"end": 16489,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16489,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16489,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16495,
											"end": 16681,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 16495,
											"end": 16681,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16572,
											"end": 16575,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16565,
											"end": 16570,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16562,
											"end": 16576,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16626,
											"end": 16665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 16663,
											"end": 16664,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16656,
											"end": 16661,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16626,
											"end": 16665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 16626,
											"end": 16665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16626,
											"end": 16665,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 16626,
											"end": 16665,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16599,
											"end": 16600,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 16592,
											"end": 16597,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16588,
											"end": 16601,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16579,
											"end": 16601,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16579,
											"end": 16601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "tag",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 16555,
											"end": 16675,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16495,
											"end": 16681,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16495,
											"end": 16681,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16495,
											"end": 16681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16687,
											"end": 17230,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 16687,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 16790,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 16783,
											"end": 16786,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16780,
											"end": 16791,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 16777,
											"end": 17223,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16777,
											"end": 17223,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 16777,
											"end": 17223,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16822,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 16854,
											"end": 16859,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16822,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 16822,
											"end": 16860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16822,
											"end": 16860,
											"name": "tag",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 16822,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16906,
											"end": 16935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 16924,
											"end": 16934,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16906,
											"end": 16935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 16906,
											"end": 16935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16906,
											"end": 16935,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 16906,
											"end": 16935,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16896,
											"end": 16904,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16892,
											"end": 16936,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17089,
											"end": 17091,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17077,
											"end": 17087,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17074,
											"end": 17092,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 17071,
											"end": 17120,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17071,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 17071,
											"end": 17120,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17110,
											"end": 17118,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17071,
											"end": 17120,
											"name": "tag",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 17071,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17133,
											"end": 17213,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 17189,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 17207,
											"end": 17210,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17189,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 17189,
											"end": 17211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17189,
											"end": 17211,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 17189,
											"end": 17211,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17179,
											"end": 17187,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17175,
											"end": 17212,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17162,
											"end": 17173,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17133,
											"end": 17213,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 17133,
											"end": 17213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17133,
											"end": 17213,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 17133,
											"end": 17213,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16792,
											"end": 17223,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16792,
											"end": 17223,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16777,
											"end": 17223,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 16777,
											"end": 17223,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16687,
											"end": 17230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16687,
											"end": 17230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16687,
											"end": 17230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16687,
											"end": 17230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17353,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 17236,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17290,
											"end": 17298,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17340,
											"end": 17345,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17334,
											"end": 17338,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17330,
											"end": 17346,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 17309,
											"end": 17346,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17309,
											"end": 17346,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17353,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17353,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17353,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17353,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17236,
											"end": 17353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17359,
											"end": 17528,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 17359,
											"end": 17528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17403,
											"end": 17409,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17436,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 17484,
											"end": 17485,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17480,
											"end": 17486,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 17472,
											"end": 17477,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17469,
											"end": 17470,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 17465,
											"end": 17478,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 17436,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 17436,
											"end": 17487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17436,
											"end": 17487,
											"name": "tag",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 17436,
											"end": 17487,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17432,
											"end": 17488,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 17517,
											"end": 17521,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17511,
											"end": 17515,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17507,
											"end": 17522,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17497,
											"end": 17522,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17497,
											"end": 17522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17410,
											"end": 17528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17359,
											"end": 17528,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17359,
											"end": 17528,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17359,
											"end": 17528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17359,
											"end": 17528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17359,
											"end": 17528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17533,
											"end": 17828,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 17533,
											"end": 17828,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17609,
											"end": 17613,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17755,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 17780,
											"end": 17783,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17774,
											"end": 17778,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17755,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 17755,
											"end": 17784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17755,
											"end": 17784,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 17755,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17747,
											"end": 17784,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17747,
											"end": 17784,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17817,
											"end": 17820,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17814,
											"end": 17815,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 17810,
											"end": 17821,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 17804,
											"end": 17808,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17801,
											"end": 17822,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 17793,
											"end": 17822,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17793,
											"end": 17822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17533,
											"end": 17828,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17533,
											"end": 17828,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17533,
											"end": 17828,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17533,
											"end": 17828,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17533,
											"end": 17828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17833,
											"end": 19228,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 17833,
											"end": 19228,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17950,
											"end": 17987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 17983,
											"end": 17986,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17950,
											"end": 17987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 17950,
											"end": 17987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17950,
											"end": 17987,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 17950,
											"end": 17987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18052,
											"end": 18070,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18044,
											"end": 18050,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18041,
											"end": 18071,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18094,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18094,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 18038,
											"end": 18094,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18074,
											"end": 18092,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 18074,
											"end": 18092,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 18074,
											"end": 18092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18074,
											"end": 18092,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 18074,
											"end": 18092,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18094,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 18038,
											"end": 18094,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 18150,
											"end": 18154,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18144,
											"end": 18155,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 18118,
											"end": 18156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18156,
											"name": "tag",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 18118,
											"end": 18156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18203,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 18263,
											"end": 18269,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18255,
											"end": 18261,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18249,
											"end": 18253,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18203,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 18203,
											"end": 18270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18203,
											"end": 18270,
											"name": "tag",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 18203,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18297,
											"end": 18298,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18321,
											"end": 18325,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18308,
											"end": 18325,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18308,
											"end": 18325,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18353,
											"end": 18355,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18345,
											"end": 18351,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18342,
											"end": 18356,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18370,
											"end": 18371,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 18365,
											"end": 18983,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18365,
											"end": 18983,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18365,
											"end": 18983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 18365,
											"end": 18983,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19027,
											"end": 19028,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19044,
											"end": 19050,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19041,
											"end": 19118,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19041,
											"end": 19118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 19041,
											"end": 19118,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19093,
											"end": 19102,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19088,
											"end": 19091,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 19084,
											"end": 19103,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19078,
											"end": 19104,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19069,
											"end": 19104,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19069,
											"end": 19104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19041,
											"end": 19118,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 19041,
											"end": 19118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19144,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 19204,
											"end": 19210,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19197,
											"end": 19202,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19144,
											"end": 19211,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 19144,
											"end": 19211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19144,
											"end": 19211,
											"name": "tag",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 19144,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19138,
											"end": 19142,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19131,
											"end": 19212,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19000,
											"end": 19222,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18335,
											"end": 19222,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 18335,
											"end": 19222,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18365,
											"end": 18983,
											"name": "tag",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 18365,
											"end": 18983,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18417,
											"end": 18421,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18413,
											"end": 18422,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18405,
											"end": 18411,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18401,
											"end": 18423,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18451,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 18483,
											"end": 18487,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18451,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 18451,
											"end": 18488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18451,
											"end": 18488,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 18451,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18510,
											"end": 18511,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18535,
											"end": 18536,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18532,
											"end": 18546,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18617,
											"end": 18626,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18612,
											"end": 18615,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 18608,
											"end": 18627,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18602,
											"end": 18628,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 18594,
											"end": 18600,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18587,
											"end": 18629,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 18668,
											"end": 18669,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 18660,
											"end": 18666,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18656,
											"end": 18670,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18646,
											"end": 18670,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18646,
											"end": 18670,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18715,
											"end": 18717,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18704,
											"end": 18713,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18700,
											"end": 18718,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18687,
											"end": 18718,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 18687,
											"end": 18718,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18561,
											"end": 18565,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18558,
											"end": 18559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18554,
											"end": 18566,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18549,
											"end": 18566,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18549,
											"end": 18566,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 18524,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18760,
											"end": 18766,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18751,
											"end": 18758,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18748,
											"end": 18767,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 18745,
											"end": 18924,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18745,
											"end": 18924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 18745,
											"end": 18924,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18818,
											"end": 18827,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18813,
											"end": 18816,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 18809,
											"end": 18828,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18803,
											"end": 18829,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 18861,
											"end": 18909,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 18903,
											"end": 18907,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18895,
											"end": 18901,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 18891,
											"end": 18908,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18880,
											"end": 18889,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18861,
											"end": 18909,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 18861,
											"end": 18909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18861,
											"end": 18909,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 18861,
											"end": 18909,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18853,
											"end": 18859,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18846,
											"end": 18910,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 18768,
											"end": 18924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18745,
											"end": 18924,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 18745,
											"end": 18924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18970,
											"end": 18971,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 18966,
											"end": 18967,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 18958,
											"end": 18964,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 18954,
											"end": 18968,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 18950,
											"end": 18972,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18944,
											"end": 18948,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 18937,
											"end": 18973,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 18372,
											"end": 18983,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18372,
											"end": 18983,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18372,
											"end": 18983,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18335,
											"end": 19222,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 18335,
											"end": 19222,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18335,
											"end": 19222,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17925,
											"end": 19228,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17925,
											"end": 19228,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17925,
											"end": 19228,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17833,
											"end": 19228,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17833,
											"end": 19228,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17833,
											"end": 19228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19234,
											"end": 19332,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 19234,
											"end": 19332,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19285,
											"end": 19291,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19319,
											"end": 19324,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19313,
											"end": 19325,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19303,
											"end": 19325,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19303,
											"end": 19325,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19234,
											"end": 19332,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19234,
											"end": 19332,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19234,
											"end": 19332,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19234,
											"end": 19332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19338,
											"end": 19506,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 19338,
											"end": 19506,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19421,
											"end": 19432,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19455,
											"end": 19461,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19450,
											"end": 19453,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19443,
											"end": 19462,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19495,
											"end": 19499,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19490,
											"end": 19493,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19486,
											"end": 19500,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19471,
											"end": 19500,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19471,
											"end": 19500,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19338,
											"end": 19506,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19338,
											"end": 19506,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19338,
											"end": 19506,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19338,
											"end": 19506,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19338,
											"end": 19506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19512,
											"end": 19885,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 19512,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19598,
											"end": 19601,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19626,
											"end": 19664,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 19658,
											"end": 19663,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19626,
											"end": 19664,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 19626,
											"end": 19664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19626,
											"end": 19664,
											"name": "tag",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 19626,
											"end": 19664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19680,
											"end": 19750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 19743,
											"end": 19749,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19738,
											"end": 19741,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19680,
											"end": 19750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 19680,
											"end": 19750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19680,
											"end": 19750,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 19680,
											"end": 19750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19673,
											"end": 19750,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 19673,
											"end": 19750,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19759,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 19817,
											"end": 19823,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19812,
											"end": 19815,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19805,
											"end": 19809,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19798,
											"end": 19803,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19794,
											"end": 19810,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19759,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 19759,
											"end": 19824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19759,
											"end": 19824,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 19759,
											"end": 19824,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19849,
											"end": 19878,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 19871,
											"end": 19877,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19849,
											"end": 19878,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 19849,
											"end": 19878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19849,
											"end": 19878,
											"name": "tag",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 19849,
											"end": 19878,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19844,
											"end": 19847,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19840,
											"end": 19879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19833,
											"end": 19879,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19833,
											"end": 19879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19602,
											"end": 19885,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19512,
											"end": 19885,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19512,
											"end": 19885,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19512,
											"end": 19885,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19512,
											"end": 19885,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19512,
											"end": 19885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20086,
											"end": 20090,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20124,
											"end": 20127,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 20113,
											"end": 20122,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20109,
											"end": 20128,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20101,
											"end": 20128,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20101,
											"end": 20128,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20138,
											"end": 20209,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 20206,
											"end": 20207,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20195,
											"end": 20204,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20191,
											"end": 20208,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20182,
											"end": 20188,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 20138,
											"end": 20209,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 20138,
											"end": 20209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20138,
											"end": 20209,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 20138,
											"end": 20209,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20219,
											"end": 20291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 20287,
											"end": 20289,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20276,
											"end": 20285,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20272,
											"end": 20290,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20263,
											"end": 20269,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20219,
											"end": 20291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 20219,
											"end": 20291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20219,
											"end": 20291,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 20219,
											"end": 20291,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20301,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 20369,
											"end": 20371,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 20358,
											"end": 20367,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20354,
											"end": 20372,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20345,
											"end": 20351,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20301,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 20301,
											"end": 20373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20301,
											"end": 20373,
											"name": "tag",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 20301,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20420,
											"end": 20429,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20414,
											"end": 20418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20410,
											"end": 20430,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20405,
											"end": 20407,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 20394,
											"end": 20403,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20390,
											"end": 20408,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20383,
											"end": 20431,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20448,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 20519,
											"end": 20523,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20510,
											"end": 20516,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20448,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 20448,
											"end": 20524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20448,
											"end": 20524,
											"name": "tag",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 20448,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20440,
											"end": 20524,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20440,
											"end": 20524,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19891,
											"end": 20531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20537,
											"end": 20678,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 20537,
											"end": 20678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20593,
											"end": 20598,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20624,
											"end": 20630,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20618,
											"end": 20631,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20609,
											"end": 20631,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20609,
											"end": 20631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20640,
											"end": 20672,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 20666,
											"end": 20671,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20640,
											"end": 20672,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 20640,
											"end": 20672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20640,
											"end": 20672,
											"name": "tag",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 20640,
											"end": 20672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20537,
											"end": 20678,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20537,
											"end": 20678,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20537,
											"end": 20678,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20537,
											"end": 20678,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20537,
											"end": 20678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20684,
											"end": 21033,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 20684,
											"end": 21033,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20753,
											"end": 20759,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20802,
											"end": 20804,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20790,
											"end": 20799,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20781,
											"end": 20788,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20777,
											"end": 20800,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20773,
											"end": 20805,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 20770,
											"end": 20889,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20770,
											"end": 20889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "592"
										},
										{
											"begin": 20770,
											"end": 20889,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 20887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 20808,
											"end": 20887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 20808,
											"end": 20887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 20887,
											"name": "tag",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 20808,
											"end": 20887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20770,
											"end": 20889,
											"name": "tag",
											"source": 16,
											"value": "592"
										},
										{
											"begin": 20770,
											"end": 20889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20928,
											"end": 20929,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20953,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 21008,
											"end": 21015,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20999,
											"end": 21005,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20988,
											"end": 20997,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20984,
											"end": 21006,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20953,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 20953,
											"end": 21016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20953,
											"end": 21016,
											"name": "tag",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 20953,
											"end": 21016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20943,
											"end": 21016,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20943,
											"end": 21016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20899,
											"end": 21026,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20684,
											"end": 21033,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20684,
											"end": 21033,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20684,
											"end": 21033,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20684,
											"end": 21033,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20684,
											"end": 21033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21371,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 21039,
											"end": 21371,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21160,
											"end": 21164,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21198,
											"end": 21200,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 21187,
											"end": 21196,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21183,
											"end": 21201,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21175,
											"end": 21201,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21175,
											"end": 21201,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21211,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 21279,
											"end": 21280,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21268,
											"end": 21277,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21264,
											"end": 21281,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21255,
											"end": 21261,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21211,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 21211,
											"end": 21282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21211,
											"end": 21282,
											"name": "tag",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 21211,
											"end": 21282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21292,
											"end": 21364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 21360,
											"end": 21362,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21349,
											"end": 21358,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21345,
											"end": 21363,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21336,
											"end": 21342,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21292,
											"end": 21364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 21292,
											"end": 21364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21292,
											"end": 21364,
											"name": "tag",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 21292,
											"end": 21364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21371,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21371,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21371,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21371,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21371,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21377,
											"end": 21557,
											"name": "tag",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 21377,
											"end": 21557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21425,
											"end": 21502,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21422,
											"end": 21423,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21415,
											"end": 21503,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21522,
											"end": 21526,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 21519,
											"end": 21520,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 21512,
											"end": 21527,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21546,
											"end": 21550,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 21543,
											"end": 21544,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21536,
											"end": 21551,
											"name": "REVERT",
											"source": 16
										}
									]
								},
								"ABBB6250C0C0EF97A0D5865F4D95250E6A163C7DD92F6C2F933AA2D824A5E939": "68747470733a2f2f6170692e6e706f696e742e696f2f3233363761353461333863373962626539613935",
								"B87B14083892E557AC644ED6F47814FE3071FE6952C548D24DE97E8CF93CB194": "68747470733a2f2f6170692e6e706f696e742e696f2f3662646361306231616239633535303934313130"
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GemNFT/ERC721Dynmic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeUri(uint256,uint256)": "870b1e89",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address,uint256,string)": "cd279c7c",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"changeUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GemNFT/ERC721Dynmic.sol\":\"DynamicNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"GemNFT/ERC721Dynmic.sol\":{\"keccak256\":\"0x4b40f4871dcfb195de6829cf043b4efdb20df64780b0d45153b5400145fa9069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://539c34a5fc0738f86a81b3c7e43da679f7afebe0df425ac0031035f301eec2e3\",\"dweb:/ipfs/QmYbZj3vxXmsxN4n71moWJLNDfN3BPhd4ioMEH5ncp9Wid\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 197,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 199,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 207,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 217,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1336,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2732,
								"contract": "GemNFT/ERC721Dynmic.sol:DynamicNFT",
								"label": "IpfsUri",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_string_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1749
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3,
							"sourceUnit": 1750,
							"src": "116:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "91:70:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1749
						],
						"IERC4906": [
							24
						],
						"IERC721": [
							1290
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 25,
							"sourceUnit": 3,
							"src": "132:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 25,
							"sourceUnit": 28,
							"src": "156:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "IERC165",
										"nameLocations": [
											"248:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "248:7:1"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:1"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC721",
										"nameLocations": [
											"257:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1290,
										"src": "257:7:1"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:1"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 7,
								"nodeType": "StructuredDocumentation",
								"src": "181:45:1",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24,
								1290,
								1749
							],
							"name": "IERC4906",
							"nameLocation": "236:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "271:201:1",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 16,
									"name": "MetadataUpdate",
									"nameLocation": "483:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "506:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "498:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:18:1"
									},
									"src": "477:39:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "522:212:1",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 23,
									"name": "BatchMetadataUpdate",
									"nameLocation": "745:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "773:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "765:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "795:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "787:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:42:1"
									},
									"src": "739:68:1"
								}
							],
							"scope": 25,
							"src": "226:583:1",
							"usedErrors": [],
							"usedEvents": [
								16,
								23,
								1189,
								1198,
								1207
							]
						}
					],
					"src": "107:703:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1749
						],
						"IERC721": [
							1290
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 1291,
							"src": "116:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "91:63:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							164
						],
						"IERC20Errors": [
							69
						],
						"IERC721Errors": [
							117
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 30,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 39,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 44,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 49,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 58,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 63,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 68,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 165,
							"src": "278:1764:3",
							"usedErrors": [
								39,
								44,
								49,
								58,
								63,
								68
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 70,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 75,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 80,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 89,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 94,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 99,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 106,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 111,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 116,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 165,
							"src": "2186:2092:3",
							"usedErrors": [
								75,
								80,
								89,
								94,
								99,
								106,
								111,
								116
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 129,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 134,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 139,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 146,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 151,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 156,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 163,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 165,
							"src": "4424:2107:3",
							"usedErrors": [
								129,
								134,
								139,
								146,
								151,
								156,
								163
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1484
						],
						"ERC165": [
							1737
						],
						"ERC721": [
							1173
						],
						"IERC165": [
							1749
						],
						"IERC721": [
							1290
						],
						"IERC721Errors": [
							117
						],
						"IERC721Metadata": [
							1462
						],
						"IERC721Receiver": [
							1308
						],
						"Strings": [
							1713
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 1291,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 167,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1290,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 1309,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 1463,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1462,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 1485,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1484,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 1714,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1713,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 1738,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1749,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 178,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1737,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 165,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 180,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 117,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1484,
										"src": "804:7:4"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 185,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1737,
										"src": "813:6:4"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 187,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1290,
										"src": "821:7:4"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 189,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1462,
										"src": "830:15:4"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 117,
										"src": "847:13:4"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1173,
							"linearizedBaseContracts": [
								1173,
								117,
								1462,
								1290,
								1737,
								1749,
								1484
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 195,
									"libraryName": {
										"id": 193,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1713,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1173,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 196,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 199,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1173,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 198,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1173,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 202,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1173,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 206,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 204,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 205,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1173,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 210,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 208,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 217,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1173,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 216,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 215,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 213,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 214,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 234,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1173,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1736,
										1748
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 245,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 247,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1290,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1290_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1290_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 246,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1290",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 253,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1462,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1462_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1462_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 252,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1462",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 258,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1173_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1736,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 241,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 239,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1737,
												"src": "1637:6:4"
											},
											{
												"id": 240,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 236,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1173,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1215
									],
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 273,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 274,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 287,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 280,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 288,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 290,
													"indexExpression": {
														"id": 289,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 272,
												"id": 291,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1173,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 301,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 300,
												"id": 304,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1173,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1447
									],
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 312,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 311,
												"id": 313,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 309,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1173,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 321,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 199,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 320,
												"id": 322,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1173,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													337
												],
												"declarations": [
													{
														"constant": false,
														"id": 337,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 336,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 338,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 343,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 341,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 351,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 352,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1543,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 348,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 331,
												"id": 358,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1173,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1173,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1263
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 380,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 377,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															976,
															1042
														],
														"referencedDeclaration": 976,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1173,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 392,
												"id": 400,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1173,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1271
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 411,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 410,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1173,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 428,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 430,
														"indexExpression": {
															"id": 429,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 432,
													"indexExpression": {
														"id": 431,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 433,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1173,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1255
									],
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 446,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 452,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 451,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 457,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [
														{
															"id": 463,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 465,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 462,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 469,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 470,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 478,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 474,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 475,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 477,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1173,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1245
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 492,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 491,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															499,
															525
														],
														"referencedDeclaration": 525,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1173,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 517,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1173,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 533,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 535,
													"indexExpression": {
														"id": 534,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 532,
												"id": 536,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1173,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 546,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 548,
													"indexExpression": {
														"id": 547,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 545,
												"id": 549,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1173,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 563,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 569,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 570,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 573,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 574,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 572,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 578,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 577,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 580,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 583,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 562,
												"id": 585,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1173,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 598,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 599,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 600,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 597,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 603,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 604,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 619,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 615,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 592,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 616,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 594,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 614,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 106,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 618,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 620,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 613,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 610,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 594,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 609,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 612,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1173,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 638,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 632,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 634,
																"indexExpression": {
																	"id": 633,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 635,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 637,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 628,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1173,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 652,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"arguments": [
														{
															"id": 655,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 658,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 659,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 665,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 666,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 667,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 664,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 669,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 679,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 683,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 684,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 678,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		976,
																		1042
																	],
																	"referencedDeclaration": 1042,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 690,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 697,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 691,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 207,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 693,
																			"indexExpression": {
																				"id": 692,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 653,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 696,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 701,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 712,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 706,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 207,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 708,
																			"indexExpression": {
																				"id": 707,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 711,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 715,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 716,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 718,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 722,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 727,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 653,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 651,
												"id": 728,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1173,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 753,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"arguments": [
														{
															"id": 756,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 755,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1173,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 788,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															795,
															821
														],
														"referencedDeclaration": 821,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1173,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 811,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 817,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 810,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1173,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 827,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 835,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 829,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 841,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 842,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 848,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 847,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 850,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1173,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 864,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 865,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 871,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 870,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 879,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"arguments": [
														{
															"id": 882,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 884,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 881,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 901,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 902,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 911,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 910,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 905,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 906,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 907,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 880,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 904,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 909,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 912,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 897,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 896,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1173,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 924,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															932,
															958
														],
														"referencedDeclaration": 958,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1173,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 954,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 950,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 940,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1173,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 971,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 968,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															976,
															1042
														],
														"referencedDeclaration": 1042,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1173,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 989,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1034,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																997
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 997,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1033,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 996,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1001,
															"initialValue": {
																"arguments": [
																	{
																		"id": 999,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 998,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1002,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1005,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1003,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1008,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1009,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1013,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1014,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1012,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1023,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1022,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1019,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1018,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 111,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1021,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1024,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1032,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1031,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1026,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1027,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1028,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 981,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1025,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1030,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1035,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1037,
														"indexExpression": {
															"id": 1036,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1038,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1173,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1053,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1062,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1059,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1058,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1061,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1064,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1067,
															"indexExpression": {
																"id": 1065,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1068,
														"indexExpression": {
															"id": 1066,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1073,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1072,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1173,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1087,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"arguments": [
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1089,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1093,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1094,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1104,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1103,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1100,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1099,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1102,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1105,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1088,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1106,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1173,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1120,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1170,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1169,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1149,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1138,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1136,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1139,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1308,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1308_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1140,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1307,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1141,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1148,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1147,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1144,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1113,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1143,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 99,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1145,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1146,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1150,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1137,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1136,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1150,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1135,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1166,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1154,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1152,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1156,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1164,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:4",
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:4",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nativeSrc": "17599:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nativeSrc": "17616:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nativeSrc": "17592:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nativeSrc": "17592:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1152,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1152,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1163,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1165,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1159,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1113,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1158,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 99,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1160,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1161,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1167,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1153,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1152,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1167,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1151,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1129,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1474,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1132,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1133,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1126,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1113,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1125,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1308_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1308",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1307,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1168,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1173,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1174,
							"src": "776:16926:4",
							"usedErrors": [
								75,
								80,
								89,
								94,
								99,
								106,
								111,
								116
							],
							"usedEvents": [
								1189,
								1198,
								1207
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1749
						],
						"IERC721": [
							1290
						]
					},
					"id": 1291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1291,
							"sourceUnit": 1750,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1176,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1749,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "287:7:5"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1290,
							"linearizedBaseContracts": [
								1290,
								1749
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1189,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1198,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1207,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1290,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1290,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1290,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1290,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1290,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1290,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1290,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1290,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1290,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1291,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1189,
								1198,
								1207
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1293,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1308,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1173
						],
						"ERC721URIStorage": [
							1434
						],
						"IERC165": [
							1749
						],
						"IERC4906": [
							24
						],
						"Strings": [
							1713
						]
					},
					"id": 1435,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1435,
							"sourceUnit": 1174,
							"src": "154:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1311,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "162:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1435,
							"sourceUnit": 1714,
							"src": "192:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1713,
										"src": "200:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1435,
							"sourceUnit": 25,
							"src": "244:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 24,
										"src": "252:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1435,
							"sourceUnit": 3,
							"src": "303:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1317,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1749,
										"src": "311:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1320,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "469:8:7"
									},
									"id": 1321,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:7"
								},
								{
									"baseName": {
										"id": 1322,
										"name": "ERC721",
										"nameLocations": [
											"479:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "479:6:7"
									},
									"id": 1323,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1319,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1434,
							"linearizedBaseContracts": [
								1434,
								1173,
								117,
								1462,
								24,
								1290,
								1737,
								1749,
								1484
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1326,
									"libraryName": {
										"id": 1324,
										"name": "Strings",
										"nameLocations": [
											"498:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1713,
										"src": "498:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:7",
									"typeName": {
										"id": 1325,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1332,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1434,
									"src": "706:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1327,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1330,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1329,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1328,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:7",
												"typeDescriptions": {}
											}
										},
										"id": 1331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1336,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1434,
									"src": "817:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1335,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:7",
										"keyType": {
											"id": 1333,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1334,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										265,
										1748
									],
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "1045:99:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1347,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "1062:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1348,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "1077:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1352,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "1125:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1350,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1434_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 265,
															"src": "1101:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1355,
												"nodeType": "Return",
												"src": "1055:82:7"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:7",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1343,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1341,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1173,
												"src": "1013:6:7"
											},
											{
												"id": 1342,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "1021:7:7"
											}
										],
										"src": "1004:25:7"
									},
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "964:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:7"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1039:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:7"
									},
									"scope": 1434,
									"src": "937:207:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										360
									],
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "1298:505:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1367,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "1322:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1366,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "1308:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:7"
											},
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "1341:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1370,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": {
													"baseExpression": {
														"id": 1372,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1367:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1374,
													"indexExpression": {
														"id": 1373,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "1378:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:7"
											},
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "1396:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1376,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1378,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1417:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1383,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "1506:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1381,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1391,
												"nodeType": "IfStatement",
												"src": "1496:70:7",
												"trueBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "1525:41:7",
													"statements": [
														{
															"expression": {
																"id": 1388,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "1546:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1365,
															"id": 1389,
															"nodeType": "Return",
															"src": "1539:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1394,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "1671:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1392,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1407,
												"nodeType": "IfStatement",
												"src": "1661:95:7",
												"trueBody": {
													"id": 1406,
													"nodeType": "Block",
													"src": "1694:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1402,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "1729:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1403,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "1735:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1399,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:7",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1365,
															"id": 1405,
															"nodeType": "Return",
															"src": "1708:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1410,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "1788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1408,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1434_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:7",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "1773:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1365,
												"id": 1412,
												"nodeType": "Return",
												"src": "1766:30:7"
											}
										]
									},
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1362,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:7"
									},
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "1228:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:7"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "1283:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:7"
									},
									"scope": 1434,
									"src": "1210:593:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "2003:86:7",
										"statements": [
											{
												"expression": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1422,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "2013:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1424,
														"indexExpression": {
															"id": 1423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "2024:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1425,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "2035:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1429,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "2074:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1428,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2059:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "EmitStatement",
												"src": "2054:28:7"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1944:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1961:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:7"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:7"
									},
									"scope": 1434,
									"src": "1922:167:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1435,
							"src": "431:1660:7",
							"usedErrors": [
								75,
								80,
								89,
								94,
								99,
								106,
								111,
								116
							],
							"usedEvents": [
								16,
								23,
								1189,
								1198,
								1207
							]
						}
					],
					"src": "128:1964:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1290
						],
						"IERC721Metadata": [
							1462
						]
					},
					"id": 1463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1436,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1291,
							"src": "153:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1437,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1290,
										"src": "161:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1440,
										"name": "IERC721",
										"nameLocations": [
											"357:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1290,
										"src": "357:7:8"
									},
									"id": 1441,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1439,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1462,
							"linearizedBaseContracts": [
								1462,
								1290,
								1749
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"scope": 1462,
									"src": "434:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:8"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "600:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:8"
									},
									"scope": 1462,
									"src": "559:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "734:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:8"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "774:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:8"
									},
									"scope": 1462,
									"src": "716:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1463,
							"src": "328:463:8",
							"usedErrors": [],
							"usedEvents": [
								1189,
								1198,
								1207
							]
						}
					],
					"src": "127:665:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1484
						]
					},
					"id": 1485,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1465,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1484,
							"linearizedBaseContracts": [
								1484
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1470,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1469,
												"id": 1472,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 1484,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1479,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1481,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 1484,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1485,
							"src": "608:235:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2615
						],
						"SignedMath": [
							2720
						],
						"Strings": [
							1713
						]
					},
					"id": 1714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1486,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1487,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1714,
							"sourceUnit": 2616,
							"src": "126:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1488,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1714,
							"sourceUnit": 2721,
							"src": "152:31:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1489,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1713,
							"linearizedBaseContracts": [
								1713
							],
							"name": "Strings",
							"nameLocation": "228:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1492,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "242:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1490,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1491,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1495,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1713,
									"src": "302:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1493,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "518:625:10",
										"statements": [
											{
												"id": 1541,
												"nodeType": "UncheckedBlock",
												"src": "528:609:10",
												"statements": [
													{
														"assignments": [
															1504
														],
														"declarations": [
															{
																"constant": false,
																"id": 1504,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1541,
																"src": "552:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1503,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1511,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1507,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "580:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1505,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2615,
																		"src": "569:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2615_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2452,
																	"src": "569:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:10"
													},
													{
														"assignments": [
															1513
														],
														"declarations": [
															{
																"constant": false,
																"id": 1513,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1541,
																"src": "604:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1512,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1518,
														"initialValue": {
															"arguments": [
																{
																	"id": 1516,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "638:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1514,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:10"
													},
													{
														"assignments": [
															1520
														],
														"declarations": [
															{
																"constant": false,
																"id": 1520,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1541,
																"src": "659:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1519,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1521,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:10"
													},
													{
														"AST": {
															"nativeSrc": "740:67:10",
															"nodeType": "YulBlock",
															"src": "740:67:10",
															"statements": [
																{
																	"nativeSrc": "758:35:10",
																	"nodeType": "YulAssignment",
																	"src": "758:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:10",
																						"nodeType": "YulLiteral",
																						"src": "781:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:10"
																				},
																				"nativeSrc": "777:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:10"
																		},
																		"nativeSrc": "765:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1513,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1504,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1520,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:10",
																"valueSize": 1
															}
														],
														"id": 1522,
														"nodeType": "InlineAssembly",
														"src": "731:76:10"
													},
													{
														"body": {
															"id": 1537,
															"nodeType": "Block",
															"src": "833:267:10",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:10",
																		"subExpression": {
																			"id": 1524,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "851:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:10",
																		"nodeType": "YulBlock",
																		"src": "934:84:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:10",
																											"nodeType": "YulLiteral",
																											"src": "985:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:10"
																									},
																									"nativeSrc": "974:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:10"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:10",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:10"
																							},
																							"nativeSrc": "969:30:10",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:10"
																					},
																					"nativeSrc": "956:44:10",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:10"
																				},
																				"nativeSrc": "956:44:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1492,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1520,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1498,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1527,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:10"
																},
																{
																	"expression": {
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1528,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "1035:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1531,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1532,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "1068:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1536,
																	"nodeType": "IfStatement",
																	"src": "1064:21:10",
																	"trueBody": {
																		"id": 1535,
																		"nodeType": "Break",
																		"src": "1080:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1538,
														"nodeType": "WhileStatement",
														"src": "820:280:10"
													},
													{
														"expression": {
															"id": 1539,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1120:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1502,
														"id": 1540,
														"nodeType": "Return",
														"src": "1113:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "465:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:10"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "503:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:10"
									},
									"scope": 1713,
									"src": "447:696:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "1313:103:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "1354:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:10",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1564,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1546,
																					"src": "1400:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1562,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2720,
																					"src": "1385:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2720_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:10",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2719,
																				"src": "1385:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1561,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1543,
																			1571
																		],
																		"referencedDeclaration": 1543,
																		"src": "1376:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1553,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1551,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1569,
												"nodeType": "Return",
												"src": "1323:86:10"
											}
										]
									},
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "1261:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1545,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:10"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "1298:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1548,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:10"
									},
									"scope": 1713,
									"src": "1243:173:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "1595:100:10",
										"statements": [
											{
												"id": 1589,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "1648:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1583,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1574,
																				"src": "1667:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1581,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2615,
																				"src": "1655:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2615_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2575,
																			"src": "1655:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1579,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1591,
																	1667,
																	1687
																],
																"referencedDeclaration": 1667,
																"src": "1636:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1578,
														"id": 1588,
														"nodeType": "Return",
														"src": "1629:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1542:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:10"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1580:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:10"
									},
									"scope": 1713,
									"src": "1521:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "1908:347:10",
										"statements": [
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1666,
														"src": "1918:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1601,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1606,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "1954:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1603,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:10"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1612,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "1975:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1614,
														"indexExpression": {
															"hexValue": "30",
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:10"
											},
											{
												"expression": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1618,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "2000:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1620,
														"indexExpression": {
															"hexValue": "31",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:10"
											},
											{
												"body": {
													"id": 1652,
													"nodeType": "Block",
													"src": "2070:83:10",
													"statements": [
														{
															"expression": {
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1638,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "2084:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1640,
																	"indexExpression": {
																		"id": 1639,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "2091:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1641,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "2096:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1645,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "2105:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1647,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:10"
														},
														{
															"expression": {
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "2131:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1651,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1632,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "2058:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"initializationExpression": {
													"assignments": [
														1625
													],
													"declarations": [
														{
															"constant": false,
															"id": 1625,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1653,
															"src": "2030:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1624,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1631,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1627,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "2046:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:10",
														"subExpression": {
															"id": 1635,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2067:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1655,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "2170:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1663,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "2241:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1661,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1665,
												"nodeType": "Return",
												"src": "2227:21:10"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1839:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1854:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:10"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "1893:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:10"
									},
									"scope": 1713,
									"src": "1818:437:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "2480:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1680,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1670,
																			"src": "2525:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1678,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1676,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1683,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "2533:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1675,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1591,
															1667,
															1687
														],
														"referencedDeclaration": 1667,
														"src": "2497:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1674,
												"id": 1685,
												"nodeType": "Return",
												"src": "2490:59:10"
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2428:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:10"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "2465:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:10"
									},
									"scope": 1713,
									"src": "2407:149:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "2711:66:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1700,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "2744:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1698,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1697,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1706,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "2767:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1704,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1703,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1710,
												"nodeType": "Return",
												"src": "2721:49:10"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2648:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2665:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:10"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2705:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:10"
									},
									"scope": 1713,
									"src": "2633:144:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1714,
							"src": "220:2559:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1737
						],
						"IERC165": [
							1749
						]
					},
					"id": 1738,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1738,
							"sourceUnit": 1750,
							"src": "124:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1718,
										"name": "IERC165",
										"nameLocations": [
											"754:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "754:7:11"
									},
									"id": 1719,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1717,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1737,
							"linearizedBaseContracts": [
								1737,
								1749
							],
							"name": "ERC165",
							"nameLocation": "744:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1748
									],
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "920:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1728,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "937:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1730,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "957:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1749_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1749_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1729,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1749",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1727,
												"id": 1734,
												"nodeType": "Return",
												"src": "930:47:11"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1724,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:11"
									},
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "856:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:11"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "914:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:11"
									},
									"scope": 1737,
									"src": "829:155:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1738,
							"src": "726:260:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1749
						]
					},
					"id": 1750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1739,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1740,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1749,
							"linearizedBaseContracts": [
								1749
							],
							"name": "IERC165",
							"nameLocation": "415:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "801:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:12"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:12"
									},
									"scope": 1749,
									"src": "774:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1750,
							"src": "405:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2615
						]
					},
					"id": 2616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1752,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2615,
							"linearizedBaseContracts": [
								2615
							],
							"name": "Math",
							"nameLocation": "210:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1756,
									"members": [
										{
											"id": 1753,
											"name": "Down",
											"nameLocation": "245:4:13",
											"nodeType": "EnumValue",
											"src": "245:4:13"
										},
										{
											"id": 1754,
											"name": "Up",
											"nameLocation": "287:2:13",
											"nodeType": "EnumValue",
											"src": "287:2:13"
										},
										{
											"id": 1755,
											"name": "Zero",
											"nameLocation": "318:4:13",
											"nodeType": "EnumValue",
											"src": "318:4:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:13",
									"nodeType": "EnumDefinition",
									"src": "221:122:13"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "480:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1766,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "497:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1767,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "501:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1770,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "509:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:13",
													"trueExpression": {
														"id": 1769,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "505:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1772,
												"nodeType": "Return",
												"src": "490:20:13"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "426:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "437:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:13"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "471:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:13"
									},
									"scope": 2615,
									"src": "413:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "655:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1784,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "672:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1785,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "676:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1788,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "684:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:13",
													"trueExpression": {
														"id": 1787,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "680:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1790,
												"nodeType": "Return",
												"src": "665:20:13"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "646:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:13"
									},
									"scope": 2615,
									"src": "588:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "876:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1802,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1803,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "935:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1805,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1806,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "941:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1807,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "945:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1809,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1801,
												"id": 1813,
												"nodeType": "Return",
												"src": "923:28:13"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "822:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "833:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:13"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "867:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:13"
									},
									"scope": 2615,
									"src": "805:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "1228:123:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1825,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "1316:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1829,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "1330:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "1339:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1824,
												"id": 1838,
												"nodeType": "Return",
												"src": "1309:35:13"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1174:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1185:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:13"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1219:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:13"
									},
									"scope": 2615,
									"src": "1157:194:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "1765:4115:13",
										"statements": [
											{
												"id": 1961,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:13",
												"statements": [
													{
														"assignments": [
															1853
														],
														"declarations": [
															{
																"constant": false,
																"id": 1853,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 1961,
																"src": "2096:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1852,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1854,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:13"
													},
													{
														"assignments": [
															1856
														],
														"declarations": [
															{
																"constant": false,
																"id": 1856,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 1961,
																"src": "2168:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1855,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1857,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:13"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:13",
															"nodeType": "YulBlock",
															"src": "2248:157:13",
															"statements": [
																{
																	"nativeSrc": "2266:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:13"
																				},
																				"nativeSrc": "2289:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:13"
																		},
																		"nativeSrc": "2276:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:13",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:13",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:13"
																		},
																		"nativeSrc": "2322:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:13",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:13"
																				},
																				"nativeSrc": "2361:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:13"
																				},
																				"nativeSrc": "2377:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:13"
																		},
																		"nativeSrc": "2357:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1856,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:13",
																"valueSize": 1
															}
														],
														"id": 1858,
														"nodeType": "InlineAssembly",
														"src": "2239:166:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1859,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "2486:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1867,
														"nodeType": "IfStatement",
														"src": "2482:368:13",
														"trueBody": {
															"id": 1866,
															"nodeType": "Block",
															"src": "2498:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1862,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1853,
																			"src": "2816:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1863,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "2824:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1851,
																	"id": 1865,
																	"nodeType": "Return",
																	"src": "2809:26:13"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1869,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "2960:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1870,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "2974:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1868,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1874,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:13"
													},
													{
														"assignments": [
															1876
														],
														"declarations": [
															{
																"constant": false,
																"id": 1876,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 1961,
																"src": "3261:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1875,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1877,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:13"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:13",
															"nodeType": "YulBlock",
															"src": "3301:291:13",
															"statements": [
																{
																	"nativeSrc": "3370:38:13",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:13"
																		},
																		"nativeSrc": "3383:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:13",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:13"
																				},
																				"nativeSrc": "3510:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:13"
																		},
																		"nativeSrc": "3499:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:13",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:13"
																		},
																		"nativeSrc": "3557:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1847,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:13",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1856,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1856,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1876,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:13",
																"valueSize": 1
															},
															{
																"declaration": 1876,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 1876,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:13",
																"valueSize": 1
															},
															{
																"declaration": 1843,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:13",
																"valueSize": 1
															}
														],
														"id": 1878,
														"nodeType": "InlineAssembly",
														"src": "3292:300:13"
													},
													{
														"assignments": [
															1880
														],
														"declarations": [
															{
																"constant": false,
																"id": 1880,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 1961,
																"src": "3899:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1879,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1888,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1881,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "3914:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:13",
																			"subExpression": {
																				"id": 1882,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "3930:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1886,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:13"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:13",
															"nodeType": "YulBlock",
															"src": "3969:362:13",
															"statements": [
																{
																	"nativeSrc": "4034:37:13",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:13"
																		},
																		"nativeSrc": "4049:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:13",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:13"
																		},
																		"nativeSrc": "4147:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:13",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:13",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:13"
																						},
																						"nativeSrc": "4294:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:13"
																				},
																				"nativeSrc": "4290:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:13"
																		},
																		"nativeSrc": "4286:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1847,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:13",
																"valueSize": 1
															},
															{
																"declaration": 1847,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:13",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1853,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1880,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1880,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1880,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1880,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1880,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:13",
																"valueSize": 1
															}
														],
														"id": 1889,
														"nodeType": "InlineAssembly",
														"src": "3960:371:13"
													},
													{
														"expression": {
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1890,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "4397:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1891,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "4406:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1892,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1880,
																	"src": "4414:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1895,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:13"
													},
													{
														"assignments": [
															1897
														],
														"declarations": [
															{
																"constant": false,
																"id": 1897,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 1961,
																"src": "4736:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1896,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1904,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1899,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "4759:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1901,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:13"
													},
													{
														"expression": {
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1905,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "4992:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1907,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5007:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1908,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "5021:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1912,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:13"
													},
													{
														"expression": {
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1913,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "5061:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1915,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5076:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1916,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "5090:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1920,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:13"
													},
													{
														"expression": {
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1921,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "5131:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1923,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5146:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1924,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "5160:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1928,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:13"
													},
													{
														"expression": {
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1929,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "5201:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1931,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5216:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1932,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "5230:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1936,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:13"
													},
													{
														"expression": {
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1937,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "5271:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5286:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1940,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "5300:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1944,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:13"
													},
													{
														"expression": {
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1945,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "5342:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1947,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "5357:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1948,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "5371:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1952,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:13"
													},
													{
														"expression": {
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1953,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "5812:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1954,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "5821:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1955,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "5829:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1958,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:13"
													},
													{
														"expression": {
															"id": 1959,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "5857:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1851,
														"id": 1960,
														"nodeType": "Return",
														"src": "5850:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "1683:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "1694:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "1705:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:13"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "1749:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:13"
									},
									"scope": 2615,
									"src": "1667:4213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "6122:189:13",
										"statements": [
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "6132:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1985,
												"initialValue": {
													"arguments": [
														{
															"id": 1981,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "6156:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1982,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "6159:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1983,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "6162:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1980,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1963,
															2007
														],
														"referencedDeclaration": 1963,
														"src": "6149:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1756",
															"typeString": "enum Math.Rounding"
														},
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1986,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "6188:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1756",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1987,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "6200:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1756_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:13",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1754,
															"src": "6200:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1756",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1991,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "6222:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1992,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1968,
																	"src": "6225:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1993,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1970,
																	"src": "6228:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1990,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "IfStatement",
												"src": "6184:98:13",
												"trueBody": {
													"id": 2002,
													"nodeType": "Block",
													"src": "6246:36:13",
													"statements": [
														{
															"expression": {
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1998,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "6260:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2001,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2004,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1979,
													"src": "6298:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1977,
												"id": 2005,
												"nodeType": "Return",
												"src": "6291:13:13"
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "6028:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "6039:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "6050:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "6071:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1756",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1971,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1756,
														"src": "6071:8:13"
													},
													"referencedDeclaration": 1756,
													"src": "6071:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1756",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:13"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "6113:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:13"
									},
									"scope": 2615,
									"src": "6012:299:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "6587:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2015,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "6601:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2021,
												"nodeType": "IfStatement",
												"src": "6597:45:13",
												"trueBody": {
													"id": 2020,
													"nodeType": "Block",
													"src": "6609:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2014,
															"id": 2019,
															"nodeType": "Return",
															"src": "6623:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2023
												],
												"declarations": [
													{
														"constant": false,
														"id": 2023,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2118,
														"src": "7321:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2022,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2032,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2026,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2010,
																			"src": "7349:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2025,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2287,
																			2323
																		],
																		"referencedDeclaration": 2287,
																		"src": "7344:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2030,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:13"
											},
											{
												"id": 2117,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:13",
												"statements": [
													{
														"expression": {
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2033,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "7782:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2034,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2023,
																				"src": "7792:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2035,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "7801:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2036,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2023,
																					"src": "7805:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2039,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2043,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:13"
													},
													{
														"expression": {
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2044,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "7831:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2045,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2023,
																				"src": "7841:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2046,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "7850:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2047,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2023,
																					"src": "7854:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2050,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2054,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:13"
													},
													{
														"expression": {
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2055,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "7880:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2056,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2023,
																				"src": "7890:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2057,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "7899:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2058,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2023,
																					"src": "7903:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2061,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2065,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:13"
													},
													{
														"expression": {
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2066,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "7929:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2067,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2023,
																				"src": "7939:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2068,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "7948:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2069,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2023,
																					"src": "7952:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2072,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2076,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:13"
													},
													{
														"expression": {
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "7978:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2078,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2023,
																				"src": "7988:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2079,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "7997:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2080,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2023,
																					"src": "8001:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2083,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2087,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:13"
													},
													{
														"expression": {
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2088,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "8027:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2089,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2023,
																				"src": "8037:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2090,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "8046:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2091,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2023,
																					"src": "8050:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2098,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:13"
													},
													{
														"expression": {
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2099,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "8076:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2100,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2023,
																				"src": "8086:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2101,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "8095:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2102,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2023,
																					"src": "8099:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2105,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2109,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2111,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "8136:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2112,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "8144:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2113,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "8148:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2110,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1792,
																"src": "8132:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2014,
														"id": 2116,
														"nodeType": "Return",
														"src": "8125:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "6544:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:13"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "6578:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:13"
									},
									"scope": 2615,
									"src": "6530:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "8348:161:13",
										"statements": [
											{
												"id": 2153,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:13",
												"statements": [
													{
														"assignments": [
															2131
														],
														"declarations": [
															{
																"constant": false,
																"id": 2131,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2153,
																"src": "8382:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2130,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2135,
														"initialValue": {
															"arguments": [
																{
																	"id": 2133,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "8404:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2132,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2119,
																	2155
																],
																"referencedDeclaration": 2119,
																"src": "8399:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2136,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2131,
																"src": "8427:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1756",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2137,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2125,
																					"src": "8437:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2138,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1756,
																						"src": "8449:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1756_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1754,
																					"src": "8449:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2141,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2131,
																						"src": "8464:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2142,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2131,
																						"src": "8473:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2144,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2122,
																					"src": "8482:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2129,
														"id": 2152,
														"nodeType": "Return",
														"src": "8420:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "8286:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "8297:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1756",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2123,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1756,
														"src": "8297:8:13"
													},
													"referencedDeclaration": 1756,
													"src": "8297:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1756",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:13"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "8339:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:13"
									},
									"scope": 2615,
									"src": "8272:237:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "8694:922:13",
										"statements": [
											{
												"assignments": [
													2164
												],
												"declarations": [
													{
														"constant": false,
														"id": 2164,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2286,
														"src": "8704:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2166,
												"initialValue": {
													"hexValue": "30",
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:13"
											},
											{
												"id": 2283,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "8760:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2181,
														"nodeType": "IfStatement",
														"src": "8756:99:13",
														"trueBody": {
															"id": 2180,
															"nodeType": "Block",
															"src": "8778:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2172,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "8796:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2175,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:13"
																},
																{
																	"expression": {
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2176,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "8827:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2179,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2182,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "8872:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2196,
														"nodeType": "IfStatement",
														"src": "8868:96:13",
														"trueBody": {
															"id": 2195,
															"nodeType": "Block",
															"src": "8889:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2187,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "8907:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2190,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:13"
																},
																{
																	"expression": {
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "8937:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2194,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "8981:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2211,
														"nodeType": "IfStatement",
														"src": "8977:96:13",
														"trueBody": {
															"id": 2210,
															"nodeType": "Block",
															"src": "8998:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "9016:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2205,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:13"
																},
																{
																	"expression": {
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2206,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "9046:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2209,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "9090:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2226,
														"nodeType": "IfStatement",
														"src": "9086:96:13",
														"trueBody": {
															"id": 2225,
															"nodeType": "Block",
															"src": "9107:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2217,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "9125:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2220,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:13"
																},
																{
																	"expression": {
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2221,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "9155:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2224,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2227,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "9199:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2241,
														"nodeType": "IfStatement",
														"src": "9195:93:13",
														"trueBody": {
															"id": 2240,
															"nodeType": "Block",
															"src": "9215:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2232,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "9233:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2235,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:13"
																},
																{
																	"expression": {
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2236,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "9262:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2239,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "9305:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2256,
														"nodeType": "IfStatement",
														"src": "9301:93:13",
														"trueBody": {
															"id": 2255,
															"nodeType": "Block",
															"src": "9321:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2247,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "9339:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2250,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:13"
																},
																{
																	"expression": {
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2251,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "9368:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2254,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "9411:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2271,
														"nodeType": "IfStatement",
														"src": "9407:93:13",
														"trueBody": {
															"id": 2270,
															"nodeType": "Block",
															"src": "9427:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2262,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "9445:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2265,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:13"
																},
																{
																	"expression": {
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2266,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "9474:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2269,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "9517:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2282,
														"nodeType": "IfStatement",
														"src": "9513:64:13",
														"trueBody": {
															"id": 2281,
															"nodeType": "Block",
															"src": "9533:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2277,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2164,
																			"src": "9551:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2280,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2284,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2164,
													"src": "9603:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2162,
												"id": 2285,
												"nodeType": "Return",
												"src": "9596:13:13"
											}
										]
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:13",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "8647:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:13"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "8685:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:13"
									},
									"scope": 2615,
									"src": "8633:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "9849:165:13",
										"statements": [
											{
												"id": 2321,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:13",
												"statements": [
													{
														"assignments": [
															2299
														],
														"declarations": [
															{
																"constant": false,
																"id": 2299,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "9883:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2298,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2303,
														"initialValue": {
															"arguments": [
																{
																	"id": 2301,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "9905:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2300,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2287,
																	2323
																],
																"referencedDeclaration": 2287,
																"src": "9900:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2304,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "9932:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1756",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2305,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "9942:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2306,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1756,
																						"src": "9954:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1756_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1754,
																					"src": "9954:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2311,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2309,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2310,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2299,
																						"src": "9974:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2312,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2290,
																					"src": "9983:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2297,
														"id": 2320,
														"nodeType": "Return",
														"src": "9925:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "9783:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "9798:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1756",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2291,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1756,
														"src": "9798:8:13"
													},
													"referencedDeclaration": 1756,
													"src": "9798:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1756",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:13"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "9840:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:13"
									},
									"scope": 2615,
									"src": "9769:245:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2451,
										"nodeType": "Block",
										"src": "10201:854:13",
										"statements": [
											{
												"assignments": [
													2332
												],
												"declarations": [
													{
														"constant": false,
														"id": 2332,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2451,
														"src": "10211:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2334,
												"initialValue": {
													"hexValue": "30",
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:13"
											},
											{
												"id": 2448,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2335,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "10267:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2351,
														"nodeType": "IfStatement",
														"src": "10263:103:13",
														"trueBody": {
															"id": 2350,
															"nodeType": "Block",
															"src": "10286:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2340,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "10304:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2345,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:13"
																},
																{
																	"expression": {
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2346,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "10339:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2349,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2352,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "10383:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2368,
														"nodeType": "IfStatement",
														"src": "10379:103:13",
														"trueBody": {
															"id": 2367,
															"nodeType": "Block",
															"src": "10402:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2357,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "10420:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2362,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:13"
																},
																{
																	"expression": {
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2363,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "10455:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2366,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2369,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "10499:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2385,
														"nodeType": "IfStatement",
														"src": "10495:103:13",
														"trueBody": {
															"id": 2384,
															"nodeType": "Block",
															"src": "10518:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "10536:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:13"
																},
																{
																	"expression": {
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2380,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "10571:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2383,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2386,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "10615:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2402,
														"nodeType": "IfStatement",
														"src": "10611:100:13",
														"trueBody": {
															"id": 2401,
															"nodeType": "Block",
															"src": "10633:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "10651:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:13"
																},
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "10685:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "10728:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "10724:100:13",
														"trueBody": {
															"id": 2418,
															"nodeType": "Block",
															"src": "10746:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "10764:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2413,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:13"
																},
																{
																	"expression": {
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "10798:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2417,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2420,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "10841:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2436,
														"nodeType": "IfStatement",
														"src": "10837:100:13",
														"trueBody": {
															"id": 2435,
															"nodeType": "Block",
															"src": "10859:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "10877:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:13"
																},
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "10911:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "10954:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2447,
														"nodeType": "IfStatement",
														"src": "10950:66:13",
														"trueBody": {
															"id": 2446,
															"nodeType": "Block",
															"src": "10972:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "10990:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2445,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2449,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2332,
													"src": "11042:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2330,
												"id": 2450,
												"nodeType": "Return",
												"src": "11035:13:13"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:13",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "10154:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:13"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "10192:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:13"
									},
									"scope": 2615,
									"src": "10139:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2487,
										"nodeType": "Block",
										"src": "11290:167:13",
										"statements": [
											{
												"id": 2486,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:13",
												"statements": [
													{
														"assignments": [
															2464
														],
														"declarations": [
															{
																"constant": false,
																"id": 2464,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2486,
																"src": "11324:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2463,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2468,
														"initialValue": {
															"arguments": [
																{
																	"id": 2466,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2455,
																	"src": "11347:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2465,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2452,
																	2488
																],
																"referencedDeclaration": 2452,
																"src": "11341:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2469,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2464,
																"src": "11374:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1756",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2470,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2458,
																					"src": "11384:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2471,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1756,
																						"src": "11396:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1756_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2472,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1754,
																					"src": "11396:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2474,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2475,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2464,
																						"src": "11417:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2477,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2455,
																					"src": "11426:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2483,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2462,
														"id": 2485,
														"nodeType": "Return",
														"src": "11367:73:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2453,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "11224:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "11239:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1756",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2456,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1756,
														"src": "11239:8:13"
													},
													"referencedDeclaration": 1756,
													"src": "11239:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1756",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:13"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "11281:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:13"
									},
									"scope": 2615,
									"src": "11209:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "11771:600:13",
										"statements": [
											{
												"assignments": [
													2497
												],
												"declarations": [
													{
														"constant": false,
														"id": 2497,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2574,
														"src": "11781:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2496,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2499,
												"initialValue": {
													"hexValue": "30",
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:13"
											},
											{
												"id": 2571,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2500,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "11837:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2514,
														"nodeType": "IfStatement",
														"src": "11833:98:13",
														"trueBody": {
															"id": 2513,
															"nodeType": "Block",
															"src": "11855:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2505,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "11873:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:13"
																},
																{
																	"expression": {
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2509,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "11904:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2512,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2515,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "11948:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2529,
														"nodeType": "IfStatement",
														"src": "11944:95:13",
														"trueBody": {
															"id": 2528,
															"nodeType": "Block",
															"src": "11965:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2520,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "11983:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2523,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:13"
																},
																{
																	"expression": {
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2524,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "12013:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2527,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2530,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "12056:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2544,
														"nodeType": "IfStatement",
														"src": "12052:95:13",
														"trueBody": {
															"id": 2543,
															"nodeType": "Block",
															"src": "12073:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "12091:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2538,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:13"
																},
																{
																	"expression": {
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "12121:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2542,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "12164:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2559,
														"nodeType": "IfStatement",
														"src": "12160:95:13",
														"trueBody": {
															"id": 2558,
															"nodeType": "Block",
															"src": "12181:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "12199:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:13"
																},
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "12229:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "12272:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2570,
														"nodeType": "IfStatement",
														"src": "12268:64:13",
														"trueBody": {
															"id": 2569,
															"nodeType": "Block",
															"src": "12288:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2565,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "12306:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2568,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2572,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2497,
													"src": "12358:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2495,
												"id": 2573,
												"nodeType": "Return",
												"src": "12351:13:13"
											}
										]
									},
									"documentation": {
										"id": 2489,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:13",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "11724:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:13"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "11762:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:13"
									},
									"scope": 2615,
									"src": "11708:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "12608:174:13",
										"statements": [
											{
												"id": 2612,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:13",
												"statements": [
													{
														"assignments": [
															2587
														],
														"declarations": [
															{
																"constant": false,
																"id": 2587,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2612,
																"src": "12642:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2586,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2591,
														"initialValue": {
															"arguments": [
																{
																	"id": 2589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "12666:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2588,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2575,
																	2614
																],
																"referencedDeclaration": 2575,
																"src": "12659:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2592,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2587,
																"src": "12693:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1756",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2593,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2581,
																					"src": "12703:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2594,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1756,
																						"src": "12715:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1756_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1754,
																					"src": "12715:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1756",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2602,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2597,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2600,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2598,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2587,
																									"src": "12736:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2599,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2601,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2603,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2578,
																					"src": "12751:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2609,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2585,
														"id": 2611,
														"nodeType": "Return",
														"src": "12686:79:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2576,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "12542:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "12557:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1756",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2580,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2579,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1756,
														"src": "12557:8:13"
													},
													"referencedDeclaration": 1756,
													"src": "12557:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1756",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:13"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "12599:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:13"
									},
									"scope": 2615,
									"src": "12526:256:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2616,
							"src": "202:12582:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2720
						]
					},
					"id": 2721,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2618,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2720,
							"linearizedBaseContracts": [
								2720
							],
							"name": "SignedMath",
							"nameLocation": "223:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "375:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2628,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "392:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2629,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "396:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2632,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2623,
														"src": "404:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:14",
													"trueExpression": {
														"id": 2631,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2621,
														"src": "400:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2627,
												"id": 2634,
												"nodeType": "Return",
												"src": "385:20:14"
											}
										]
									},
									"documentation": {
										"id": 2619,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "324:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2620,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "334:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2622,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:14"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "367:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2625,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:14"
									},
									"scope": 2720,
									"src": "311:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "554:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2646,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "571:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2647,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2641,
															"src": "575:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2650,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2641,
														"src": "583:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:14",
													"trueExpression": {
														"id": 2649,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "579:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2645,
												"id": 2652,
												"nodeType": "Return",
												"src": "564:20:14"
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "503:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2638,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "513:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2640,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:14"
									},
									"returnParameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "546:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2643,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:14"
									},
									"scope": 2720,
									"src": "490:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "796:162:14",
										"statements": [
											{
												"assignments": [
													2665
												],
												"declarations": [
													{
														"constant": false,
														"id": 2665,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2697,
														"src": "858:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2664,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2678,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2666,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "870:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2667,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2659,
																	"src": "874:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2669,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2670,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2657,
																				"src": "881:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2671,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2659,
																				"src": "885:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2673,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2676,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2679,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2665,
														"src": "910:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2684,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2665,
																						"src": "930:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2683,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2682,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2680,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2689,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2657,
																				"src": "944:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2690,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2659,
																				"src": "948:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2692,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2694,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2663,
												"id": 2696,
												"nodeType": "Return",
												"src": "903:48:14"
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "745:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2656,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "755:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2658,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:14"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "788:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2661,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:14"
									},
									"scope": 2720,
									"src": "728:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2718,
										"nodeType": "Block",
										"src": "1102:158:14",
										"statements": [
											{
												"id": 2717,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2708,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "1227:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:14",
																		"subExpression": {
																			"id": 2712,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "1241:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:14",
																	"trueExpression": {
																		"id": 2711,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2701,
																		"src": "1236:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2706,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2705,
														"id": 2716,
														"nodeType": "Return",
														"src": "1212:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "1060:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2700,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:14"
									},
									"returnParameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "1093:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:14"
									},
									"scope": 2720,
									"src": "1047:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2721,
							"src": "215:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:14"
				},
				"id": 14
			},
			"GemNFT/ERC721Dynmic.sol": {
				"ast": {
					"absolutePath": "GemNFT/ERC721Dynmic.sol",
					"exportedSymbols": {
						"DynamicNFT": [
							2776
						],
						"ERC721": [
							1173
						],
						"ERC721URIStorage": [
							1434
						],
						"IERC165": [
							1749
						],
						"IERC4906": [
							24
						],
						"Strings": [
							1713
						]
					},
					"id": 2777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2722,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2723,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2777,
							"sourceUnit": 1435,
							"src": "58:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2724,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"161:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1434,
										"src": "161:16:15"
									},
									"id": 2725,
									"nodeType": "InheritanceSpecifier",
									"src": "161:16:15"
								}
							],
							"canonicalName": "DynamicNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2776,
							"linearizedBaseContracts": [
								2776,
								1434,
								1173,
								117,
								1462,
								24,
								1290,
								1737,
								1749,
								1484
							],
							"name": "DynamicNFT",
							"nameLocation": "147:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2732,
									"mutability": "mutable",
									"name": "IpfsUri",
									"nameLocation": "201:7:15",
									"nodeType": "VariableDeclaration",
									"scope": 2776,
									"src": "192:185:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
										"typeString": "string[]"
									},
									"typeName": {
										"baseType": {
											"id": 2726,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "192:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"id": 2727,
										"nodeType": "ArrayTypeName",
										"src": "192:8:15",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
											"typeString": "string[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "68747470733a2f2f6170692e6e706f696e742e696f2f3233363761353461333863373962626539613935",
												"id": 2728,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "221:44:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_abbb6250c0c0ef97a0d5865f4d95250e6a163c7dd92f6c2f933aa2d824a5e939",
													"typeString": "literal_string \"https://api.npoint.io/2367a54a38c79bbe9a95\""
												},
												"value": "https://api.npoint.io/2367a54a38c79bbe9a95"
											},
											{
												"hexValue": "68747470733a2f2f6170692e6e706f696e742e696f2f3662646361306231616239633535303934313130",
												"id": 2729,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "275:44:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b87b14083892e557ac644ed6f47814fe3071fe6952c548d24de97e8cf93cb194",
													"typeString": "literal_string \"https://api.npoint.io/6bdca0b1ab9c55094110\""
												},
												"value": "https://api.npoint.io/6bdca0b1ab9c55094110"
											},
											{
												"hexValue": "68747470733a2f2f6170692e6e706f696e742e696f2f3233363761353461333863373962626539613935",
												"id": 2730,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "329:44:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_abbb6250c0c0ef97a0d5865f4d95250e6a163c7dd92f6c2f933aa2d824a5e939",
													"typeString": "literal_string \"https://api.npoint.io/2367a54a38c79bbe9a95\""
												},
												"value": "https://api.npoint.io/2367a54a38c79bbe9a95"
											}
										],
										"id": 2731,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "211:166:15",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_memory_ptr_$3_memory_ptr",
											"typeString": "string memory[3] memory"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "426:16:15",
										"statements": []
									},
									"id": 2740,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "47656d204e4654",
													"id": 2735,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "405:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a1c3b73962c2e212c33a8e8c421f4ce9a28c903cb3bf956b9b30465adfe43ff2",
														"typeString": "literal_string \"Gem NFT\""
													},
													"value": "Gem NFT"
												},
												{
													"hexValue": "47454d4e4654",
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "416:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ef04e2b301a960eb32cf856eb99eca3cc174c43b7e4fc08efdfc000d2794dfaa",
														"typeString": "literal_string \"GEMNFT\""
													},
													"value": "GEMNFT"
												}
											],
											"id": 2737,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2734,
												"name": "ERC721",
												"nameLocations": [
													"398:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1173,
												"src": "398:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "398:27:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:15"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:0:15"
									},
									"scope": 2776,
									"src": "384:58:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2759,
										"nodeType": "Block",
										"src": "521:75:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2750,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "541:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2751,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "545:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2749,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															795,
															821
														],
														"referencedDeclaration": 795,
														"src": "531:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "531:22:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2755,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "576:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2756,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "585:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2754,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "563:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "563:26:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "563:26:15"
											}
										]
									},
									"functionSelector": "cd279c7c",
									"id": 2760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "457:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "474:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "466:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "486:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "478:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "509:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "495:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "495:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:48:15"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "521:0:15"
									},
									"scope": 2776,
									"src": "448:148:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "650:45:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2768,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "673:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 2769,
																"name": "IpfsUri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "677:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																	"typeString": "string storage ref[] storage ref"
																}
															},
															"id": 2771,
															"indexExpression": {
																"id": 2770,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2764,
																"src": "685:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "677:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 2767,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "660:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "660:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2773,
												"nodeType": "ExpressionStatement",
												"src": "660:28:15"
											}
										]
									},
									"functionSelector": "870b1e89",
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeUri",
									"nameLocation": "617:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "627:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2761,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "627:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "640:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "635:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "635:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:16:15"
									},
									"returnParameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "650:0:15"
									},
									"scope": 2776,
									"src": "608:87:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2777,
							"src": "138:559:15",
							"usedErrors": [
								75,
								80,
								89,
								94,
								99,
								106,
								111,
								116
							],
							"usedEvents": [
								16,
								23,
								1189,
								1198,
								1207
							]
						}
					],
					"src": "32:665:15"
				},
				"id": 15
			}
		}
	}
}