{
	"id": "c4ece3392ca99ff29429a9f6514b6c00",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"ICO/IcoOptimized.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\nimport \"./Erc20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract ICO is Ownable, ReentrancyGuard {\n\n    // Chainlink Price Feeds\n    AggregatorV3Interface public priceFeedBNB;\n    AggregatorV3Interface public priceFeedUSDT;\n    AggregatorV3Interface public priceFeedUSDC;\n\n\n    struct Sale {\n        uint256 startTime;\n        uint256 endTime;\n        uint256 tokenPriceUSD;\n        uint256 tokensSold;\n        bool isFinalized;\n    }\n\n    enum PaymentMethod {\n        BNB,\n        USDT,\n        USDC\n    }\n\n    // State variables\n    icotoken public token;\n    uint256 public softCapInUSD;\n    uint256 public hardCapInUSD;\n    uint256 public saleCount;\n    uint256 public totalFundsRaisedUSD;\n    uint256 public totalTokensSold;\n    uint256 constant PRECISION_10 = 1e10;\n    uint256 constant PRECISION_18 = 1e18;\n    bool public isICOFinalized = false;\n    bool public isTokensAirdropped = false;\n    // bool public allowImmediateFinalization = false;\n    address[] public investors;\n    address public usdt;\n    address public usdc;\n\n    // Mappings\n    mapping(uint256 => Sale) public sales;\n    mapping(address => uint256) public contributionsInUSD;\n    mapping(address => uint256) public tokensBoughtByInvestor;\n    mapping(address => AggregatorV3Interface) private priceFeeds;\n    mapping(address => PaymentMethod) public paymentMethodForInvestor; \n    mapping(address => mapping(PaymentMethod => uint256)) public investorPayments;\n\n    // Events\n    event ICOFinalized(uint256 indexed totalTokensSold);\n    event ImmediateFinalization(uint256 indexed saleId);\n    event RefundInitiated(address indexed investor, uint256 amount , PaymentMethod paymentMethod) ;\n    event TokenAirdropped(address indexed investor, uint256 airdroppedAmount);\n    event TokensPurchased(\n        address indexed buyer,\n        uint256 indexed saleId,\n        uint256 tokenPurchaseAmount,\n        uint256 tokenPriceUSD,\n        uint256 amountPaid,\n        PaymentMethod paymentMethod\n    );\n    event NewSaleCreated(\n        uint256 indexed saleId,\n        uint256 startTime,\n        uint256 endTime,\n        uint256 tokenPriceUSD\n    );\n\n    constructor(\n        icotoken _token,\n        address _usdt,\n        address _usdc,\n        uint256 _softCapInUSD,\n        uint256 _hardCapInUSD,\n        address _priceFeedBNB,\n        address _priceFeedUSDT,\n        address _priceFeedUSDC\n    ) Ownable(msg.sender) {\n        token = _token;\n        softCapInUSD = _softCapInUSD;\n        hardCapInUSD = _hardCapInUSD;\n        usdt = _usdt;\n        usdc = _usdc;\n        priceFeedBNB = AggregatorV3Interface(_priceFeedBNB);\n        priceFeedUSDT = AggregatorV3Interface(_priceFeedUSDT);\n        priceFeedUSDC = AggregatorV3Interface(_priceFeedUSDC);\n    }\n\n    modifier icoNotFinalized() {\n        require(!isICOFinalized, \"ICO already finalized\");\n        _;\n    }\n\n    function _getPriceFeed(PaymentMethod paymentMethod)\n        public\n        view\n        returns (int256)\n    {\n        if (paymentMethod == PaymentMethod.BNB) {\n            (, int256 price, , , ) = priceFeedBNB.latestRoundData();\n            return price;\n        }\n\n        if (paymentMethod == PaymentMethod.USDT) {\n            (, int256 price, , , ) = priceFeedUSDT.latestRoundData();\n            return price;\n        }\n\n        if (paymentMethod == PaymentMethod.USDC) {\n            (, int256 price, , , ) = priceFeedUSDC.latestRoundData();\n            return price;\n        }\n        revert(\"Unsupported payment method\");\n    }\n\n    //Constructor Data\n    // 100000000000000000000\n    // 200000000000000000000\n    // 0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526\n    // 0xEca2605f0BCF2BA5966372C99837b1F182d3D620\n    // 0x90c069C4538adAc136E051052E14c1cD799C41B7\n\n    function createSale(\n        uint256 _startTime,\n        uint256 _endTime,\n        uint256 _tokenPriceUSD\n    ) external onlyOwner icoNotFinalized {\n        require(\n            _startTime > block.timestamp,\n            \"Start time must be greater than current time\"\n        );\n        require(\n            _endTime > _startTime,\n            \"End time must be greater than start time\"\n        );\n        require(\n            _startTime > getLatestSaleEndTime(),\n            \"New sale must start after the last sale ends\"\n        );\n\n        saleCount++;\n        sales[saleCount] = Sale({\n            startTime: _startTime,\n            endTime: _endTime,\n            tokenPriceUSD: _tokenPriceUSD,\n            tokensSold: 0,\n            isFinalized: false\n        });\n        emit NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD);\n    }\n\n    function calculateTokenAmount(\n        PaymentMethod paymentMethod,\n        uint256 paymentAmount   \n    ) public view returns (uint256) {\n        int256 price = _getPriceFeed(paymentMethod)*int256(PRECISION_10);\n        require(price > 0, \"Invalid price feed\");\n\n        uint256 currentSaleId = getCurrentSaleId();\n        Sale storage sale = sales[currentSaleId];\n\n        uint256 tokenPriceInUSD = sale.tokenPriceUSD; // Token price in (18 decimals)\n\n        uint256 paymentAmountInUSD;\n\n        if (paymentMethod == PaymentMethod.BNB) {\n            paymentAmountInUSD = (uint256(price) * paymentAmount) / uint256(PRECISION_18);  \n        } else if (paymentMethod == PaymentMethod.USDC || paymentMethod == PaymentMethod.USDT) {\n        uint256 stablecoinDecimals = 6; \n        uint256 normalizedAmount = paymentAmount * (10**(18 - stablecoinDecimals)); \n        paymentAmountInUSD = (uint256(price) * normalizedAmount) / uint256(PRECISION_18); \n        } else {\n        revert(\"Unsupported payment method\");\n        }\n\n        uint256 tokenAmount =(paymentAmountInUSD * uint256(PRECISION_18))/ tokenPriceInUSD;\n        return tokenAmount;\n    }\n\n\nfunction calculatePaymentAmount(PaymentMethod paymentMethod, uint256 tokenAmount) public view returns (uint256) {\n    require(tokenAmount > 0, \"Token amount must be greater than zero\");\n\n    int256 price = _getPriceFeed(paymentMethod) * int256(PRECISION_10); // Price is now 18 decimals\n    require(price > 0, \"Invalid price feed\");\n\n    uint256 currentSaleId = getCurrentSaleId();\n    require(currentSaleId != 0, \"No active sale\");\n    uint256 usdtBalance = IERC20(usdt).balanceOf(address(this));\n\n    Sale storage sale = sales[currentSaleId];\n    uint256 tokenPriceInUSD = sale.tokenPriceUSD; // Assumes token price is in 18 decimals\n    uint256 totalPaymentInUSD = (tokenAmount * tokenPriceInUSD) / PRECISION_18;\n\n    uint256 paymentAmount;\n    if (paymentMethod == PaymentMethod.BNB) {\n        paymentAmount = (totalPaymentInUSD * PRECISION_18) / uint256(price);\n    } else if (paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC) {\n        paymentAmount = (totalPaymentInUSD * (10 ** 6)) / uint256(price);\n    } else {\n        revert(\"Unsupported payment method\");\n    }\n\n    return paymentAmount;\n}\n\n\n    function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount) external payable icoNotFinalized {\n    require(msg.sender != owner(), \"Owner cannot buy tokens\");\n    require(saleCount != 0, \"No sale\");\n    require(sales[saleCount].isFinalized, \"Sale already finalized\");\n    uint256 tokenAmount;\n    if (paymentMethod == PaymentMethod.BNB ) {\n        // Handle native currency payments (BNB)\n        require(msg.value > 0, \"Send a valid BNB amount\");\n        tokenAmount = calculateTokenAmount(paymentMethod, msg.value);\n        investorPayments[msg.sender][paymentMethod] += msg.value;\n    } else if (\n        paymentMethod == PaymentMethod.USDT ||\n        paymentMethod == PaymentMethod.USDC\n    ) {\n        // Handle stablecoin payments\n        require(paymentAmount > 0, \"Enter a valid stablecoin amount\");\n        IERC20 stablecoin = \n        paymentMethod == PaymentMethod.USDT ? IERC20(usdt): IERC20(usdc);\n        require(stablecoin.transferFrom(msg.sender,address(this),paymentAmount),\"Stablecoin transfer failed\");\n        // Calculate token amount for stablecoin payment\n        tokenAmount = calculateTokenAmount(paymentMethod, paymentAmount);\n        investorPayments[msg.sender][paymentMethod] += paymentAmount;\n    } else {\n        revert(\"Unsupported payment method\");\n    }\n    require(tokenAmount > 0, \"Invalid token amount\");\n    // Ensure the purchase does not exceed the hard cap\n    uint256 totalCostInUSD = tokenAmount * sales[saleCount].tokenPriceUSD / PRECISION_18; \n    require(\n        totalFundsRaisedUSD + totalCostInUSD <= hardCapInUSD,\n        \"Hard cap reached\"\n    );\n\n    contributionsInUSD[msg.sender] += totalCostInUSD;\n    totalFundsRaisedUSD += totalCostInUSD;\n    sales[saleCount].tokensSold += tokenAmount;\n    totalTokensSold += tokenAmount;\n\n    if (tokensBoughtByInvestor[msg.sender] == 0) {\n        investors.push(msg.sender);\n    }\n    tokensBoughtByInvestor[msg.sender] += tokenAmount;\n    paymentMethodForInvestor[msg.sender] = paymentMethod;\n\n    emit TokensPurchased(\n        msg.sender,\n        saleCount,\n        tokenAmount,\n        sales[saleCount].tokenPriceUSD,\n        paymentAmount,\n        paymentMethod\n    );\n}\n\n    function finalizeICO() public nonReentrant onlyOwner icoNotFinalized {\n        require(\n            totalFundsRaisedUSD >= softCapInUSD,\n            \"Cannot finalize: Soft cap not reached or sale is ongoing\"\n        );\n\n    isICOFinalized = true;\n        _transferFundsToOwner();\n        emit ICOFinalized(totalTokensSold);\n\n}\n\n    function _transferFundsToOwner() private {\n    uint256 usdtBalance = IERC20(usdt).balanceOf(address(this));\n    uint256 nativeBalance = address(this).balance;\n    uint256 usdcBalance = IERC20(usdc).balanceOf(address(this));\n    require(nativeBalance >0 && usdtBalance>0 && usdcBalance > 0 ,\"balances must not be Zero\");\n    \n    \n        (bool success, ) = payable(owner()).call{value: nativeBalance}(\"\");\n        require(success, \"Transfer failed\");\n    \n\n   \n    \n   \n        require(IERC20(usdt).transfer(owner(), usdtBalance), \"USDT transfer failed\");\n    \n\n    \n    \n        require(IERC20(usdc).transfer(owner(), usdcBalance), \"USDC transfer failed\");\n    \n}\n\n    function airdropTokens() external nonReentrant onlyOwner icoNotFinalized {\n    require(!isTokensAirdropped, \"Airdrop already completed\");\n    \n    uint256 investorLength = investors.length;\n    for (uint256 i = 0; i < investorLength; i++) {\n        address investor = investors[i];\n        uint256 tokensBought = tokensBoughtByInvestor[investor];\n\n        if (tokensBought > 0) {\n            // Transfer the calculated token amount to the investor\n            bool success = token.transferFrom(owner(), investor, tokensBought);\n            require(success, \"Token transfer failed\");\n            \n            // Emit the token airdrop event\n            emit TokenAirdropped(investor, tokensBought);\n        }\n    }\n\n    isTokensAirdropped = true;\n}\n\n    function initiateRefund() external nonReentrant onlyOwner icoNotFinalized  {\n    require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\");\n    require(totalFundsRaisedUSD < softCapInUSD , \"Soft cap reached\");\n\n    uint256 investorLength = investors.length;\n    for (uint256 i = 0; i < investorLength; i++) {\n        address investor = investors[i];\n\n        // Refund contributions for all payment methods\n        for (uint8 j = 0; j < 3; j++) { \n            PaymentMethod paymentMethod = PaymentMethod(j);\n            uint256 amount = investorPayments[investor][paymentMethod];\n\n            if (amount > 0) {\n                investorPayments[investor][paymentMethod] = 0;\n                if (paymentMethod == PaymentMethod.BNB) {\n                    (bool sent, ) = payable(investor).call{value: amount}(\"\");\n                    require(sent, \"BNB refund failed\");\n                } else if (paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC) {\n                    IERC20 stablecoin = paymentMethod == PaymentMethod.USDT\n                        ? IERC20(usdt)\n                        : IERC20(usdc);\n                    require(\n                        stablecoin.transfer(investor, amount),\n                        \"Stablecoin refund failed\"\n                    );\n                } else {\n                    revert(\"Unsupported payment method for refund\");\n                }\n                emit RefundInitiated(investor, amount, paymentMethod);\n            }\n        }\n    }\n    isICOFinalized = true;\n}\n\nreceive() external payable {\n    revert(\"Direct BNB transfers not allowed\");\n}\n\n\n    function getCurrentSaleId() public view returns (uint256) {\n        return saleCount;\n    }\n\n    function getLatestSaleEndTime() internal view returns (uint256) {\n        return sales[saleCount].endTime;\n    }\n\n    function getSaleStartEndTime(uint256 _saleId)\n        public\n        view\n        returns (uint256 _startTime, uint256 _endTime)\n    {\n        Sale memory sale = sales[saleCount];\n        return (sale.startTime, sale.endTime);\n    }\n\n    function getSoftCapReached() public view returns (bool) {\n        return (totalFundsRaisedUSD >= softCapInUSD);\n    }\n\n    function getHardCapReached() public view returns (bool) {\n        return (totalFundsRaisedUSD == hardCapInUSD);\n    }\n\n    function getInvestorCount() public view returns (uint256 investorCount) {\n        investorCount = investors.length;\n        return investorCount;\n    }\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"ICO/Erc20.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    pragma solidity 0.8.26;\n\n    import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n    contract icotoken is ERC20 {\n\n        constructor(string memory name_,string memory symbol_, uint256 totalSupply_) ERC20(name_, symbol_) {\n            _mint(msg.sender, totalSupply_);\n        }\n    }\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 353,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 361,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 365,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 990,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ICO/Erc20.sol": {
				"icotoken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ICO/Erc20.sol\":130:329  contract icotoken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"ICO/Erc20.sol\":168:323  constructor(string memory name_,string memory symbol_, uint256 totalSupply_) ERC20(name_, symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ICO/Erc20.sol\":251:256  name_ */\n  dup3\n    /* \"ICO/Erc20.sol\":258:265  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  tag_7\n    /* \"ICO/Erc20.sol\":251:256  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ICO/Erc20.sol\":281:312  _mint(msg.sender, totalSupply_) */\n  tag_11\n    /* \"ICO/Erc20.sol\":287:297  msg.sender */\n  caller\n    /* \"ICO/Erc20.sol\":299:311  totalSupply_ */\n  dup3\n    /* \"ICO/Erc20.sol\":281:286  _mint */\n  shl(0x20, tag_12)\n    /* \"ICO/Erc20.sol\":281:312  _mint(msg.sender, totalSupply_) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"ICO/Erc20.sol\":168:323  constructor(string memory name_,string memory symbol_, uint256 totalSupply_) ERC20(name_, symbol_) {... */\n  pop\n  pop\n  pop\n    /* \"ICO/Erc20.sol\":130:329  contract icotoken is ERC20 {... */\n  jump(tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4263:4314   */\n  mstore\n    /* \"#utility.yul\":4236:4254   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_19\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_24\n  swap1\n  pop\n  jump\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4772:4804   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4754:4805   */\n  mstore\n    /* \"#utility.yul\":4821:4839   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4814:4848   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4864:4882   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4857:4891   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4727:4745   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_16\n    /* \"#utility.yul\":4552:4897   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n    /* \"#utility.yul\":5048:5073   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5036:5038   */\n  0x20\n    /* \"#utility.yul\":5021:5039   */\n  add\n  swap1\n    /* \"#utility.yul\":4902:5079   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_32:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_33:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_41:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_43\n  tag_32\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_45\n  tag_32\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_46:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_47:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_47)\ntag_49:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1603   */\ntag_3:\n    /* \"#utility.yul\":1093:1099   */\n  0x00\n    /* \"#utility.yul\":1101:1107   */\n  dup1\n    /* \"#utility.yul\":1109:1115   */\n  0x00\n    /* \"#utility.yul\":1162:1164   */\n  0x60\n    /* \"#utility.yul\":1150:1159   */\n  dup5\n    /* \"#utility.yul\":1141:1148   */\n  dup7\n    /* \"#utility.yul\":1137:1160   */\n  sub\n    /* \"#utility.yul\":1133:1165   */\n  slt\n    /* \"#utility.yul\":1130:1182   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1178:1179   */\n  0x00\n    /* \"#utility.yul\":1175:1176   */\n  dup1\n    /* \"#utility.yul\":1168:1180   */\n  revert\n    /* \"#utility.yul\":1130:1182   */\ntag_51:\n    /* \"#utility.yul\":1205:1221   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1233:1263   */\n  dup2\n  gt\n    /* \"#utility.yul\":1230:1280   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1273:1274   */\n  dup1\n    /* \"#utility.yul\":1266:1278   */\n  revert\n    /* \"#utility.yul\":1230:1280   */\ntag_52:\n    /* \"#utility.yul\":1299:1360   */\n  tag_53\n    /* \"#utility.yul\":1352:1359   */\n  dup7\n    /* \"#utility.yul\":1343:1349   */\n  dup3\n    /* \"#utility.yul\":1332:1341   */\n  dup8\n    /* \"#utility.yul\":1328:1350   */\n  add\n    /* \"#utility.yul\":1299:1360   */\n  tag_33\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1406:1408   */\n  0x20\n    /* \"#utility.yul\":1391:1409   */\n  dup7\n  add\n    /* \"#utility.yul\":1385:1410   */\n  mload\n    /* \"#utility.yul\":1289:1360   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":1385:1410   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1422:1454   */\n  dup2\n  gt\n    /* \"#utility.yul\":1419:1471   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1464:1465   */\n  dup1\n    /* \"#utility.yul\":1457:1469   */\n  revert\n    /* \"#utility.yul\":1419:1471   */\ntag_54:\n    /* \"#utility.yul\":1490:1553   */\n  tag_55\n    /* \"#utility.yul\":1545:1552   */\n  dup7\n    /* \"#utility.yul\":1534:1542   */\n  dup3\n    /* \"#utility.yul\":1523:1532   */\n  dup8\n    /* \"#utility.yul\":1519:1543   */\n  add\n    /* \"#utility.yul\":1490:1553   */\n  tag_33\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1480:1553   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1593:1595   */\n  0x40\n    /* \"#utility.yul\":1582:1591   */\n  dup5\n    /* \"#utility.yul\":1578:1596   */\n  add\n    /* \"#utility.yul\":1572:1597   */\n  mload\n    /* \"#utility.yul\":1562:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":985:1603   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1608:1988   */\ntag_34:\n    /* \"#utility.yul\":1687:1688   */\n  0x01\n    /* \"#utility.yul\":1683:1695   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1730:1742   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1751:1812   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1805:1809   */\n  0x7f\n    /* \"#utility.yul\":1797:1803   */\n  dup3\n    /* \"#utility.yul\":1793:1810   */\n  and\n    /* \"#utility.yul\":1783:1810   */\n  swap2\n  pop\n    /* \"#utility.yul\":1751:1812   */\ntag_57:\n    /* \"#utility.yul\":1858:1860   */\n  0x20\n    /* \"#utility.yul\":1850:1856   */\n  dup3\n    /* \"#utility.yul\":1847:1861   */\n  lt\n    /* \"#utility.yul\":1827:1845   */\n  dup2\n    /* \"#utility.yul\":1824:1862   */\n  sub\n    /* \"#utility.yul\":1821:1982   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1904:1914   */\n  0x4e487b71\n    /* \"#utility.yul\":1899:1902   */\n  0xe0\n    /* \"#utility.yul\":1895:1915   */\n  shl\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1916   */\n  mstore\n    /* \"#utility.yul\":1939:1943   */\n  0x22\n    /* \"#utility.yul\":1936:1937   */\n  0x04\n    /* \"#utility.yul\":1929:1944   */\n  mstore\n    /* \"#utility.yul\":1967:1971   */\n  0x24\n    /* \"#utility.yul\":1964:1965   */\n  0x00\n    /* \"#utility.yul\":1957:1972   */\n  revert\n    /* \"#utility.yul\":1821:1982   */\ntag_58:\n  pop\n    /* \"#utility.yul\":1608:1988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2119:2637   */\ntag_36:\n    /* \"#utility.yul\":2221:2223   */\n  0x1f\n    /* \"#utility.yul\":2216:2219   */\n  dup3\n    /* \"#utility.yul\":2213:2224   */\n  gt\n    /* \"#utility.yul\":2210:2631   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2257:2262   */\n  dup1\n    /* \"#utility.yul\":2254:2255   */\n  0x00\n    /* \"#utility.yul\":2247:2263   */\n  mstore\n    /* \"#utility.yul\":2301:2305   */\n  0x20\n    /* \"#utility.yul\":2298:2299   */\n  0x00\n    /* \"#utility.yul\":2288:2306   */\n  keccak256\n    /* \"#utility.yul\":2371:2373   */\n  0x1f\n    /* \"#utility.yul\":2359:2369   */\n  dup5\n    /* \"#utility.yul\":2355:2374   */\n  add\n    /* \"#utility.yul\":2352:2353   */\n  0x05\n    /* \"#utility.yul\":2348:2375   */\n  shr\n    /* \"#utility.yul\":2342:2346   */\n  dup2\n    /* \"#utility.yul\":2338:2376   */\n  add\n    /* \"#utility.yul\":2407:2411   */\n  0x20\n    /* \"#utility.yul\":2395:2405   */\n  dup6\n    /* \"#utility.yul\":2392:2412   */\n  lt\n    /* \"#utility.yul\":2389:2436   */\n  iszero\n  tag_62\n  jumpi\n  pop\n    /* \"#utility.yul\":2430:2434   */\n  dup1\n    /* \"#utility.yul\":2389:2436   */\ntag_62:\n    /* \"#utility.yul\":2485:2487   */\n  0x1f\n    /* \"#utility.yul\":2480:2483   */\n  dup5\n    /* \"#utility.yul\":2476:2488   */\n  add\n    /* \"#utility.yul\":2473:2474   */\n  0x05\n    /* \"#utility.yul\":2469:2489   */\n  shr\n    /* \"#utility.yul\":2463:2467   */\n  dup3\n    /* \"#utility.yul\":2459:2490   */\n  add\n    /* \"#utility.yul\":2449:2490   */\n  swap2\n  pop\n    /* \"#utility.yul\":2540:2621   */\ntag_63:\n    /* \"#utility.yul\":2558:2560   */\n  dup2\n    /* \"#utility.yul\":2551:2556   */\n  dup2\n    /* \"#utility.yul\":2548:2561   */\n  lt\n    /* \"#utility.yul\":2540:2621   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2617:2618   */\n  0x00\n    /* \"#utility.yul\":2603:2619   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2584:2585   */\n  0x01\n    /* \"#utility.yul\":2573:2586   */\n  add\n    /* \"#utility.yul\":2540:2621   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2544:2547   */\n  pop\n  pop\n    /* \"#utility.yul\":2210:2631   */\ntag_61:\n    /* \"#utility.yul\":2119:2637   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2813:4112   */\ntag_8:\n    /* \"#utility.yul\":2933:2943   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2955:2985   */\n  dup2\n  gt\n    /* \"#utility.yul\":2952:3008   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2988:3006   */\n  tag_69\n  tag_32\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3017:3114   */\n  tag_70\n    /* \"#utility.yul\":3107:3113   */\n  dup2\n    /* \"#utility.yul\":3067:3105   */\n  tag_71\n    /* \"#utility.yul\":3099:3103   */\n  dup5\n    /* \"#utility.yul\":3093:3104   */\n  sload\n    /* \"#utility.yul\":3067:3105   */\n  tag_34\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3061:3065   */\n  dup5\n    /* \"#utility.yul\":3017:3114   */\n  tag_36\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3163:3167   */\n  0x20\n    /* \"#utility.yul\":3194:3196   */\n  0x1f\n    /* \"#utility.yul\":3183:3197   */\n  dup3\n  gt\n    /* \"#utility.yul\":3211:3212   */\n  0x01\n    /* \"#utility.yul\":3206:3855   */\n  dup2\n  eq\n  tag_73\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup4\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_74\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_74:\n  not(0x00)\n    /* \"#utility.yul\":2770:2771   */\n  0x03\n    /* \"#utility.yul\":2766:2777   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2762:2786   */\n  shr\n    /* \"#utility.yul\":2758:2787   */\n  not\n    /* \"#utility.yul\":2748:2788   */\n  and\n    /* \"#utility.yul\":2794:2795   */\n  0x01\n    /* \"#utility.yul\":2790:2801   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2745:2802   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3176:4106   */\n  jump(tag_65)\n    /* \"#utility.yul\":3206:3855   */\ntag_73:\n    /* \"#utility.yul\":2066:2067   */\n  0x00\n    /* \"#utility.yul\":2059:2073   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2090:2108   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3242:3262   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3360:3582   */\ntag_77:\n    /* \"#utility.yul\":3374:3381   */\n  dup3\n    /* \"#utility.yul\":3371:3372   */\n  dup2\n    /* \"#utility.yul\":3368:3382   */\n  lt\n    /* \"#utility.yul\":3360:3582   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3456:3475   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3450:3476   */\n  mload\n    /* \"#utility.yul\":3435:3477   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3563:3567   */\n  0x20\n    /* \"#utility.yul\":3548:3568   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3516:3517   */\n  0x01\n    /* \"#utility.yul\":3504:3518   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3390:3402   */\n  add\n    /* \"#utility.yul\":3360:3582   */\n  jump(tag_77)\ntag_79:\n    /* \"#utility.yul\":3364:3367   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup5\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_80:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3809:3845   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2813:4112   */\n  jump\t// out\n    /* \"#utility.yul\":4325:4547   */\ntag_23:\n    /* \"#utility.yul\":4390:4399   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4411:4421   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4408:4541   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":4463:4473   */\n  0x4e487b71\n    /* \"#utility.yul\":4458:4461   */\n  0xe0\n    /* \"#utility.yul\":4454:4474   */\n  shl\n    /* \"#utility.yul\":4451:4452   */\n  0x00\n    /* \"#utility.yul\":4444:4475   */\n  mstore\n    /* \"#utility.yul\":4498:4502   */\n  0x11\n    /* \"#utility.yul\":4495:4496   */\n  0x04\n    /* \"#utility.yul\":4488:4503   */\n  mstore\n    /* \"#utility.yul\":4526:4530   */\n  0x24\n    /* \"#utility.yul\":4523:4524   */\n  0x00\n    /* \"#utility.yul\":4516:4531   */\n  revert\n    /* \"#utility.yul\":4408:4541   */\ntag_83:\n    /* \"#utility.yul\":4325:4547   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4902:5079   */\ntag_38:\n    /* \"ICO/Erc20.sol\":130:329  contract icotoken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ICO/Erc20.sol\":130:329  contract icotoken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1194:1208   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1187:1209   */\n      iszero\n        /* \"#utility.yul\":1169:1210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1157:1159   */\n      0x20\n        /* \"#utility.yul\":1142:1160   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_15\n        /* \"#utility.yul\":1029:1216   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":1367:1392   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_15\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_17\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":1924:1960   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_15\n        /* \"#utility.yul\":1782:1966   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_23\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_13\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_17\n      tag_45\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_23\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3032:3064   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3014:3065   */\n      mstore\n        /* \"#utility.yul\":3081:3099   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3074:3108   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3124:3142   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3117:3151   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2987:3005   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3308:3359   */\n      mstore\n        /* \"#utility.yul\":3281:3299   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3162:3365   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n        /* \"#utility.yul\":1367:1392   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n      swap1\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_114\n      swap1\n      pop\n      jump\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3032:3064   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3014:3065   */\n      mstore\n        /* \"#utility.yul\":3081:3099   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3074:3108   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3124:3142   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3117:3151   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2987:3005   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_92\n        /* \"#utility.yul\":2812:3157   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n        /* \"#utility.yul\":1367:1392   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n      swap1\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:541   */\n    tag_16:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_123:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_123)\n    tag_125:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":532:534   */\n      0x40\n        /* \"#utility.yul\":525:527   */\n      0x1f\n        /* \"#utility.yul\":521:528   */\n      not\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:529   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:530   */\n      add\n        /* \"#utility.yul\":481:535   */\n      add\n        /* \"#utility.yul\":473:535   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:719   */\n    tag_120:\n        /* \"#utility.yul\":614:634   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:694   */\n      dup2\n      and\n        /* \"#utility.yul\":653:695   */\n      dup2\n      eq\n        /* \"#utility.yul\":643:713   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":706:707   */\n      dup1\n        /* \"#utility.yul\":699:711   */\n      revert\n        /* \"#utility.yul\":643:713   */\n    tag_127:\n        /* \"#utility.yul\":546:719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":724:1024   */\n    tag_19:\n        /* \"#utility.yul\":792:798   */\n      0x00\n        /* \"#utility.yul\":800:806   */\n      dup1\n        /* \"#utility.yul\":853:855   */\n      0x40\n        /* \"#utility.yul\":841:850   */\n      dup4\n        /* \"#utility.yul\":832:839   */\n      dup6\n        /* \"#utility.yul\":828:851   */\n      sub\n        /* \"#utility.yul\":824:856   */\n      slt\n        /* \"#utility.yul\":821:873   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":866:867   */\n      dup1\n        /* \"#utility.yul\":859:871   */\n      revert\n        /* \"#utility.yul\":821:873   */\n    tag_129:\n        /* \"#utility.yul\":892:921   */\n      tag_130\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":892:921   */\n      tag_120\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":882:921   */\n      swap5\n        /* \"#utility.yul\":990:992   */\n      0x20\n        /* \"#utility.yul\":975:993   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":962:994   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":724:1024   */\n      jump\t// out\n        /* \"#utility.yul\":1403:1777   */\n    tag_29:\n        /* \"#utility.yul\":1480:1486   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup1\n        /* \"#utility.yul\":1496:1502   */\n      0x00\n        /* \"#utility.yul\":1549:1551   */\n      0x60\n        /* \"#utility.yul\":1537:1546   */\n      dup5\n        /* \"#utility.yul\":1528:1535   */\n      dup7\n        /* \"#utility.yul\":1524:1547   */\n      sub\n        /* \"#utility.yul\":1520:1552   */\n      slt\n        /* \"#utility.yul\":1517:1569   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1565:1566   */\n      0x00\n        /* \"#utility.yul\":1562:1563   */\n      dup1\n        /* \"#utility.yul\":1555:1567   */\n      revert\n        /* \"#utility.yul\":1517:1569   */\n    tag_134:\n        /* \"#utility.yul\":1588:1617   */\n      tag_135\n        /* \"#utility.yul\":1607:1616   */\n      dup5\n        /* \"#utility.yul\":1588:1617   */\n      tag_120\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1578:1617   */\n      swap3\n      pop\n        /* \"#utility.yul\":1636:1674   */\n      tag_136\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"#utility.yul\":1659:1668   */\n      dup6\n        /* \"#utility.yul\":1655:1673   */\n      add\n        /* \"#utility.yul\":1636:1674   */\n      tag_120\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1403:1777   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1626:1674   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1743:1745   */\n      0x40\n        /* \"#utility.yul\":1728:1746   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1715:1747   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1403:1777   */\n      jump\t// out\n        /* \"#utility.yul\":1971:2157   */\n    tag_38:\n        /* \"#utility.yul\":2030:2036   */\n      0x00\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2071:2080   */\n      dup3\n        /* \"#utility.yul\":2062:2069   */\n      dup5\n        /* \"#utility.yul\":2058:2081   */\n      sub\n        /* \"#utility.yul\":2054:2086   */\n      slt\n        /* \"#utility.yul\":2051:2103   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2099:2100   */\n      0x00\n        /* \"#utility.yul\":2096:2097   */\n      dup1\n        /* \"#utility.yul\":2089:2101   */\n      revert\n        /* \"#utility.yul\":2051:2103   */\n    tag_139:\n        /* \"#utility.yul\":2122:2151   */\n      tag_140\n        /* \"#utility.yul\":2141:2150   */\n      dup3\n        /* \"#utility.yul\":2122:2151   */\n      tag_120\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2112:2151   */\n      swap4\n        /* \"#utility.yul\":1971:2157   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2422   */\n    tag_50:\n        /* \"#utility.yul\":2230:2236   */\n      0x00\n        /* \"#utility.yul\":2238:2244   */\n      dup1\n        /* \"#utility.yul\":2291:2293   */\n      0x40\n        /* \"#utility.yul\":2279:2288   */\n      dup4\n        /* \"#utility.yul\":2270:2277   */\n      dup6\n        /* \"#utility.yul\":2266:2289   */\n      sub\n        /* \"#utility.yul\":2262:2294   */\n      slt\n        /* \"#utility.yul\":2259:2311   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2307:2308   */\n      0x00\n        /* \"#utility.yul\":2304:2305   */\n      dup1\n        /* \"#utility.yul\":2297:2309   */\n      revert\n        /* \"#utility.yul\":2259:2311   */\n    tag_142:\n        /* \"#utility.yul\":2330:2359   */\n      tag_143\n        /* \"#utility.yul\":2349:2358   */\n      dup4\n        /* \"#utility.yul\":2330:2359   */\n      tag_120\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2320:2359   */\n      swap2\n      pop\n        /* \"#utility.yul\":2378:2416   */\n      tag_144\n        /* \"#utility.yul\":2412:2414   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup5\n        /* \"#utility.yul\":2397:2415   */\n      add\n        /* \"#utility.yul\":2378:2416   */\n      tag_120\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2368:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2162:2422   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2427:2807   */\n    tag_55:\n        /* \"#utility.yul\":2506:2507   */\n      0x01\n        /* \"#utility.yul\":2502:2514   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2549:2561   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2570:2631   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2624:2628   */\n      0x7f\n        /* \"#utility.yul\":2616:2622   */\n      dup3\n        /* \"#utility.yul\":2612:2629   */\n      and\n        /* \"#utility.yul\":2602:2629   */\n      swap2\n      pop\n        /* \"#utility.yul\":2570:2631   */\n    tag_146:\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2669:2675   */\n      dup3\n        /* \"#utility.yul\":2666:2680   */\n      lt\n        /* \"#utility.yul\":2646:2664   */\n      dup2\n        /* \"#utility.yul\":2643:2681   */\n      sub\n        /* \"#utility.yul\":2640:2801   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2723:2733   */\n      0x4e487b71\n        /* \"#utility.yul\":2718:2721   */\n      0xe0\n        /* \"#utility.yul\":2714:2734   */\n      shl\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2704:2735   */\n      mstore\n        /* \"#utility.yul\":2758:2762   */\n      0x22\n        /* \"#utility.yul\":2755:2756   */\n      0x04\n        /* \"#utility.yul\":2748:2763   */\n      mstore\n        /* \"#utility.yul\":2786:2790   */\n      0x24\n        /* \"#utility.yul\":2783:2784   */\n      0x00\n        /* \"#utility.yul\":2776:2791   */\n      revert\n        /* \"#utility.yul\":2640:2801   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":2427:2807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3370:3592   */\n    tag_113:\n        /* \"#utility.yul\":3435:3444   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3456:3466   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3453:3586   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":3508:3518   */\n      0x4e487b71\n        /* \"#utility.yul\":3503:3506   */\n      0xe0\n        /* \"#utility.yul\":3499:3519   */\n      shl\n        /* \"#utility.yul\":3496:3497   */\n      0x00\n        /* \"#utility.yul\":3489:3520   */\n      mstore\n        /* \"#utility.yul\":3543:3547   */\n      0x11\n        /* \"#utility.yul\":3540:3541   */\n      0x04\n        /* \"#utility.yul\":3533:3548   */\n      mstore\n        /* \"#utility.yul\":3571:3575   */\n      0x24\n        /* \"#utility.yul\":3568:3569   */\n      0x00\n        /* \"#utility.yul\":3561:3576   */\n      revert\n\n    auxdata: 0xa26469706673582212207a4a2dc37219ff1111035c21b51e48d0517b3f0024c09cd3ede108c76c080a4c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_382": {
									"entryPoint": null,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_685": {
									"entryPoint": 101,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_652": {
									"entryPoint": 164,
									"id": 652,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5081:10",
										"nodeType": "YulBlock",
										"src": "0:5081:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:10",
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:10",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:10",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:10",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nativeSrc": "66:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nativeSrc": "56:31:10",
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nativeSrc": "56:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:10",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:10",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nativeSrc": "96:15:10",
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nativeSrc": "96:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:10",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:10",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nativeSrc": "120:15:10",
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nativeSrc": "120:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nativeSrc": "210:770:10",
													"nodeType": "YulBlock",
													"src": "210:770:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:10",
																"nodeType": "YulBlock",
																"src": "259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:10"
																			},
																			"nativeSrc": "261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:10"
																		},
																		"nativeSrc": "261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:10",
																						"nodeType": "YulLiteral",
																						"src": "246:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:10"
																				},
																				"nativeSrc": "234:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:10"
																		},
																		"nativeSrc": "230:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:10"
																},
																"nativeSrc": "223:35:10",
																"nodeType": "YulFunctionCall",
																"src": "223:35:10"
															},
															"nativeSrc": "220:55:10",
															"nodeType": "YulIf",
															"src": "220:55:10"
														},
														{
															"nativeSrc": "284:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:10"
																},
																"nativeSrc": "298:13:10",
																"nodeType": "YulFunctionCall",
																"src": "298:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:10",
																	"nodeType": "YulTypedName",
																	"src": "288:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:10",
																"nodeType": "YulBlock",
																"src": "354:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:10"
																			},
																			"nativeSrc": "356:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:10"
																		},
																		"nativeSrc": "356:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:10",
																						"nodeType": "YulLiteral",
																						"src": "342:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:10",
																						"nodeType": "YulLiteral",
																						"src": "346:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:10"
																				},
																				"nativeSrc": "338:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:10",
																				"nodeType": "YulLiteral",
																				"src": "350:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:10"
																		},
																		"nativeSrc": "334:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:10"
																},
																"nativeSrc": "323:30:10",
																"nodeType": "YulFunctionCall",
																"src": "323:30:10"
															},
															"nativeSrc": "320:56:10",
															"nodeType": "YulIf",
															"src": "320:56:10"
														},
														{
															"nativeSrc": "385:23:10",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:10",
																		"nodeType": "YulLiteral",
																		"src": "405:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:10"
																},
																"nativeSrc": "399:9:10",
																"nodeType": "YulFunctionCall",
																"src": "399:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:10",
																	"nodeType": "YulTypedName",
																	"src": "389:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:10",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:10",
																										"nodeType": "YulLiteral",
																										"src": "471:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:10"
																								},
																								"nativeSrc": "459:17:10",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:10",
																										"nodeType": "YulLiteral",
																										"src": "482:2:10",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:10"
																								},
																								"nativeSrc": "478:7:10",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:10"
																						},
																						"nativeSrc": "455:31:10",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:10",
																						"nodeType": "YulLiteral",
																						"src": "488:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:10"
																				},
																				"nativeSrc": "451:40:10",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:10",
																						"nodeType": "YulLiteral",
																						"src": "497:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:10"
																				},
																				"nativeSrc": "493:7:10",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:10"
																		},
																		"nativeSrc": "447:54:10",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:10"
																},
																"nativeSrc": "435:67:10",
																"nodeType": "YulFunctionCall",
																"src": "435:67:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:10",
																	"nodeType": "YulTypedName",
																	"src": "421:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:10",
																"nodeType": "YulBlock",
																"src": "577:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:10"
																			},
																			"nativeSrc": "579:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:10"
																		},
																		"nativeSrc": "579:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:10",
																								"nodeType": "YulLiteral",
																								"src": "540:2:10",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:10",
																								"nodeType": "YulLiteral",
																								"src": "544:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:10"
																						},
																						"nativeSrc": "536:10:10",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:10",
																						"nodeType": "YulLiteral",
																						"src": "548:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:10"
																				},
																				"nativeSrc": "532:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:10"
																		},
																		"nativeSrc": "517:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:10"
																		},
																		"nativeSrc": "553:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:10"
																},
																"nativeSrc": "514:62:10",
																"nodeType": "YulFunctionCall",
																"src": "514:62:10"
															},
															"nativeSrc": "511:88:10",
															"nodeType": "YulIf",
															"src": "511:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:10",
																		"nodeType": "YulLiteral",
																		"src": "615:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:10"
																},
																"nativeSrc": "608:22:10",
																"nodeType": "YulFunctionCall",
																"src": "608:22:10"
															},
															"nativeSrc": "608:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:10"
																},
																"nativeSrc": "639:22:10",
																"nodeType": "YulFunctionCall",
																"src": "639:22:10"
															},
															"nativeSrc": "639:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:10"
														},
														{
															"body": {
																"nativeSrc": "713:16:10",
																"nodeType": "YulBlock",
																"src": "713:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:10",
																					"nodeType": "YulLiteral",
																					"src": "722:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:10",
																					"nodeType": "YulLiteral",
																					"src": "725:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:10"
																			},
																			"nativeSrc": "715:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:10"
																		},
																		"nativeSrc": "715:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:10"
																				},
																				"nativeSrc": "680:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:10",
																				"nodeType": "YulLiteral",
																				"src": "701:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:10"
																		},
																		"nativeSrc": "676:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:10"
																},
																"nativeSrc": "673:39:10",
																"nodeType": "YulFunctionCall",
																"src": "673:39:10"
															},
															"nativeSrc": "670:59:10",
															"nodeType": "YulIf",
															"src": "670:59:10"
														},
														{
															"nativeSrc": "738:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:10",
																"nodeType": "YulLiteral",
																"src": "747:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:10",
																	"nodeType": "YulTypedName",
																	"src": "742:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:10",
																"nodeType": "YulBlock",
																"src": "809:91:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:10"
																							},
																							"nativeSrc": "834:14:10",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:10",
																							"nodeType": "YulLiteral",
																							"src": "850:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:10"
																					},
																					"nativeSrc": "830:25:10",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:10"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:10",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:10"
																									},
																									"nativeSrc": "867:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:10",
																									"nodeType": "YulLiteral",
																									"src": "883:4:10",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:10"
																							},
																							"nativeSrc": "863:25:10",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:10"
																					},
																					"nativeSrc": "857:32:10",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:10"
																			},
																			"nativeSrc": "823:67:10",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:10"
																		},
																		"nativeSrc": "823:67:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:10"
																},
																"nativeSrc": "765:13:10",
																"nodeType": "YulFunctionCall",
																"src": "765:13:10"
															},
															"nativeSrc": "757:143:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:10",
																"nodeType": "YulBlock",
																"src": "779:21:10",
																"statements": [
																	{
																		"nativeSrc": "781:17:10",
																		"nodeType": "YulAssignment",
																		"src": "781:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:10",
																					"nodeType": "YulLiteral",
																					"src": "793:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:10"
																			},
																			"nativeSrc": "786:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:10",
																"nodeType": "YulBlock",
																"src": "761:3:10",
																"statements": []
															},
															"src": "757:143:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:10"
																				},
																				"nativeSrc": "920:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:10",
																				"nodeType": "YulLiteral",
																				"src": "941:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:10"
																		},
																		"nativeSrc": "916:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:10",
																		"nodeType": "YulLiteral",
																		"src": "948:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:10"
																},
																"nativeSrc": "909:41:10",
																"nodeType": "YulFunctionCall",
																"src": "909:41:10"
															},
															"nativeSrc": "909:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:10"
														},
														{
															"nativeSrc": "959:15:10",
															"nodeType": "YulAssignment",
															"src": "959:15:10",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:10",
																"nodeType": "YulIdentifier",
																"src": "968:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:10",
														"nodeType": "YulTypedName",
														"src": "184:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:10",
														"nodeType": "YulTypedName",
														"src": "192:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:10",
														"nodeType": "YulTypedName",
														"src": "200:5:10",
														"type": ""
													}
												],
												"src": "146:834:10"
											},
											{
												"body": {
													"nativeSrc": "1120:483:10",
													"nodeType": "YulBlock",
													"src": "1120:483:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1166:16:10",
																"nodeType": "YulBlock",
																"src": "1166:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1175:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1178:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1168:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:10"
																			},
																			"nativeSrc": "1168:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1168:12:10"
																		},
																		"nativeSrc": "1168:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1141:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1150:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1137:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:10"
																		},
																		"nativeSrc": "1137:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1162:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:10"
																},
																"nativeSrc": "1133:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1133:32:10"
															},
															"nativeSrc": "1130:52:10",
															"nodeType": "YulIf",
															"src": "1130:52:10"
														},
														{
															"nativeSrc": "1191:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1191:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1211:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1211:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1205:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1205:5:10"
																},
																"nativeSrc": "1205:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1205:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1195:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1195:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1264:16:10",
																"nodeType": "YulBlock",
																"src": "1264:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1273:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1276:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1276:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1266:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:10"
																			},
																			"nativeSrc": "1266:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1266:12:10"
																		},
																		"nativeSrc": "1266:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1236:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1236:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1252:2:10",
																						"nodeType": "YulLiteral",
																						"src": "1252:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1256:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1256:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1248:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1248:3:10"
																				},
																				"nativeSrc": "1248:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1248:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1260:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1260:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1244:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1244:3:10"
																		},
																		"nativeSrc": "1244:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1244:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1233:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1233:2:10"
																},
																"nativeSrc": "1233:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1233:30:10"
															},
															"nativeSrc": "1230:50:10",
															"nodeType": "YulIf",
															"src": "1230:50:10"
														},
														{
															"nativeSrc": "1289:71:10",
															"nodeType": "YulAssignment",
															"src": "1289:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1332:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1332:9:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1343:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1343:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:10"
																		},
																		"nativeSrc": "1328:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1352:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1352:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1299:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "1299:28:10"
																},
																"nativeSrc": "1299:61:10",
																"nodeType": "YulFunctionCall",
																"src": "1299:61:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1289:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:10"
																}
															]
														},
														{
															"nativeSrc": "1369:41:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1369:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1395:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1395:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1406:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1406:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1391:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:10"
																		},
																		"nativeSrc": "1391:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1385:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1385:5:10"
																},
																"nativeSrc": "1385:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1385:25:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1373:8:10",
																	"nodeType": "YulTypedName",
																	"src": "1373:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1455:16:10",
																"nodeType": "YulBlock",
																"src": "1455:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:10"
																			},
																			"nativeSrc": "1457:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:10"
																		},
																		"nativeSrc": "1457:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1425:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1425:8:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1443:2:10",
																						"nodeType": "YulLiteral",
																						"src": "1443:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1447:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1447:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1439:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1439:3:10"
																				},
																				"nativeSrc": "1439:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1439:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1451:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1451:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:10"
																		},
																		"nativeSrc": "1435:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1422:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:2:10"
																},
																"nativeSrc": "1422:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:32:10"
															},
															"nativeSrc": "1419:52:10",
															"nodeType": "YulIf",
															"src": "1419:52:10"
														},
														{
															"nativeSrc": "1480:73:10",
															"nodeType": "YulAssignment",
															"src": "1480:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1523:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1534:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1534:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1519:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:10"
																		},
																		"nativeSrc": "1519:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1545:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1545:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1490:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "1490:28:10"
																},
																"nativeSrc": "1490:63:10",
																"nodeType": "YulFunctionCall",
																"src": "1490:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1480:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1480:6:10"
																}
															]
														},
														{
															"nativeSrc": "1562:35:10",
															"nodeType": "YulAssignment",
															"src": "1562:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1582:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1582:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1593:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1593:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1578:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:10"
																		},
																		"nativeSrc": "1578:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1572:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1572:5:10"
																},
																"nativeSrc": "1572:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1572:25:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1562:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "985:618:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1070:9:10",
														"nodeType": "YulTypedName",
														"src": "1070:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1081:7:10",
														"nodeType": "YulTypedName",
														"src": "1081:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1093:6:10",
														"nodeType": "YulTypedName",
														"src": "1093:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1101:6:10",
														"nodeType": "YulTypedName",
														"src": "1101:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1109:6:10",
														"nodeType": "YulTypedName",
														"src": "1109:6:10",
														"type": ""
													}
												],
												"src": "985:618:10"
											},
											{
												"body": {
													"nativeSrc": "1663:325:10",
													"nodeType": "YulBlock",
													"src": "1663:325:10",
													"statements": [
														{
															"nativeSrc": "1673:22:10",
															"nodeType": "YulAssignment",
															"src": "1673:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1687:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1690:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1690:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1683:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1683:3:10"
																},
																"nativeSrc": "1683:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1683:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1673:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:10"
																}
															]
														},
														{
															"nativeSrc": "1704:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1704:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1734:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1734:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1730:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1730:3:10"
																},
																"nativeSrc": "1730:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1730:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1708:18:10",
																	"nodeType": "YulTypedName",
																	"src": "1708:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1781:31:10",
																"nodeType": "YulBlock",
																"src": "1781:31:10",
																"statements": [
																	{
																		"nativeSrc": "1783:27:10",
																		"nodeType": "YulAssignment",
																		"src": "1783:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1797:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1797:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1805:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1805:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1793:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1793:3:10"
																			},
																			"nativeSrc": "1793:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1793:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1783:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1761:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1761:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1754:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:10"
																},
																"nativeSrc": "1754:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1754:26:10"
															},
															"nativeSrc": "1751:61:10",
															"nodeType": "YulIf",
															"src": "1751:61:10"
														},
														{
															"body": {
																"nativeSrc": "1871:111:10",
																"nodeType": "YulBlock",
																"src": "1871:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1899:3:10",
																							"nodeType": "YulLiteral",
																							"src": "1899:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1904:10:10",
																							"nodeType": "YulLiteral",
																							"src": "1904:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1895:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1895:3:10"
																					},
																					"nativeSrc": "1895:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1895:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1885:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:10"
																			},
																			"nativeSrc": "1885:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1885:31:10"
																		},
																		"nativeSrc": "1885:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1885:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1936:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1936:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1939:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1939:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1929:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:10"
																			},
																			"nativeSrc": "1929:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1929:15:10"
																		},
																		"nativeSrc": "1929:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1929:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1964:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1964:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1967:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1967:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1957:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:10"
																			},
																			"nativeSrc": "1957:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1957:15:10"
																		},
																		"nativeSrc": "1957:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1827:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1827:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1850:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1858:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1847:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1847:2:10"
																		},
																		"nativeSrc": "1847:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1847:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1824:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1824:2:10"
																},
																"nativeSrc": "1824:38:10",
																"nodeType": "YulFunctionCall",
																"src": "1824:38:10"
															},
															"nativeSrc": "1821:161:10",
															"nodeType": "YulIf",
															"src": "1821:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1608:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1643:4:10",
														"nodeType": "YulTypedName",
														"src": "1643:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1652:6:10",
														"nodeType": "YulTypedName",
														"src": "1652:6:10",
														"type": ""
													}
												],
												"src": "1608:380:10"
											},
											{
												"body": {
													"nativeSrc": "2049:65:10",
													"nodeType": "YulBlock",
													"src": "2049:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2066:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2066:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2069:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2069:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2059:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2059:6:10"
																},
																"nativeSrc": "2059:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2059:14:10"
															},
															"nativeSrc": "2059:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "2059:14:10"
														},
														{
															"nativeSrc": "2082:26:10",
															"nodeType": "YulAssignment",
															"src": "2082:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2100:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2100:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2090:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2090:9:10"
																},
																"nativeSrc": "2090:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2090:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2082:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2082:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1993:121:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2032:3:10",
														"nodeType": "YulTypedName",
														"src": "2032:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2040:4:10",
														"nodeType": "YulTypedName",
														"src": "2040:4:10",
														"type": ""
													}
												],
												"src": "1993:121:10"
											},
											{
												"body": {
													"nativeSrc": "2200:437:10",
													"nodeType": "YulBlock",
													"src": "2200:437:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2233:398:10",
																"nodeType": "YulBlock",
																"src": "2233:398:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2254:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2254:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2257:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2257:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2247:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2247:6:10"
																			},
																			"nativeSrc": "2247:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2247:16:10"
																		},
																		"nativeSrc": "2247:16:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2247:16:10"
																	},
																	{
																		"nativeSrc": "2276:30:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2276:30:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2298:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2301:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2301:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2288:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2288:9:10"
																			},
																			"nativeSrc": "2288:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2288:18:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2280:4:10",
																				"nodeType": "YulTypedName",
																				"src": "2280:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2319:57:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2319:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2342:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "2342:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2352:1:10",
																							"nodeType": "YulLiteral",
																							"src": "2352:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2359:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "2359:10:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2371:2:10",
																									"nodeType": "YulLiteral",
																									"src": "2371:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2355:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2355:3:10"
																							},
																							"nativeSrc": "2355:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2355:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2348:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2348:3:10"
																					},
																					"nativeSrc": "2348:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2348:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2338:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2338:3:10"
																			},
																			"nativeSrc": "2338:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2338:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2323:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2323:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2413:23:10",
																			"nodeType": "YulBlock",
																			"src": "2413:23:10",
																			"statements": [
																				{
																					"nativeSrc": "2415:19:10",
																					"nodeType": "YulAssignment",
																					"src": "2415:19:10",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2430:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2430:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2415:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "2415:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2395:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "2395:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2407:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2407:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2392:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "2392:2:10"
																			},
																			"nativeSrc": "2392:20:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2392:20:10"
																		},
																		"nativeSrc": "2389:47:10",
																		"nodeType": "YulIf",
																		"src": "2389:47:10"
																	},
																	{
																		"nativeSrc": "2449:41:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2449:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2463:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "2463:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2473:1:10",
																							"nodeType": "YulLiteral",
																							"src": "2473:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2480:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2480:3:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2485:2:10",
																									"nodeType": "YulLiteral",
																									"src": "2485:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2476:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2476:3:10"
																							},
																							"nativeSrc": "2476:12:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2476:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2469:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:10"
																					},
																					"nativeSrc": "2469:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2469:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2459:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2459:3:10"
																			},
																			"nativeSrc": "2459:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2459:31:10"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2453:2:10",
																				"nodeType": "YulTypedName",
																				"src": "2453:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2503:24:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2503:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2516:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "2516:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2507:5:10",
																				"nodeType": "YulTypedName",
																				"src": "2507:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2601:20:10",
																			"nodeType": "YulBlock",
																			"src": "2601:20:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2610:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "2610:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2617:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2617:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2603:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2603:6:10"
																						},
																						"nativeSrc": "2603:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2603:16:10"
																					},
																					"nativeSrc": "2603:16:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "2603:16:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2551:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2551:5:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2558:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "2558:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2548:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "2548:2:10"
																			},
																			"nativeSrc": "2548:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2548:13:10"
																		},
																		"nativeSrc": "2540:81:10",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2562:26:10",
																			"nodeType": "YulBlock",
																			"src": "2562:26:10",
																			"statements": [
																				{
																					"nativeSrc": "2564:22:10",
																					"nodeType": "YulAssignment",
																					"src": "2564:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2577:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "2577:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2584:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2584:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2573:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2573:3:10"
																						},
																						"nativeSrc": "2573:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2573:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2564:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "2564:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2544:3:10",
																			"nodeType": "YulBlock",
																			"src": "2544:3:10",
																			"statements": []
																		},
																		"src": "2540:81:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2216:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2216:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2221:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2221:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2213:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2213:2:10"
																},
																"nativeSrc": "2213:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2213:11:10"
															},
															"nativeSrc": "2210:421:10",
															"nodeType": "YulIf",
															"src": "2210:421:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2119:518:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2172:5:10",
														"nodeType": "YulTypedName",
														"src": "2172:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2179:3:10",
														"nodeType": "YulTypedName",
														"src": "2179:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2184:10:10",
														"nodeType": "YulTypedName",
														"src": "2184:10:10",
														"type": ""
													}
												],
												"src": "2119:518:10"
											},
											{
												"body": {
													"nativeSrc": "2727:81:10",
													"nodeType": "YulBlock",
													"src": "2727:81:10",
													"statements": [
														{
															"nativeSrc": "2737:65:10",
															"nodeType": "YulAssignment",
															"src": "2737:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2752:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2752:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2770:1:10",
																										"nodeType": "YulLiteral",
																										"src": "2770:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2773:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "2773:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2766:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2766:3:10"
																								},
																								"nativeSrc": "2766:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2766:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2783:1:10",
																										"nodeType": "YulLiteral",
																										"src": "2783:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2779:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2779:3:10"
																								},
																								"nativeSrc": "2779:6:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2779:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2762:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2762:3:10"
																						},
																						"nativeSrc": "2762:24:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2762:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2758:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2758:3:10"
																				},
																				"nativeSrc": "2758:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2758:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2748:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2748:3:10"
																		},
																		"nativeSrc": "2748:40:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2748:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2794:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2794:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2797:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2797:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2790:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:10"
																		},
																		"nativeSrc": "2790:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2745:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2745:2:10"
																},
																"nativeSrc": "2745:57:10",
																"nodeType": "YulFunctionCall",
																"src": "2745:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2737:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2737:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2642:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2704:4:10",
														"nodeType": "YulTypedName",
														"src": "2704:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2710:3:10",
														"nodeType": "YulTypedName",
														"src": "2710:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2718:4:10",
														"nodeType": "YulTypedName",
														"src": "2718:4:10",
														"type": ""
													}
												],
												"src": "2642:166:10"
											},
											{
												"body": {
													"nativeSrc": "2909:1203:10",
													"nodeType": "YulBlock",
													"src": "2909:1203:10",
													"statements": [
														{
															"nativeSrc": "2919:24:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2919:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2939:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2939:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2933:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2933:5:10"
																},
																"nativeSrc": "2933:10:10",
																"nodeType": "YulFunctionCall",
																"src": "2933:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2923:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2923:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2986:22:10",
																"nodeType": "YulBlock",
																"src": "2986:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2988:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2988:16:10"
																			},
																			"nativeSrc": "2988:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2988:18:10"
																		},
																		"nativeSrc": "2988:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2958:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2974:2:10",
																						"nodeType": "YulLiteral",
																						"src": "2974:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2978:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2978:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2970:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2970:3:10"
																				},
																				"nativeSrc": "2970:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2970:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2982:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2982:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2966:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2966:3:10"
																		},
																		"nativeSrc": "2966:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2966:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2955:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2955:2:10"
																},
																"nativeSrc": "2955:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2955:30:10"
															},
															"nativeSrc": "2952:56:10",
															"nodeType": "YulIf",
															"src": "2952:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3061:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3061:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3099:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "3099:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3093:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3093:5:10"
																				},
																				"nativeSrc": "3093:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3093:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3067:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "3067:25:10"
																		},
																		"nativeSrc": "3067:38:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:38:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3107:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3107:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3017:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3017:43:10"
																},
																"nativeSrc": "3017:97:10",
																"nodeType": "YulFunctionCall",
																"src": "3017:97:10"
															},
															"nativeSrc": "3017:97:10",
															"nodeType": "YulExpressionStatement",
															"src": "3017:97:10"
														},
														{
															"nativeSrc": "3123:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3123:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3140:1:10",
																"nodeType": "YulLiteral",
																"src": "3140:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3127:9:10",
																	"nodeType": "YulTypedName",
																	"src": "3127:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3150:17:10",
															"nodeType": "YulAssignment",
															"src": "3150:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3163:4:10",
																"nodeType": "YulLiteral",
																"src": "3163:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3150:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3150:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3213:642:10",
																		"nodeType": "YulBlock",
																		"src": "3213:642:10",
																		"statements": [
																			{
																				"nativeSrc": "3227:35:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3227:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3246:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "3246:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3258:2:10",
																									"nodeType": "YulLiteral",
																									"src": "3258:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3254:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "3254:3:10"
																							},
																							"nativeSrc": "3254:7:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3254:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3242:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3242:3:10"
																					},
																					"nativeSrc": "3242:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3242:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3231:7:10",
																						"nodeType": "YulTypedName",
																						"src": "3231:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3275:49:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3275:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3319:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "3319:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3289:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "3289:29:10"
																					},
																					"nativeSrc": "3289:35:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3289:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3279:6:10",
																						"nodeType": "YulTypedName",
																						"src": "3279:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3337:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3337:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3346:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3346:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3341:1:10",
																						"nodeType": "YulTypedName",
																						"src": "3341:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3417:165:10",
																					"nodeType": "YulBlock",
																					"src": "3417:165:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3442:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "3442:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3460:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "3460:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3465:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "3465:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3456:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "3456:3:10"
																												},
																												"nativeSrc": "3456:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "3456:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3450:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "3450:5:10"
																										},
																										"nativeSrc": "3450:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "3450:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3435:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "3435:6:10"
																								},
																								"nativeSrc": "3435:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3435:42:10"
																							},
																							"nativeSrc": "3435:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "3435:42:10"
																						},
																						{
																							"nativeSrc": "3494:24:10",
																							"nodeType": "YulAssignment",
																							"src": "3494:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3508:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "3508:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3516:1:10",
																										"nodeType": "YulLiteral",
																										"src": "3516:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3504:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3504:3:10"
																								},
																								"nativeSrc": "3504:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3504:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3494:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "3494:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3535:33:10",
																							"nodeType": "YulAssignment",
																							"src": "3535:33:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3552:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "3552:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3563:4:10",
																										"nodeType": "YulLiteral",
																										"src": "3563:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3548:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3548:3:10"
																								},
																								"nativeSrc": "3548:20:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3548:20:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3535:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "3535:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3371:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "3371:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3374:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "3374:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3368:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "3368:2:10"
																					},
																					"nativeSrc": "3368:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3368:14:10"
																				},
																				"nativeSrc": "3360:222:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3383:21:10",
																					"nodeType": "YulBlock",
																					"src": "3383:21:10",
																					"statements": [
																						{
																							"nativeSrc": "3385:17:10",
																							"nodeType": "YulAssignment",
																							"src": "3385:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3394:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "3394:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3397:4:10",
																										"nodeType": "YulLiteral",
																										"src": "3397:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3390:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3390:3:10"
																								},
																								"nativeSrc": "3390:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3390:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3385:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "3385:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3364:3:10",
																					"nodeType": "YulBlock",
																					"src": "3364:3:10",
																					"statements": []
																				},
																				"src": "3360:222:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:10",
																					"nodeType": "YulBlock",
																					"src": "3630:166:10",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:10"
																										},
																										"nativeSrc": "3671:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:10"
																								},
																								"nativeSrc": "3665:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:10",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:10",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:10",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:10",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:10"
																																		},
																																		"nativeSrc": "3750:14:10",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:10",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:10"
																																},
																																"nativeSrc": "3746:24:10",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:10",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:10"
																																},
																																"nativeSrc": "3772:6:10",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:10",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:10"
																														},
																														"nativeSrc": "3742:37:10",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:10"
																												},
																												"nativeSrc": "3738:42:10",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:10"
																										},
																										"nativeSrc": "3723:58:10",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:10"
																								},
																								"nativeSrc": "3708:74:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:10"
																							},
																							"nativeSrc": "3708:74:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:10"
																					},
																					"nativeSrc": "3598:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:10"
																				},
																				"nativeSrc": "3595:201:10",
																				"nodeType": "YulIf",
																				"src": "3595:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:10",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:10"
																									},
																									"nativeSrc": "3826:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:10",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:10"
																							},
																							"nativeSrc": "3822:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:10"
																					},
																					"nativeSrc": "3809:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:10"
																				},
																				"nativeSrc": "3809:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:10"
																			}
																		]
																	},
																	"nativeSrc": "3206:649:10",
																	"nodeType": "YulCase",
																	"src": "3206:649:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3211:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3211:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:10",
																		"nodeType": "YulBlock",
																		"src": "3872:234:10",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:10",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:10",
																					"nodeType": "YulBlock",
																					"src": "3935:67:10",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:10",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:10"
																										},
																										"nativeSrc": "3968:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:10"
																								},
																								"nativeSrc": "3962:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:10"
																				},
																				"nativeSrc": "3913:89:10",
																				"nodeType": "YulIf",
																				"src": "3913:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:10"
																							},
																							"nativeSrc": "4028:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:10"
																					},
																					"nativeSrc": "4015:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:10"
																				},
																				"nativeSrc": "4015:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:10"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:10",
																	"nodeType": "YulCase",
																	"src": "3864:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3186:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3194:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3194:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3183:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:10"
																},
																"nativeSrc": "3183:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3183:14:10"
															},
															"nativeSrc": "3176:930:10",
															"nodeType": "YulSwitch",
															"src": "3176:930:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2813:1299:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2894:4:10",
														"nodeType": "YulTypedName",
														"src": "2894:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2900:3:10",
														"nodeType": "YulTypedName",
														"src": "2900:3:10",
														"type": ""
													}
												],
												"src": "2813:1299:10"
											},
											{
												"body": {
													"nativeSrc": "4218:102:10",
													"nodeType": "YulBlock",
													"src": "4218:102:10",
													"statements": [
														{
															"nativeSrc": "4228:26:10",
															"nodeType": "YulAssignment",
															"src": "4228:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4240:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4240:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4251:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4251:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4236:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4236:3:10"
																},
																"nativeSrc": "4236:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4236:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4228:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4228:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4285:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4301:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4301:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4306:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4306:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4297:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4297:3:10"
																						},
																						"nativeSrc": "4297:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4297:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4310:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4310:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4293:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4293:3:10"
																				},
																				"nativeSrc": "4293:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4293:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4281:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4281:3:10"
																		},
																		"nativeSrc": "4281:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4281:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4263:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4263:6:10"
																},
																"nativeSrc": "4263:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4263:51:10"
															},
															"nativeSrc": "4263:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4263:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4117:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4187:9:10",
														"nodeType": "YulTypedName",
														"src": "4187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4198:6:10",
														"nodeType": "YulTypedName",
														"src": "4198:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4209:4:10",
														"nodeType": "YulTypedName",
														"src": "4209:4:10",
														"type": ""
													}
												],
												"src": "4117:203:10"
											},
											{
												"body": {
													"nativeSrc": "4373:174:10",
													"nodeType": "YulBlock",
													"src": "4373:174:10",
													"statements": [
														{
															"nativeSrc": "4383:16:10",
															"nodeType": "YulAssignment",
															"src": "4383:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4394:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4394:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4397:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4397:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4390:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4390:3:10"
																},
																"nativeSrc": "4390:9:10",
																"nodeType": "YulFunctionCall",
																"src": "4390:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4383:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4430:111:10",
																"nodeType": "YulBlock",
																"src": "4430:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4451:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4451:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4458:3:10",
																							"nodeType": "YulLiteral",
																							"src": "4458:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4463:10:10",
																							"nodeType": "YulLiteral",
																							"src": "4463:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4454:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4454:3:10"
																					},
																					"nativeSrc": "4454:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4454:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4444:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4444:6:10"
																			},
																			"nativeSrc": "4444:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4444:31:10"
																		},
																		"nativeSrc": "4444:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4444:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4495:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4495:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4498:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4498:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4488:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4488:6:10"
																			},
																			"nativeSrc": "4488:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4488:15:10"
																		},
																		"nativeSrc": "4488:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4488:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4523:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4523:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4526:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4526:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4516:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4516:6:10"
																			},
																			"nativeSrc": "4516:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4516:15:10"
																		},
																		"nativeSrc": "4516:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4516:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4414:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4414:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4417:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4411:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4411:2:10"
																},
																"nativeSrc": "4411:10:10",
																"nodeType": "YulFunctionCall",
																"src": "4411:10:10"
															},
															"nativeSrc": "4408:133:10",
															"nodeType": "YulIf",
															"src": "4408:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4325:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4356:1:10",
														"nodeType": "YulTypedName",
														"src": "4356:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4359:1:10",
														"nodeType": "YulTypedName",
														"src": "4359:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4365:3:10",
														"nodeType": "YulTypedName",
														"src": "4365:3:10",
														"type": ""
													}
												],
												"src": "4325:222:10"
											},
											{
												"body": {
													"nativeSrc": "4709:188:10",
													"nodeType": "YulBlock",
													"src": "4709:188:10",
													"statements": [
														{
															"nativeSrc": "4719:26:10",
															"nodeType": "YulAssignment",
															"src": "4719:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4731:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4742:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4727:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:10"
																},
																"nativeSrc": "4727:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4727:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4719:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4719:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4761:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4761:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4776:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4792:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4792:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4797:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4797:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4788:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4788:3:10"
																						},
																						"nativeSrc": "4788:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4788:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4801:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4801:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4784:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4784:3:10"
																				},
																				"nativeSrc": "4784:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4784:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:10"
																		},
																		"nativeSrc": "4772:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:10"
																},
																"nativeSrc": "4754:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4754:51:10"
															},
															"nativeSrc": "4754:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4754:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4825:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4836:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4821:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:10"
																		},
																		"nativeSrc": "4821:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4841:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4841:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:10"
																},
																"nativeSrc": "4814:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4814:34:10"
															},
															"nativeSrc": "4814:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4814:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4868:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4879:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4879:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4864:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:10"
																		},
																		"nativeSrc": "4864:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4864:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4884:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4857:6:10"
																},
																"nativeSrc": "4857:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4857:34:10"
															},
															"nativeSrc": "4857:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4857:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4552:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4662:9:10",
														"nodeType": "YulTypedName",
														"src": "4662:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4673:6:10",
														"nodeType": "YulTypedName",
														"src": "4673:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4681:6:10",
														"nodeType": "YulTypedName",
														"src": "4681:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4689:6:10",
														"nodeType": "YulTypedName",
														"src": "4689:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4700:4:10",
														"nodeType": "YulTypedName",
														"src": "4700:4:10",
														"type": ""
													}
												],
												"src": "4552:345:10"
											},
											{
												"body": {
													"nativeSrc": "5003:76:10",
													"nodeType": "YulBlock",
													"src": "5003:76:10",
													"statements": [
														{
															"nativeSrc": "5013:26:10",
															"nodeType": "YulAssignment",
															"src": "5013:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5025:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5025:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5036:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5036:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5021:3:10"
																},
																"nativeSrc": "5021:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5021:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5013:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5013:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5055:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5055:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5066:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5066:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5048:6:10"
																},
																"nativeSrc": "5048:25:10",
																"nodeType": "YulFunctionCall",
																"src": "5048:25:10"
															},
															"nativeSrc": "5048:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "5048:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4902:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4972:9:10",
														"nodeType": "YulTypedName",
														"src": "4972:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4983:6:10",
														"nodeType": "YulTypedName",
														"src": "4983:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4994:4:10",
														"nodeType": "YulTypedName",
														"src": "4994:4:10",
														"type": ""
													}
												],
												"src": "4902:177:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610b97380380610b9783398101604081905261002f91610287565b8282600361003d8382610382565b50600461004a8282610382565b50505061005d338261006560201b60201c565b505050610467565b6001600160a01b0382166100945760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100a0600083836100a4565b5050565b6001600160a01b0383166100cf5780600260008282546100c49190610440565b909155506101419050565b6001600160a01b038316600090815260208190526040902054818110156101225760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161008b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661015d5760028054829003905561017c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101c191815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126101f557600080fd5b81516001600160401b0381111561020e5761020e6101ce565b604051601f8201601f19908116603f011681016001600160401b038111828210171561023c5761023c6101ce565b60405281815283820160200185101561025457600080fd5b60005b8281101561027357602081860181015183830182015201610257565b506000918101602001919091529392505050565b60008060006060848603121561029c57600080fd5b83516001600160401b038111156102b257600080fd5b6102be868287016101e4565b602086015190945090506001600160401b038111156102dc57600080fd5b6102e8868287016101e4565b925050604084015190509250925092565b600181811c9082168061030d57607f821691505b60208210810361032d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561037d57806000526020600020601f840160051c8101602085101561035a5750805b601f840160051c820191505b8181101561037a5760008155600101610366565b50505b505050565b81516001600160401b0381111561039b5761039b6101ce565b6103af816103a984546102f9565b84610333565b6020601f8211600181146103e357600083156103cb5750848201515b600019600385901b1c1916600184901b17845561037a565b600084815260208120601f198516915b8281101561041357878501518255602094850194600190920191016103f3565b50848210156104315786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561046157634e487b7160e01b600052601160045260246000fd5b92915050565b610721806104766000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056a565b60405180910390f35b6100c96100c43660046105d4565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f93660046105fe565b610236565b604051601281526020016100ad565b6100dd61011b36600461063b565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d4565b610269565b6100dd61015f36600461065d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610690565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610690565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030c565b506001949350505050565b60606004805461019990610690565b60003361022a81858561030c565b610284838383600161036b565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461030657818110156102f757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103068484848403600061036b565b50505050565b6001600160a01b03831661033657604051634b637e8f60e11b8152600060048201526024016102ee565b6001600160a01b0382166103605760405163ec442f0560e01b8152600060048201526024016102ee565b610284838383610440565b6001600160a01b0384166103955760405163e602df0560e01b8152600060048201526024016102ee565b6001600160a01b0383166103bf57604051634a1406b160e11b8152600060048201526024016102ee565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043291815260200190565b60405180910390a350505050565b6001600160a01b03831661046b57806002600082825461046091906106ca565b909155506104dd9050565b6001600160a01b038316600090815260208190526040902054818110156104be5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ee565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104f957600280548290039055610518565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055d91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b81811015610598576020818601810151604086840101520161057b565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146105cf57600080fd5b919050565b600080604083850312156105e757600080fd5b6105f0836105b8565b946020939093013593505050565b60008060006060848603121561061357600080fd5b61061c846105b8565b925061062a602085016105b8565b929592945050506040919091013590565b60006020828403121561064d57600080fd5b610656826105b8565b9392505050565b6000806040838503121561067057600080fd5b610679836105b8565b9150610687602084016105b8565b90509250929050565b600181811c908216806106a457607f821691505b6020821081036106c457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea26469706673582212207a4a2dc37219ff1111035c21b51e48d0517b3f0024c09cd3ede108c76c080a4c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB97 CODESIZE SUB DUP1 PUSH2 0xB97 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x287 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x382 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x382 JUMP JUMPDEST POP POP POP PUSH2 0x5D CALLER DUP3 PUSH2 0x65 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x467 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0 PUSH1 0x0 DUP4 DUP4 PUSH2 0xA4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x440 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x141 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x122 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH2 0x20E PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23C JUMPI PUSH2 0x23C PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x257 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE DUP7 DUP3 DUP8 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x30D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x32D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x37D JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x35A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x366 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x39B JUMPI PUSH2 0x39B PUSH2 0x1CE JUMP JUMPDEST PUSH2 0x3AF DUP2 PUSH2 0x3A9 DUP5 SLOAD PUSH2 0x2F9 JUMP JUMPDEST DUP5 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x3CB JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x37A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x413 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3F3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x431 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x461 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x721 DUP1 PUSH2 0x476 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30C JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x306 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x306 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x440 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x306 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DD SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4F9 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x598 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x57B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F0 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61C DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 POP PUSH2 0x62A PUSH1 0x20 DUP6 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x5B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x679 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x687 PUSH1 0x20 DUP5 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x4A2DC37219FF1111035C21B51E48D0517B3F0024C09CD3EDE108C7 PUSH13 0x80A4C64736F6C634300081A00 CALLER ",
							"sourceMap": "130:199:8:-:0;;;168:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;251:5;258:7;1667:5:3;:13;251:5:8;1667::3;:13;:::i;:::-;-1:-1:-1;1690:7:3;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;281:31:8::1;287:10;299:12;281:5;;;:31;;:::i;:::-;168:155:::0;;;130:199;;7458:208:3;-1:-1:-1;;;;;7528:21:3;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:3;;7601:1;7572:32;;;4263:51:10;4236:18;;7572:32:3;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:3;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:3;;-1:-1:-1;6093:540:3;;-1:-1:-1;;;;;6307:15:3;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:3;;-1:-1:-1;;;;;4772:32:10;;6386:50:3;;;4754:51:10;4821:18;;;4814:34;;;4864:18;;;4857:34;;;4727:18;;6386:50:3;4552:345:10;6336:115:3;-1:-1:-1;;;;;6571:15:3;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:3;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:3;7092:4;-1:-1:-1;;;;;7083:25:3;;7102:5;7083:25;;;;5048::10;;5036:2;5021:18;;4902:177;7083:25:3;;;;;;;;6008:1107;;;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:10;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:10;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:10;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:10;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:10;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:10:o;985:618::-;1093:6;1101;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;1205:16;;-1:-1:-1;;;;;1233:30:10;;1230:50;;;1276:1;1273;1266:12;1230:50;1299:61;1352:7;1343:6;1332:9;1328:22;1299:61;:::i;:::-;1406:2;1391:18;;1385:25;1289:71;;-1:-1:-1;1385:25:10;-1:-1:-1;;;;;;1422:32:10;;1419:52;;;1467:1;1464;1457:12;1419:52;1490:63;1545:7;1534:8;1523:9;1519:24;1490:63;:::i;:::-;1480:73;;;1593:2;1582:9;1578:18;1572:25;1562:35;;985:618;;;;;:::o;1608:380::-;1687:1;1683:12;;;;1730;;;1751:61;;1805:4;1797:6;1793:17;1783:27;;1751:61;1858:2;1850:6;1847:14;1827:18;1824:38;1821:161;;1904:10;1899:3;1895:20;1892:1;1885:31;1939:4;1936:1;1929:15;1967:4;1964:1;1957:15;1821:161;;1608:380;;;:::o;2119:518::-;2221:2;2216:3;2213:11;2210:421;;;2257:5;2254:1;2247:16;2301:4;2298:1;2288:18;2371:2;2359:10;2355:19;2352:1;2348:27;2342:4;2338:38;2407:4;2395:10;2392:20;2389:47;;;-1:-1:-1;2430:4:10;2389:47;2485:2;2480:3;2476:12;2473:1;2469:20;2463:4;2459:31;2449:41;;2540:81;2558:2;2551:5;2548:13;2540:81;;;2617:1;2603:16;;2584:1;2573:13;2540:81;;;2544:3;;2210:421;2119:518;;;:::o;2813:1299::-;2933:10;;-1:-1:-1;;;;;2955:30:10;;2952:56;;;2988:18;;:::i;:::-;3017:97;3107:6;3067:38;3099:4;3093:11;3067:38;:::i;:::-;3061:4;3017:97;:::i;:::-;3163:4;3194:2;3183:14;;3211:1;3206:649;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:10;;;3962:26;3913:89;-1:-1:-1;;2770:1:10;2766:11;;;2762:24;2758:29;2748:40;2794:1;2790:11;;;2745:57;4015:81;;3176:930;;3206:649;2066:1;2059:14;;;2103:4;2090:18;;-1:-1:-1;;3242:20:10;;;3360:222;3374:7;3371:1;3368:14;3360:222;;;3456:19;;;3450:26;3435:42;;3563:4;3548:20;;;;3516:1;3504:14;;;;3390:12;3360:222;;;3364:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:10;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;-1:-1:-1;;;;3842:1:10;3826:14;;;3822:22;3809:36;;-1:-1:-1;2813:1299:10:o;4325:222::-;4390:9;;;4411:10;;;4408:133;;;4463:10;4458:3;4454:20;4451:1;4444:31;4498:4;4495:1;4488:15;4526:4;4523:1;4516:15;4408:133;4325:222;;;;:::o;4902:177::-;130:199:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_736": {
									"entryPoint": 631,
									"id": 736,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_796": {
									"entryPoint": 875,
									"id": 796,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_844": {
									"entryPoint": 649,
									"id": 844,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_575": {
									"entryPoint": 780,
									"id": 575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_652": {
									"entryPoint": 1088,
									"id": 652,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_496": {
									"entryPoint": 540,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_409": {
									"entryPoint": null,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_391": {
									"entryPoint": 394,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_400": {
									"entryPoint": 602,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_418": {
									"entryPoint": null,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_528": {
									"entryPoint": 566,
									"id": 528,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_455": {
									"entryPoint": 617,
									"id": 455,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3594:10",
										"nodeType": "YulBlock",
										"src": "0:3594:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:406:10",
													"nodeType": "YulBlock",
													"src": "135:406:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:10",
																		"nodeType": "YulLiteral",
																		"src": "163:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:10"
																},
																"nativeSrc": "145:21:10",
																"nodeType": "YulFunctionCall",
																"src": "145:21:10"
															},
															"nativeSrc": "145:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:10"
														},
														{
															"nativeSrc": "175:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:10"
																},
																"nativeSrc": "189:13:10",
																"nodeType": "YulFunctionCall",
																"src": "189:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:10",
																	"nodeType": "YulTypedName",
																	"src": "179:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:10",
																				"nodeType": "YulLiteral",
																				"src": "233:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:10"
																		},
																		"nativeSrc": "218:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																},
																"nativeSrc": "211:34:10",
																"nodeType": "YulFunctionCall",
																"src": "211:34:10"
															},
															"nativeSrc": "211:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:10"
														},
														{
															"nativeSrc": "254:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:10",
																"nodeType": "YulLiteral",
																"src": "263:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:10",
																	"nodeType": "YulTypedName",
																	"src": "258:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:10",
																"nodeType": "YulBlock",
																"src": "323:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:10"
																							},
																							"nativeSrc": "348:17:10",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:10",
																							"nodeType": "YulLiteral",
																							"src": "367:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:10"
																					},
																					"nativeSrc": "344:26:10",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:10"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:10",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:10"
																									},
																									"nativeSrc": "382:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:10",
																									"nodeType": "YulLiteral",
																									"src": "398:2:10",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:10"
																							},
																							"nativeSrc": "378:23:10",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:10"
																					},
																					"nativeSrc": "372:30:10",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:10"
																			},
																			"nativeSrc": "337:66:10",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:10"
																		},
																		"nativeSrc": "337:66:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:10"
																},
																"nativeSrc": "281:13:10",
																"nodeType": "YulFunctionCall",
																"src": "281:13:10"
															},
															"nativeSrc": "273:140:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:10",
																"nodeType": "YulBlock",
																"src": "295:19:10",
																"statements": [
																	{
																		"nativeSrc": "297:15:10",
																		"nodeType": "YulAssignment",
																		"src": "297:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:10",
																					"nodeType": "YulLiteral",
																					"src": "309:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:10"
																			},
																			"nativeSrc": "302:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:10",
																"nodeType": "YulBlock",
																"src": "277:3:10",
																"statements": []
															},
															"src": "273:140:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:10"
																				},
																				"nativeSrc": "433:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:10",
																				"nodeType": "YulLiteral",
																				"src": "457:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:10"
																		},
																		"nativeSrc": "429:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:10",
																		"nodeType": "YulLiteral",
																		"src": "462:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:10"
																},
																"nativeSrc": "422:42:10",
																"nodeType": "YulFunctionCall",
																"src": "422:42:10"
															},
															"nativeSrc": "422:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:10"
														},
														{
															"nativeSrc": "473:62:10",
															"nodeType": "YulAssignment",
															"src": "473:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:10",
																								"nodeType": "YulLiteral",
																								"src": "516:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:10"
																						},
																						"nativeSrc": "504:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "525:2:10",
																								"nodeType": "YulLiteral",
																								"src": "525:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "521:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "521:3:10"
																						},
																						"nativeSrc": "521:7:10",
																						"nodeType": "YulFunctionCall",
																						"src": "521:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:10"
																				},
																				"nativeSrc": "500:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "500:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:10"
																		},
																		"nativeSrc": "485:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "485:45:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:2:10",
																		"nodeType": "YulLiteral",
																		"src": "532:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:54:10",
																"nodeType": "YulFunctionCall",
																"src": "481:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:527:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:10",
														"nodeType": "YulTypedName",
														"src": "104:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:10",
														"nodeType": "YulTypedName",
														"src": "115:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:10",
														"nodeType": "YulTypedName",
														"src": "126:4:10",
														"type": ""
													}
												],
												"src": "14:527:10"
											},
											{
												"body": {
													"nativeSrc": "595:124:10",
													"nodeType": "YulBlock",
													"src": "595:124:10",
													"statements": [
														{
															"nativeSrc": "605:29:10",
															"nodeType": "YulAssignment",
															"src": "605:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "627:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "614:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "614:12:10"
																},
																"nativeSrc": "614:20:10",
																"nodeType": "YulFunctionCall",
																"src": "614:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "605:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "697:16:10",
																"nodeType": "YulBlock",
																"src": "697:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "706:1:10",
																					"nodeType": "YulLiteral",
																					"src": "706:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "709:1:10",
																					"nodeType": "YulLiteral",
																					"src": "709:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "699:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:10"
																			},
																			"nativeSrc": "699:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:10"
																		},
																		"nativeSrc": "699:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "699:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "667:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "682:3:10",
																										"nodeType": "YulLiteral",
																										"src": "682:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "687:1:10",
																										"nodeType": "YulLiteral",
																										"src": "687:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "678:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "678:3:10"
																								},
																								"nativeSrc": "678:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "678:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "691:1:10",
																								"nodeType": "YulLiteral",
																								"src": "691:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "674:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:10"
																						},
																						"nativeSrc": "674:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "674:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "663:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:10"
																				},
																				"nativeSrc": "663:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "663:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "653:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "653:2:10"
																		},
																		"nativeSrc": "653:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "653:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:10"
																},
																"nativeSrc": "646:50:10",
																"nodeType": "YulFunctionCall",
																"src": "646:50:10"
															},
															"nativeSrc": "643:70:10",
															"nodeType": "YulIf",
															"src": "643:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "546:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "574:6:10",
														"nodeType": "YulTypedName",
														"src": "574:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "585:5:10",
														"nodeType": "YulTypedName",
														"src": "585:5:10",
														"type": ""
													}
												],
												"src": "546:173:10"
											},
											{
												"body": {
													"nativeSrc": "811:213:10",
													"nodeType": "YulBlock",
													"src": "811:213:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "857:16:10",
																"nodeType": "YulBlock",
																"src": "857:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "866:1:10",
																					"nodeType": "YulLiteral",
																					"src": "866:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "869:1:10",
																					"nodeType": "YulLiteral",
																					"src": "869:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "859:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:10"
																			},
																			"nativeSrc": "859:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:10"
																		},
																		"nativeSrc": "859:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "832:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "832:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "841:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "828:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:10"
																		},
																		"nativeSrc": "828:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "828:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "853:2:10",
																		"nodeType": "YulLiteral",
																		"src": "853:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "824:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:10"
																},
																"nativeSrc": "824:32:10",
																"nodeType": "YulFunctionCall",
																"src": "824:32:10"
															},
															"nativeSrc": "821:52:10",
															"nodeType": "YulIf",
															"src": "821:52:10"
														},
														{
															"nativeSrc": "882:39:10",
															"nodeType": "YulAssignment",
															"src": "882:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "911:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "911:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "892:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "892:18:10"
																},
																"nativeSrc": "892:29:10",
																"nodeType": "YulFunctionCall",
																"src": "892:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "882:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "882:6:10"
																}
															]
														},
														{
															"nativeSrc": "930:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "930:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "943:1:10",
																"nodeType": "YulLiteral",
																"src": "943:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "934:5:10",
																	"nodeType": "YulTypedName",
																	"src": "934:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "953:41:10",
															"nodeType": "YulAssignment",
															"src": "953:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "979:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "990:2:10",
																				"nodeType": "YulLiteral",
																				"src": "990:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "975:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:10"
																		},
																		"nativeSrc": "975:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "975:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "962:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "962:12:10"
																},
																"nativeSrc": "962:32:10",
																"nodeType": "YulFunctionCall",
																"src": "962:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "953:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "953:5:10"
																}
															]
														},
														{
															"nativeSrc": "1003:15:10",
															"nodeType": "YulAssignment",
															"src": "1003:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1013:5:10",
																"nodeType": "YulIdentifier",
																"src": "1013:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1003:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "724:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "769:9:10",
														"nodeType": "YulTypedName",
														"src": "769:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "780:7:10",
														"nodeType": "YulTypedName",
														"src": "780:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "792:6:10",
														"nodeType": "YulTypedName",
														"src": "792:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "800:6:10",
														"nodeType": "YulTypedName",
														"src": "800:6:10",
														"type": ""
													}
												],
												"src": "724:300:10"
											},
											{
												"body": {
													"nativeSrc": "1124:92:10",
													"nodeType": "YulBlock",
													"src": "1124:92:10",
													"statements": [
														{
															"nativeSrc": "1134:26:10",
															"nodeType": "YulAssignment",
															"src": "1134:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1146:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1146:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1157:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1142:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:10"
																},
																"nativeSrc": "1142:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1142:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1134:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1134:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1176:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1201:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1194:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1194:6:10"
																				},
																				"nativeSrc": "1194:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1194:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1187:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1187:6:10"
																		},
																		"nativeSrc": "1187:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1187:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1169:6:10"
																},
																"nativeSrc": "1169:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1169:41:10"
															},
															"nativeSrc": "1169:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1169:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1029:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1093:9:10",
														"nodeType": "YulTypedName",
														"src": "1093:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1104:6:10",
														"nodeType": "YulTypedName",
														"src": "1104:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1115:4:10",
														"nodeType": "YulTypedName",
														"src": "1115:4:10",
														"type": ""
													}
												],
												"src": "1029:187:10"
											},
											{
												"body": {
													"nativeSrc": "1322:76:10",
													"nodeType": "YulBlock",
													"src": "1322:76:10",
													"statements": [
														{
															"nativeSrc": "1332:26:10",
															"nodeType": "YulAssignment",
															"src": "1332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:10"
																},
																"nativeSrc": "1340:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1332:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1374:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1374:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1385:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1385:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1367:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:10"
																},
																"nativeSrc": "1367:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1367:25:10"
															},
															"nativeSrc": "1367:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1367:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1221:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1291:9:10",
														"nodeType": "YulTypedName",
														"src": "1291:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1302:6:10",
														"nodeType": "YulTypedName",
														"src": "1302:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1313:4:10",
														"nodeType": "YulTypedName",
														"src": "1313:4:10",
														"type": ""
													}
												],
												"src": "1221:177:10"
											},
											{
												"body": {
													"nativeSrc": "1507:270:10",
													"nodeType": "YulBlock",
													"src": "1507:270:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1553:16:10",
																"nodeType": "YulBlock",
																"src": "1553:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1562:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1562:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1565:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1565:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1555:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1555:6:10"
																			},
																			"nativeSrc": "1555:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1555:12:10"
																		},
																		"nativeSrc": "1555:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1555:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1528:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1528:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1537:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1537:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1524:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:10"
																		},
																		"nativeSrc": "1524:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1524:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1549:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1549:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1520:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1520:3:10"
																},
																"nativeSrc": "1520:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1520:32:10"
															},
															"nativeSrc": "1517:52:10",
															"nodeType": "YulIf",
															"src": "1517:52:10"
														},
														{
															"nativeSrc": "1578:39:10",
															"nodeType": "YulAssignment",
															"src": "1578:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1607:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1588:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1588:18:10"
																},
																"nativeSrc": "1588:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1588:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1578:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1578:6:10"
																}
															]
														},
														{
															"nativeSrc": "1626:48:10",
															"nodeType": "YulAssignment",
															"src": "1626:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1659:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1659:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1670:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1670:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1655:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:10"
																		},
																		"nativeSrc": "1655:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1636:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1636:18:10"
																},
																"nativeSrc": "1636:38:10",
																"nodeType": "YulFunctionCall",
																"src": "1636:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:10"
																}
															]
														},
														{
															"nativeSrc": "1683:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1683:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1696:1:10",
																"nodeType": "YulLiteral",
																"src": "1696:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1687:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1687:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1706:41:10",
															"nodeType": "YulAssignment",
															"src": "1706:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1732:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1743:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1743:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1728:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:10"
																		},
																		"nativeSrc": "1728:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1715:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:12:10"
																},
																"nativeSrc": "1715:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:10"
																}
															]
														},
														{
															"nativeSrc": "1756:15:10",
															"nodeType": "YulAssignment",
															"src": "1756:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1766:5:10",
																"nodeType": "YulIdentifier",
																"src": "1766:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1756:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1403:374:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1457:9:10",
														"nodeType": "YulTypedName",
														"src": "1457:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1468:7:10",
														"nodeType": "YulTypedName",
														"src": "1468:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1480:6:10",
														"nodeType": "YulTypedName",
														"src": "1480:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1488:6:10",
														"nodeType": "YulTypedName",
														"src": "1488:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1496:6:10",
														"nodeType": "YulTypedName",
														"src": "1496:6:10",
														"type": ""
													}
												],
												"src": "1403:374:10"
											},
											{
												"body": {
													"nativeSrc": "1879:87:10",
													"nodeType": "YulBlock",
													"src": "1879:87:10",
													"statements": [
														{
															"nativeSrc": "1889:26:10",
															"nodeType": "YulAssignment",
															"src": "1889:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1901:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1901:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1912:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1912:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1897:3:10"
																},
																"nativeSrc": "1897:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1897:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1889:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1889:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1931:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1931:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1946:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1946:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1954:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1954:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1942:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:10"
																		},
																		"nativeSrc": "1942:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1942:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:10"
																},
																"nativeSrc": "1924:36:10",
																"nodeType": "YulFunctionCall",
																"src": "1924:36:10"
															},
															"nativeSrc": "1924:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "1924:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1782:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1848:9:10",
														"nodeType": "YulTypedName",
														"src": "1848:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1859:6:10",
														"nodeType": "YulTypedName",
														"src": "1859:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1870:4:10",
														"nodeType": "YulTypedName",
														"src": "1870:4:10",
														"type": ""
													}
												],
												"src": "1782:184:10"
											},
											{
												"body": {
													"nativeSrc": "2041:116:10",
													"nodeType": "YulBlock",
													"src": "2041:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2087:16:10",
																"nodeType": "YulBlock",
																"src": "2087:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2096:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2096:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2099:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2099:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2089:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2089:6:10"
																			},
																			"nativeSrc": "2089:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2089:12:10"
																		},
																		"nativeSrc": "2089:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2089:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2062:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2062:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2071:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2071:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2058:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2058:3:10"
																		},
																		"nativeSrc": "2058:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2058:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2083:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2083:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2054:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:10"
																},
																"nativeSrc": "2054:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2054:32:10"
															},
															"nativeSrc": "2051:52:10",
															"nodeType": "YulIf",
															"src": "2051:52:10"
														},
														{
															"nativeSrc": "2112:39:10",
															"nodeType": "YulAssignment",
															"src": "2112:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2141:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2141:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2122:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2122:18:10"
																},
																"nativeSrc": "2122:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2122:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2112:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1971:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2007:9:10",
														"nodeType": "YulTypedName",
														"src": "2007:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2018:7:10",
														"nodeType": "YulTypedName",
														"src": "2018:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2030:6:10",
														"nodeType": "YulTypedName",
														"src": "2030:6:10",
														"type": ""
													}
												],
												"src": "1971:186:10"
											},
											{
												"body": {
													"nativeSrc": "2249:173:10",
													"nodeType": "YulBlock",
													"src": "2249:173:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2295:16:10",
																"nodeType": "YulBlock",
																"src": "2295:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2304:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2304:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2307:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2297:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2297:6:10"
																			},
																			"nativeSrc": "2297:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2297:12:10"
																		},
																		"nativeSrc": "2297:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2297:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2270:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2270:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2279:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2279:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2266:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:10"
																		},
																		"nativeSrc": "2266:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2291:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2291:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2262:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:10"
																},
																"nativeSrc": "2262:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2262:32:10"
															},
															"nativeSrc": "2259:52:10",
															"nodeType": "YulIf",
															"src": "2259:52:10"
														},
														{
															"nativeSrc": "2320:39:10",
															"nodeType": "YulAssignment",
															"src": "2320:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2349:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2349:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2330:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2330:18:10"
																},
																"nativeSrc": "2330:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2330:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2320:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:10"
																}
															]
														},
														{
															"nativeSrc": "2368:48:10",
															"nodeType": "YulAssignment",
															"src": "2368:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2412:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2412:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2397:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2397:3:10"
																		},
																		"nativeSrc": "2397:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2378:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2378:18:10"
																},
																"nativeSrc": "2378:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2378:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2368:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2368:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2162:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2207:9:10",
														"nodeType": "YulTypedName",
														"src": "2207:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2218:7:10",
														"nodeType": "YulTypedName",
														"src": "2218:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2230:6:10",
														"nodeType": "YulTypedName",
														"src": "2230:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2238:6:10",
														"nodeType": "YulTypedName",
														"src": "2238:6:10",
														"type": ""
													}
												],
												"src": "2162:260:10"
											},
											{
												"body": {
													"nativeSrc": "2482:325:10",
													"nodeType": "YulBlock",
													"src": "2482:325:10",
													"statements": [
														{
															"nativeSrc": "2492:22:10",
															"nodeType": "YulAssignment",
															"src": "2492:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2506:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2506:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2509:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2509:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2502:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2502:3:10"
																},
																"nativeSrc": "2502:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2502:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2492:6:10"
																}
															]
														},
														{
															"nativeSrc": "2523:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2523:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2553:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2553:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2559:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2559:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2549:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2549:3:10"
																},
																"nativeSrc": "2549:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2549:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2527:18:10",
																	"nodeType": "YulTypedName",
																	"src": "2527:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2600:31:10",
																"nodeType": "YulBlock",
																"src": "2600:31:10",
																"statements": [
																	{
																		"nativeSrc": "2602:27:10",
																		"nodeType": "YulAssignment",
																		"src": "2602:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2616:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2616:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2624:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2624:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2612:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2612:3:10"
																			},
																			"nativeSrc": "2612:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2612:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2602:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2602:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2580:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "2580:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2573:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2573:6:10"
																},
																"nativeSrc": "2573:26:10",
																"nodeType": "YulFunctionCall",
																"src": "2573:26:10"
															},
															"nativeSrc": "2570:61:10",
															"nodeType": "YulIf",
															"src": "2570:61:10"
														},
														{
															"body": {
																"nativeSrc": "2690:111:10",
																"nodeType": "YulBlock",
																"src": "2690:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2711:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2711:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2718:3:10",
																							"nodeType": "YulLiteral",
																							"src": "2718:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2723:10:10",
																							"nodeType": "YulLiteral",
																							"src": "2723:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2714:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2714:3:10"
																					},
																					"nativeSrc": "2714:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2714:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2704:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2704:6:10"
																			},
																			"nativeSrc": "2704:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2704:31:10"
																		},
																		"nativeSrc": "2704:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2755:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2755:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2758:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2758:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2748:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2748:6:10"
																			},
																			"nativeSrc": "2748:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2748:15:10"
																		},
																		"nativeSrc": "2748:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2748:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2783:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2783:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2786:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2786:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2776:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2776:6:10"
																			},
																			"nativeSrc": "2776:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2776:15:10"
																		},
																		"nativeSrc": "2776:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2776:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2646:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "2646:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2669:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2669:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2677:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2677:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2666:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2666:2:10"
																		},
																		"nativeSrc": "2666:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2666:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2643:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2643:2:10"
																},
																"nativeSrc": "2643:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2643:38:10"
															},
															"nativeSrc": "2640:161:10",
															"nodeType": "YulIf",
															"src": "2640:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2427:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2462:4:10",
														"nodeType": "YulTypedName",
														"src": "2462:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2471:6:10",
														"nodeType": "YulTypedName",
														"src": "2471:6:10",
														"type": ""
													}
												],
												"src": "2427:380:10"
											},
											{
												"body": {
													"nativeSrc": "2969:188:10",
													"nodeType": "YulBlock",
													"src": "2969:188:10",
													"statements": [
														{
															"nativeSrc": "2979:26:10",
															"nodeType": "YulAssignment",
															"src": "2979:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2991:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2987:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:10"
																},
																"nativeSrc": "2987:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2987:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2979:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2979:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3021:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3021:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3036:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3036:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3052:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3052:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3057:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3057:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3048:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3048:3:10"
																						},
																						"nativeSrc": "3048:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3048:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3061:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3061:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3044:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3044:3:10"
																				},
																				"nativeSrc": "3044:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3044:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3032:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:10"
																		},
																		"nativeSrc": "3032:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:10"
																},
																"nativeSrc": "3014:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3014:51:10"
															},
															"nativeSrc": "3014:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3014:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3085:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3085:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3096:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3096:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3081:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3081:3:10"
																		},
																		"nativeSrc": "3081:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3081:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3101:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3101:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3074:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3074:6:10"
																},
																"nativeSrc": "3074:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3074:34:10"
															},
															"nativeSrc": "3074:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3074:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3139:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:10"
																		},
																		"nativeSrc": "3124:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3144:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:10"
																},
																"nativeSrc": "3117:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3117:34:10"
															},
															"nativeSrc": "3117:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3117:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2812:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2922:9:10",
														"nodeType": "YulTypedName",
														"src": "2922:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2933:6:10",
														"nodeType": "YulTypedName",
														"src": "2933:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2941:6:10",
														"nodeType": "YulTypedName",
														"src": "2941:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2949:6:10",
														"nodeType": "YulTypedName",
														"src": "2949:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2960:4:10",
														"nodeType": "YulTypedName",
														"src": "2960:4:10",
														"type": ""
													}
												],
												"src": "2812:345:10"
											},
											{
												"body": {
													"nativeSrc": "3263:102:10",
													"nodeType": "YulBlock",
													"src": "3263:102:10",
													"statements": [
														{
															"nativeSrc": "3273:26:10",
															"nodeType": "YulAssignment",
															"src": "3273:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3285:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3285:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3296:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3296:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3281:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:10"
																},
																"nativeSrc": "3281:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3281:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3273:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3273:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3315:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3330:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3330:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3346:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3346:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3351:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3351:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3342:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3342:3:10"
																						},
																						"nativeSrc": "3342:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3342:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3355:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3355:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3338:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3338:3:10"
																				},
																				"nativeSrc": "3338:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3338:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3326:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:10"
																		},
																		"nativeSrc": "3326:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3326:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3308:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:10"
																},
																"nativeSrc": "3308:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3308:51:10"
															},
															"nativeSrc": "3308:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3308:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3162:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3232:9:10",
														"nodeType": "YulTypedName",
														"src": "3232:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3243:6:10",
														"nodeType": "YulTypedName",
														"src": "3243:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3254:4:10",
														"nodeType": "YulTypedName",
														"src": "3254:4:10",
														"type": ""
													}
												],
												"src": "3162:203:10"
											},
											{
												"body": {
													"nativeSrc": "3418:174:10",
													"nodeType": "YulBlock",
													"src": "3418:174:10",
													"statements": [
														{
															"nativeSrc": "3428:16:10",
															"nodeType": "YulAssignment",
															"src": "3428:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3439:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3439:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3442:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3442:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3435:3:10"
																},
																"nativeSrc": "3435:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3435:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3475:111:10",
																"nodeType": "YulBlock",
																"src": "3475:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3496:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3496:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3503:3:10",
																							"nodeType": "YulLiteral",
																							"src": "3503:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3508:10:10",
																							"nodeType": "YulLiteral",
																							"src": "3508:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3499:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3499:3:10"
																					},
																					"nativeSrc": "3499:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3499:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3489:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:10"
																			},
																			"nativeSrc": "3489:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3489:31:10"
																		},
																		"nativeSrc": "3489:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3489:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3540:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3540:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3543:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3543:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3533:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3533:6:10"
																			},
																			"nativeSrc": "3533:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3533:15:10"
																		},
																		"nativeSrc": "3533:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3533:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3568:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3568:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3571:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3571:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3561:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3561:6:10"
																			},
																			"nativeSrc": "3561:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3561:15:10"
																		},
																		"nativeSrc": "3561:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3561:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3459:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3459:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3462:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3462:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3456:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3456:2:10"
																},
																"nativeSrc": "3456:10:10",
																"nodeType": "YulFunctionCall",
																"src": "3456:10:10"
															},
															"nativeSrc": "3453:133:10",
															"nodeType": "YulIf",
															"src": "3453:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3370:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3401:1:10",
														"nodeType": "YulTypedName",
														"src": "3401:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3404:1:10",
														"nodeType": "YulTypedName",
														"src": "3404:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3410:3:10",
														"nodeType": "YulTypedName",
														"src": "3410:3:10",
														"type": ""
													}
												],
												"src": "3370:222:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056a565b60405180910390f35b6100c96100c43660046105d4565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f93660046105fe565b610236565b604051601281526020016100ad565b6100dd61011b36600461063b565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d4565b610269565b6100dd61015f36600461065d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610690565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610690565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030c565b506001949350505050565b60606004805461019990610690565b60003361022a81858561030c565b610284838383600161036b565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461030657818110156102f757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103068484848403600061036b565b50505050565b6001600160a01b03831661033657604051634b637e8f60e11b8152600060048201526024016102ee565b6001600160a01b0382166103605760405163ec442f0560e01b8152600060048201526024016102ee565b610284838383610440565b6001600160a01b0384166103955760405163e602df0560e01b8152600060048201526024016102ee565b6001600160a01b0383166103bf57604051634a1406b160e11b8152600060048201526024016102ee565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043291815260200190565b60405180910390a350505050565b6001600160a01b03831661046b57806002600082825461046091906106ca565b909155506104dd9050565b6001600160a01b038316600090815260208190526040902054818110156104be5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ee565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104f957600280548290039055610518565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055d91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b81811015610598576020818601810151604086840101520161057b565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146105cf57600080fd5b919050565b600080604083850312156105e757600080fd5b6105f0836105b8565b946020939093013593505050565b60008060006060848603121561061357600080fd5b61061c846105b8565b925061062a602085016105b8565b929592945050506040919091013590565b60006020828403121561064d57600080fd5b610656826105b8565b9392505050565b6000806040838503121561067057600080fd5b610679836105b8565b9150610687602084016105b8565b90509250929050565b600181811c908216806106a457607f821691505b6020821081036106c457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea26469706673582212207a4a2dc37219ff1111035c21b51e48d0517b3f0024c09cd3ede108c76c080a4c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30C JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x306 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x306 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x440 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x306 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DD SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4F9 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x518 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x598 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x57B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F0 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61C DUP5 PUSH2 0x5B8 JUMP JUMPDEST SWAP3 POP PUSH2 0x62A PUSH1 0x20 DUP6 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x5B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x679 DUP4 PUSH2 0x5B8 JUMP JUMPDEST SWAP2 POP PUSH2 0x687 PUSH1 0x20 DUP5 ADD PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x4A2DC37219FF1111035C21B51E48D0517B3F0024C09CD3EDE108C7 PUSH13 0x80A4C64736F6C634300081A00 CALLER ",
							"sourceMap": "130:199:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:10;;1187:22;1169:41;;1157:2;1142:18;3998:186:3;1029:187:10;2849:97:3;2927:12;;2849:97;;;1367:25:10;;;1355:2;1340:18;2849:97:3;1221:177:10;4776:244:3;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1924:36:10;;1912:2;1897:18;2707:82:3;1782:184:10;3004:116:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:3;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:3;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:6;4125:31:3;735:10:6;4141:7:3;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:6;4919:37:3;4935:4;735:10:6;4950:5:3;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:3;;4776:244;-1:-1:-1;;;;4776:244:3:o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:6;3438:27:3;735:10:6;3455:2:3;3459:5;3438:9;:27::i;8726:128::-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;-1:-1:-1;;;;;3657:18:3;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:37:3;;10576:310;;10656:5;10637:16;:24;10633:130;;;10688:60;;-1:-1:-1;;;10688:60:3;;-1:-1:-1;;;;;3032:32:10;;10688:60:3;;;3014:51:10;3081:18;;;3074:34;;;3124:18;;;3117:34;;;2987:18;;10688:60:3;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10504:388;10415:477;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:3;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:3;;5544:1;5517:30;;;3308:51:10;3281:18;;5517:30:3;3162:203:10;5472:86:3;-1:-1:-1;;;;;5571:16:3;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:3;;5639:1;5610:32;;;3308:51:10;3281:18;;5610:32:3;3162:203:10;5567:86:3;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;9701:432::-;-1:-1:-1;;;;;9813:19:3;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:3;;9884:1;9855:32;;;3308:51:10;3281:18;;9855:32:3;3162:203:10;9809:89:3;-1:-1:-1;;;;;9911:21:3;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:3;;9983:1;9955:31;;;3308:51:10;3281:18;;9955:31:3;3162:203:10;9907:90:3;-1:-1:-1;;;;;10006:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:3;10094:5;-1:-1:-1;;;;;10085:31:3;;10110:5;10085:31;;;;1367:25:10;;1355:2;1340:18;;1221:177;10085:31:3;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:3;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:3;;-1:-1:-1;6093:540:3;;-1:-1:-1;;;;;6307:15:3;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:3;;-1:-1:-1;;;;;3032:32:10;;6386:50:3;;;3014:51:10;3081:18;;;3074:34;;;3124:18;;;3117:34;;;2987:18;;6386:50:3;2812:345:10;6336:115:3;-1:-1:-1;;;;;6571:15:3;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:3;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:3;7092:4;-1:-1:-1;;;;;7083:25:3;;7102:5;7083:25;;;;1367::10;;1355:2;1340:18;;1221:177;7083:25:3;;;;;;;;6008:1107;;;:::o;14:527:10:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:10;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:10:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:10;1728:18;;;;1715:32;;1403:374::o;1971:186::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;2122:29;2141:9;2122:29;:::i;:::-;2112:39;1971:186;-1:-1:-1;;;1971:186:10:o;2162:260::-;2230:6;2238;2291:2;2279:9;2270:7;2266:23;2262:32;2259:52;;;2307:1;2304;2297:12;2259:52;2330:29;2349:9;2330:29;:::i;:::-;2320:39;;2378:38;2412:2;2401:9;2397:18;2378:38;:::i;:::-;2368:48;;2162:260;;;;;:::o;2427:380::-;2506:1;2502:12;;;;2549;;;2570:61;;2624:4;2616:6;2612:17;2602:27;;2570:61;2677:2;2669:6;2666:14;2646:18;2643:38;2640:161;;2723:10;2718:3;2714:20;2711:1;2704:31;2758:4;2755:1;2748:15;2786:4;2783:1;2776:15;2640:161;;2427:380;;;:::o;3370:222::-;3435:9;;;3456:10;;;3453:133;;;3508:10;3503:3;3499:20;3496:1;3489:31;3543:4;3540:1;3533:15;3571:4;3568:1;3561:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "365000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24739",
								"balanceOf(address)": "2562",
								"decimals()": "177",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51288",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 329,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 130,
									"end": 329,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 130,
									"end": 329,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 323,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 323,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 323,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 323,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 168,
									"end": 323,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 168,
									"end": 323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 168,
									"end": 323,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 251,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 258,
									"end": 265,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 251,
									"end": 256,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 281,
									"end": 312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 287,
									"end": 297,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 299,
									"end": 311,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 286,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 281,
									"end": 286,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 281,
									"end": 286,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 281,
									"end": 312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 281,
									"end": 312,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 281,
									"end": 312,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 281,
									"end": 312,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 281,
									"end": 312,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 168,
									"end": 323,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 130,
									"end": 329,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 130,
									"end": 329,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4263,
									"end": 4314,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4236,
									"end": 4254,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4236,
									"end": 4254,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4772,
									"end": 4804,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4804,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4754,
									"end": 4805,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4839,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4821,
									"end": 4839,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4839,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4848,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4848,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4848,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4864,
									"end": 4882,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4864,
									"end": 4882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4864,
									"end": 4882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4857,
									"end": 4891,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4857,
									"end": 4891,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4857,
									"end": 4891,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4727,
									"end": 4745,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4727,
									"end": 4745,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 4552,
									"end": 4897,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5048,
									"end": 5073,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5048,
									"end": 5073,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5038,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5021,
									"end": 5039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5021,
									"end": 5039,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4902,
									"end": 5079,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1093,
									"end": 1099,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1150,
									"end": 1159,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1141,
									"end": 1148,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1133,
									"end": 1165,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1178,
									"end": 1179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1176,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1233,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1233,
									"end": 1263,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1274,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1266,
									"end": 1278,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1352,
									"end": 1359,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1332,
									"end": 1341,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1328,
									"end": 1350,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1299,
									"end": 1360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1406,
									"end": 1408,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1385,
									"end": 1410,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1360,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1360,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1385,
									"end": 1410,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1422,
									"end": 1454,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1422,
									"end": 1454,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 1465,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1457,
									"end": 1469,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1545,
									"end": 1552,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1542,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1532,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1519,
									"end": 1543,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1490,
									"end": 1553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1595,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1591,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1578,
									"end": 1596,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1572,
									"end": 1597,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1562,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1562,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1687,
									"end": 1688,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1805,
									"end": 1809,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1797,
									"end": 1803,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1793,
									"end": 1810,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1783,
									"end": 1810,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1783,
									"end": 1810,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1858,
									"end": 1860,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1856,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1847,
									"end": 1861,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1845,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1824,
									"end": 1862,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1904,
									"end": 1914,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1899,
									"end": 1902,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1895,
									"end": 1915,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1916,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1939,
									"end": 1943,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1936,
									"end": 1937,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1929,
									"end": 1944,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 1971,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1964,
									"end": 1965,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 1972,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2223,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2216,
									"end": 2219,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2224,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2257,
									"end": 2262,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2254,
									"end": 2255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2247,
									"end": 2263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2301,
									"end": 2305,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2298,
									"end": 2299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2306,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2359,
									"end": 2369,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2374,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2352,
									"end": 2353,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2348,
									"end": 2375,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2342,
									"end": 2346,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2338,
									"end": 2376,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2411,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2395,
									"end": 2405,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2392,
									"end": 2412,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2430,
									"end": 2434,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2485,
									"end": 2487,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2488,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2473,
									"end": 2474,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2469,
									"end": 2489,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2490,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2449,
									"end": 2490,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2449,
									"end": 2490,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2558,
									"end": 2560,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2551,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2548,
									"end": 2561,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2617,
									"end": 2618,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2584,
									"end": 2585,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2573,
									"end": 2586,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2813,
									"end": 4112,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2813,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2933,
									"end": 2943,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2933,
									"end": 2943,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2955,
									"end": 2985,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 2985,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2988,
									"end": 3006,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3107,
									"end": 3113,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 3099,
									"end": 3103,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3093,
									"end": 3104,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3067,
									"end": 3105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3061,
									"end": 3065,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3017,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3163,
									"end": 3167,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3194,
									"end": 3196,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3183,
									"end": 3197,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3183,
									"end": 3197,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3211,
									"end": 3212,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2762,
									"end": 2786,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2758,
									"end": 2787,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2748,
									"end": 2788,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 2795,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2745,
									"end": 2802,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3176,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 3176,
									"end": 4106,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2066,
									"end": 2067,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3374,
									"end": 3381,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3371,
									"end": 3372,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3368,
									"end": 3382,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3450,
									"end": 3476,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3477,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3477,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3567,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3516,
									"end": 3517,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3390,
									"end": 3402,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3364,
									"end": 3367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2813,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4547,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 4325,
									"end": 4547,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4399,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4399,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4390,
									"end": 4399,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4411,
									"end": 4421,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4411,
									"end": 4421,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4411,
									"end": 4421,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4408,
									"end": 4541,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4408,
									"end": 4541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4408,
									"end": 4541,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4463,
									"end": 4473,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 4458,
									"end": 4461,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 4454,
									"end": 4474,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4452,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4444,
									"end": 4475,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4498,
									"end": 4502,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 4495,
									"end": 4496,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4488,
									"end": 4503,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4530,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4523,
									"end": 4524,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4516,
									"end": 4531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4408,
									"end": 4541,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4408,
									"end": 4541,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4547,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4547,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4547,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4902,
									"end": 5079,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4902,
									"end": 5079,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 130,
									"end": 329,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 329,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 130,
									"end": 329,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 329,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 329,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 130,
									"end": 329,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 329,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a4a2dc37219ff1111035c21b51e48d0517b3f0024c09cd3ede108c76c080a4c64736f6c634300081a0033",
									".code": [
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 329,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 329,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1029,
											"end": 1216,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1782,
											"end": 1966,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3359,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3162,
											"end": 3365,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3064,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3074,
											"end": 3108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2812,
											"end": 3157,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 541,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 521,
											"end": 528,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 529,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 485,
											"end": 530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 481,
											"end": 535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 473,
											"end": 535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 546,
											"end": 719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 614,
											"end": 634,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 614,
											"end": 634,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 663,
											"end": 694,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 653,
											"end": 695,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 643,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 699,
											"end": 711,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 643,
											"end": 713,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 832,
											"end": 839,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 828,
											"end": 851,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 824,
											"end": 856,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 821,
											"end": 873,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 821,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 859,
											"end": 871,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 821,
											"end": 873,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 892,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 892,
											"end": 921,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 882,
											"end": 921,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 962,
											"end": 994,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 962,
											"end": 994,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 724,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1551,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1535,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1547,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1567,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1588,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1636,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1674,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1674,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 2157,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1971,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2054,
											"end": 2086,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2101,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2122,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2122,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2151,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 2157,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2309,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2330,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2359,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2378,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2624,
											"end": 2628,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2612,
											"end": 2629,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2570,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2681,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2733,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2714,
											"end": 2734,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2748,
											"end": 2763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2790,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2791,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3586,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3453,
											"end": 3586,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3499,
											"end": 3519,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3533,
											"end": 3548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3568,
											"end": 3569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3576,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"ICO/Erc20.sol",
								"ICO/IcoOptimized.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ICO/Erc20.sol\":\"icotoken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ICO/Erc20.sol\":{\"keccak256\":\"0xe42770ced11fcabba52fb18828608fb070140ebc0c2d4d10b445b1decf38ccbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb74a5af2335b2113b913d8781b78b3ee1c0885129c1e0fdd54c6ea240538ca\",\"dweb:/ipfs/QmPP7Nx1MNasWwnUpms3gewsoT5EkY7CaKCE7GBYhD1fjM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 353,
								"contract": "ICO/Erc20.sol:icotoken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 359,
								"contract": "ICO/Erc20.sol:icotoken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 361,
								"contract": "ICO/Erc20.sol:icotoken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 363,
								"contract": "ICO/Erc20.sol:icotoken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 365,
								"contract": "ICO/Erc20.sol:icotoken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ICO/IcoOptimized.sol": {
				"ICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract icotoken",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_softCapInUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hardCapInUSD",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_priceFeedBNB",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedUSDT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeedUSDC",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "totalTokensSold",
									"type": "uint256"
								}
							],
							"name": "ICOFinalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								}
							],
							"name": "ImmediateFinalization",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								}
							],
							"name": "NewSaleCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "RefundInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "airdroppedAmount",
									"type": "uint256"
								}
							],
							"name": "TokenAirdropped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "saleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPurchaseAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								}
							],
							"name": "_getPriceFeed",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "calculatePaymentAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "paymentMethod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "contributionsInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPriceUSD",
									"type": "uint256"
								}
							],
							"name": "createSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalizeICO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentSaleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHardCapReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getInvestorCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "investorCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_saleId",
									"type": "uint256"
								}
							],
							"name": "getSaleStartEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSoftCapReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hardCapInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateRefund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "investorPayments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "investors",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isICOFinalized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isTokensAirdropped",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "paymentMethodForInvestor",
							"outputs": [
								{
									"internalType": "enum ICO.PaymentMethod",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedBNB",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedUSDC",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeedUSDT",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "sales",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenPriceUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokensSold",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isFinalized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "softCapInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract icotoken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokensBoughtByInvestor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFundsRaisedUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ICO/IcoOptimized.sol\":270:13491  contract ICO is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"ICO/IcoOptimized.sol\":1032:1066  bool public isICOFinalized = false */\n  0x0b\n  dup1\n  sload\n  not(0xffff)\n    /* \"ICO/IcoOptimized.sol\":1072:1110  bool public isTokensAirdropped = false */\n  and\n  swap1\n  sstore\n    /* \"ICO/IcoOptimized.sol\":2341:2945  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ICO/IcoOptimized.sol\":2595:2605  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1540:1591   */\n  mstore\n    /* \"#utility.yul\":1513:1531   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup1\n  sstore\n    /* \"ICO/IcoOptimized.sol\":2617:2622  token */\n  0x05\n    /* \"ICO/IcoOptimized.sol\":2617:2631  token = _token */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap11\n  dup12\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ICO/IcoOptimized.sol\":2641:2653  softCapInUSD */\n  0x06\n    /* \"ICO/IcoOptimized.sol\":2641:2669  softCapInUSD = _softCapInUSD */\n  swap6\n  swap1\n  swap6\n  sstore\n    /* \"ICO/IcoOptimized.sol\":2679:2691  hardCapInUSD */\n  0x07\n    /* \"ICO/IcoOptimized.sol\":2679:2707  hardCapInUSD = _hardCapInUSD */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"ICO/IcoOptimized.sol\":2717:2721  usdt */\n  0x0d\n    /* \"ICO/IcoOptimized.sol\":2717:2729  usdt = _usdt */\n  dup1\n  sload\n  dup6\n  and\n  swap7\n  dup9\n  and\n  swap7\n  swap1\n  swap7\n  or\n  swap1\n  swap6\n  sstore\n    /* \"ICO/IcoOptimized.sol\":2739:2743  usdc */\n  0x0e\n    /* \"ICO/IcoOptimized.sol\":2739:2751  usdc = _usdc */\n  dup1\n  sload\n  dup5\n  and\n  swap5\n  dup8\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ICO/IcoOptimized.sol\":2761:2773  priceFeedBNB */\n  0x02\n    /* \"ICO/IcoOptimized.sol\":2761:2812  priceFeedBNB = AggregatorV3Interface(_priceFeedBNB) */\n  dup1\n  sload\n  dup4\n  and\n  swap4\n  dup7\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n  0x03\n    /* \"ICO/IcoOptimized.sol\":2822:2875  priceFeedUSDT = AggregatorV3Interface(_priceFeedUSDT) */\n  dup1\n  sload\n  dup3\n  and\n  swap4\n  dup6\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n  0x04\n    /* \"ICO/IcoOptimized.sol\":2885:2938  priceFeedUSDC = AggregatorV3Interface(_priceFeedUSDC) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"ICO/IcoOptimized.sol\":270:13491  contract ICO is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:155   */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":99:130   */\n  dup2\n  and\n    /* \"#utility.yul\":89:131   */\n  dup2\n  eq\n    /* \"#utility.yul\":79:149   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":145:146   */\n  0x00\n    /* \"#utility.yul\":142:143   */\n  dup1\n    /* \"#utility.yul\":135:147   */\n  revert\n    /* \"#utility.yul\":79:149   */\ntag_20:\n    /* \"#utility.yul\":14:155   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":160:1389   */\ntag_3:\n    /* \"#utility.yul\":310:316   */\n  0x00\n    /* \"#utility.yul\":318:324   */\n  dup1\n    /* \"#utility.yul\":326:332   */\n  0x00\n    /* \"#utility.yul\":334:340   */\n  dup1\n    /* \"#utility.yul\":342:348   */\n  0x00\n    /* \"#utility.yul\":350:356   */\n  dup1\n    /* \"#utility.yul\":358:364   */\n  0x00\n    /* \"#utility.yul\":366:372   */\n  dup1\n    /* \"#utility.yul\":419:422   */\n  0x0100\n    /* \"#utility.yul\":407:416   */\n  dup10\n    /* \"#utility.yul\":398:405   */\n  dup12\n    /* \"#utility.yul\":394:417   */\n  sub\n    /* \"#utility.yul\":390:423   */\n  slt\n    /* \"#utility.yul\":387:440   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":436:437   */\n  0x00\n    /* \"#utility.yul\":433:434   */\n  dup1\n    /* \"#utility.yul\":426:438   */\n  revert\n    /* \"#utility.yul\":387:440   */\ntag_22:\n    /* \"#utility.yul\":468:477   */\n  dup9\n    /* \"#utility.yul\":462:478   */\n  mload\n    /* \"#utility.yul\":487:528   */\n  tag_23\n    /* \"#utility.yul\":522:527   */\n  dup2\n    /* \"#utility.yul\":487:528   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":597:599   */\n  0x20\n    /* \"#utility.yul\":582:600   */\n  dup11\n  add\n    /* \"#utility.yul\":576:601   */\n  mload\n    /* \"#utility.yul\":547:552   */\n  swap1\n  swap9\n  pop\n    /* \"#utility.yul\":610:653   */\n  tag_24\n    /* \"#utility.yul\":576:601   */\n  dup2\n    /* \"#utility.yul\":610:653   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":724:726   */\n  0x40\n    /* \"#utility.yul\":709:727   */\n  dup11\n  add\n    /* \"#utility.yul\":703:728   */\n  mload\n    /* \"#utility.yul\":672:679   */\n  swap1\n  swap8\n  pop\n    /* \"#utility.yul\":737:780   */\n  tag_25\n    /* \"#utility.yul\":703:728   */\n  dup2\n    /* \"#utility.yul\":737:780   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":872:874   */\n  0x60\n    /* \"#utility.yul\":857:875   */\n  dup11\n  add\n    /* \"#utility.yul\":851:876   */\n  mload\n    /* \"#utility.yul\":968:971   */\n  0x80\n    /* \"#utility.yul\":953:972   */\n  dup12\n  add\n    /* \"#utility.yul\":947:973   */\n  mload\n    /* \"#utility.yul\":1044:1047   */\n  0xa0\n    /* \"#utility.yul\":1029:1048   */\n  dup13\n  add\n    /* \"#utility.yul\":1023:1049   */\n  mload\n    /* \"#utility.yul\":799:806   */\n  swap3\n  swap9\n  pop\n    /* \"#utility.yul\":851:876   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":947:973   */\n  swap5\n  pop\n    /* \"#utility.yul\":1058:1101   */\n  tag_26\n    /* \"#utility.yul\":1023:1049   */\n  dup2\n    /* \"#utility.yul\":1058:1101   */\n  tag_17\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":1172:1175   */\n  0xc0\n    /* \"#utility.yul\":1157:1176   */\n  dup11\n  add\n    /* \"#utility.yul\":1151:1177   */\n  mload\n    /* \"#utility.yul\":1120:1127   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1186:1229   */\n  tag_27\n    /* \"#utility.yul\":1151:1177   */\n  dup2\n    /* \"#utility.yul\":1186:1229   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":1300:1303   */\n  0xe0\n    /* \"#utility.yul\":1285:1304   */\n  dup11\n  add\n    /* \"#utility.yul\":1279:1305   */\n  mload\n    /* \"#utility.yul\":1248:1255   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":1314:1357   */\n  tag_28\n    /* \"#utility.yul\":1279:1305   */\n  dup2\n    /* \"#utility.yul\":1314:1357   */\n  tag_17\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1376:1383   */\n  dup1\n    /* \"#utility.yul\":1366:1383   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":160:1389   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  swap1\n  swap4\n  swap7\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1394:1597   */\ntag_18:\n    /* \"ICO/IcoOptimized.sol\":270:13491  contract ICO is Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ICO/IcoOptimized.sol\":270:13491  contract ICO is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xc211e1f9\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xdf4e0593\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xdf4e0593\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe8e87389\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xefdcdb45\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0xc211e1f9\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc81ffdea\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd1f3b23e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd3d9d1e4\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x960524e3\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x960524e3\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x99131e7e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa1e89aec\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb5f522f7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc1560a14\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x91152c5c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91d8730a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x940c333e\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x3e413bee\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x63b20117\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x63b20117\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6c1909ed\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x721bc38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7fb12001\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x3e413bee\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3feb5f2b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4dee1dc3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x62a469e9\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x212ea247\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x212ea247\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2151206e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23cc75a8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x05834e67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06e4d36f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x115afc3a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x117d260f\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ICO/IcoOptimized.sol\":12587:12629  revert(\"Direct BNB transfers not allowed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":12587:12629  revert(\"Direct BNB transfers not allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:328   */\n      0x44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:329   */\n      mstore\n        /* \"#utility.yul\":346:364   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":12587:12629  revert(\"Direct BNB transfers not allowed\") */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ICO/IcoOptimized.sol\":270:13491  contract ICO is Ownable, ReentrancyGuard {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ICO/IcoOptimized.sol\":4788:5935  function calculateTokenAmount(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1014:1039   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n        /* \"ICO/IcoOptimized.sol\":4788:5935  function calculateTokenAmount(... */\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ICO/IcoOptimized.sol\":13092:13209  function getSoftCapReached() public view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n        /* \"ICO/IcoOptimized.sol\":13189:13201  softCapInUSD */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":13166:13185  totalFundsRaisedUSD */\n      sload(0x09)\n        /* \"ICO/IcoOptimized.sol\":13166:13201  totalFundsRaisedUSD >= softCapInUSD */\n      lt\n      iszero\n        /* \"ICO/IcoOptimized.sol\":13092:13209  function getSoftCapReached() public view returns (bool) {... */\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":1215:1229   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1208:1230   */\n      iszero\n        /* \"#utility.yul\":1190:1231   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1163:1181   */\n      add\n        /* \"ICO/IcoOptimized.sol\":13092:13209  function getSoftCapReached() public view returns (bool) {... */\n      tag_54\n        /* \"#utility.yul\":1050:1237   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":3061:3694  function _getPriceFeed(PaymentMethod paymentMethod)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_50\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":5938:7065  function calculatePaymentAmount(PaymentMethod paymentMethod, uint256 tokenAmount) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_50\n      tag_70\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":12639:12730  function getCurrentSaleId() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n        /* \"ICO/IcoOptimized.sol\":12714:12723  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":12639:12730  function getCurrentSaleId() public view returns (uint256) {... */\n      jump(tag_50)\n        /* \"ICO/IcoOptimized.sol\":776:803  uint256 public softCapInUSD */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_50\n      sload(0x06)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":9255:9581  function finalizeICO() public nonReentrant onlyOwner icoNotFinalized {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"ICO/IcoOptimized.sol\":1203:1222  address public usdt */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      sload(0x0d)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_85:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1806:1838   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1788:1839   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1776:1778   */\n      0x20\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"ICO/IcoOptimized.sol\":1203:1222  address public usdt */\n      tag_54\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":1228:1247  address public usdc */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      sload(0x0e)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1171:1197  address[] public investors */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_85\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":1072:1110  bool public isTokensAirdropped = false */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      sload(0x0b)\n      tag_57\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":394:436  AggregatorV3Interface public priceFeedUSDT */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      sload(0x03)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":912:942  uint256 public totalTokensSold */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_50\n      sload(0x0a)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":3932:4782  function createSale(... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_82\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_82\n      tag_119\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":872:906  uint256 public totalFundsRaisedUSD */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_50\n      sload(0x09)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":11010:12552  function initiateRefund() external nonReentrant onlyOwner icoNotFinalized  {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_82\n      tag_126\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_85)\n        /* \"ICO/IcoOptimized.sol\":10257:11004  function airdropTokens() external nonReentrant onlyOwner icoNotFinalized {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_82\n      tag_133\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":13215:13332  function getHardCapReached() public view returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n        /* \"ICO/IcoOptimized.sol\":13312:13324  hardCapInUSD */\n      sload(0x07)\n        /* \"ICO/IcoOptimized.sol\":13289:13308  totalFundsRaisedUSD */\n      sload(0x09)\n        /* \"ICO/IcoOptimized.sol\":13289:13324  totalFundsRaisedUSD == hardCapInUSD */\n      eq\n        /* \"ICO/IcoOptimized.sol\":13215:13332  function getHardCapReached() public view returns (bool) {... */\n      jump(tag_57)\n        /* \"ICO/IcoOptimized.sol\":7072:9249  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount) external payable icoNotFinalized {... */\n    tag_23:\n      tag_82\n      tag_139\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":13338:13489  function getInvestorCount() public view returns (uint256 investorCount) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n        /* \"ICO/IcoOptimized.sol\":13436:13445  investors */\n      0x0c\n        /* \"ICO/IcoOptimized.sol\":13436:13452  investors.length */\n      sload\n        /* \"ICO/IcoOptimized.sol\":13338:13489  function getInvestorCount() public view returns (uint256 investorCount) {... */\n      jump(tag_50)\n        /* \"ICO/IcoOptimized.sol\":347:388  AggregatorV3Interface public priceFeedBNB */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      sload(0x02)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":842:866  uint256 public saleCount */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_50\n      sload(0x08)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1270:1307  mapping(uint256 => Sale) public sales */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      tag_155\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_155:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup6\n      jump\n    tag_154:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3041:3066   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":3097:3099   */\n      0x20\n        /* \"#utility.yul\":3082:3100   */\n      dup7\n      add\n        /* \"#utility.yul\":3075:3109   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3125:3143   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":3118:3152   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3183:3185   */\n      0x60\n        /* \"#utility.yul\":3168:3186   */\n      dup4\n      add\n        /* \"#utility.yul\":3161:3195   */\n      mstore\n        /* \"#utility.yul\":3239:3253   */\n      iszero\n        /* \"#utility.yul\":3232:3254   */\n      iszero\n        /* \"#utility.yul\":3226:3229   */\n      0x80\n        /* \"#utility.yul\":3211:3230   */\n      dup3\n      add\n        /* \"#utility.yul\":3204:3255   */\n      mstore\n        /* \"#utility.yul\":3028:3031   */\n      0xa0\n        /* \"#utility.yul\":3013:3032   */\n      add\n        /* \"ICO/IcoOptimized.sol\":1270:1307  mapping(uint256 => Sale) public sales */\n      tag_54\n        /* \"#utility.yul\":2788:3261   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":809:836  uint256 public hardCapInUSD */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_50\n      sload(0x07)\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":12854:13086  function getSaleStartEndTime(uint256 _saleId)... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_165:\n      pop\n        /* \"ICO/IcoOptimized.sol\":13022:13031  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":12945:12963  uint256 _startTime */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":13016:13032  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":13016:13021  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":13016:13032  sales[saleCount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":12997:13032  Sale memory sale = sales[saleCount] */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x80\n      swap1\n      swap2\n      add\n      mstore\n      swap1\n      swap2\n        /* \"ICO/IcoOptimized.sol\":12854:13086  function getSaleStartEndTime(uint256 _saleId)... */\n      jump\n    tag_164:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3440:3465   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3496:3498   */\n      0x20\n        /* \"#utility.yul\":3481:3499   */\n      dup4\n      add\n        /* \"#utility.yul\":3474:3508   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3413:3431   */\n      add\n        /* \"ICO/IcoOptimized.sol\":12854:13086  function getSaleStartEndTime(uint256 _saleId)... */\n      tag_54\n        /* \"#utility.yul\":3266:3514   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":1313:1366  mapping(address => uint256) public contributionsInUSD */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_50\n      tag_171\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_171:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1032:1066  bool public isICOFinalized = false */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      sload(0x0b)\n      tag_57\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":442:484  AggregatorV3Interface public priceFeedUSDC */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      sload(0x04)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1501:1566  mapping(address => PaymentMethod) public paymentMethodForInvestor */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_184\n      tag_185\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_185:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_184:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":1372:1429  mapping(address => uint256) public tokensBoughtByInvestor */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_50\n      tag_191\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_191:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":1573:1650  mapping(address => mapping(PaymentMethod => uint256)) public investorPayments */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      tag_50\n      tag_196\n      calldatasize\n      0x04\n      tag_197\n      jump\t// in\n    tag_196:\n      0x14\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_82\n      tag_202\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_202:\n      tag_203\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":749:770  icotoken public token */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      sload(0x05)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ICO/IcoOptimized.sol\":4788:5935  function calculateTokenAmount(... */\n    tag_53:\n        /* \"ICO/IcoOptimized.sol\":4916:4923  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":4935:4947  int256 price */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":980:984  1e10 */\n      0x02540be400\n        /* \"ICO/IcoOptimized.sol\":4950:4978  _getPriceFeed(paymentMethod) */\n      tag_210\n        /* \"ICO/IcoOptimized.sol\":4964:4977  paymentMethod */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":4950:4963  _getPriceFeed */\n      tag_65\n        /* \"ICO/IcoOptimized.sol\":4950:4978  _getPriceFeed(paymentMethod) */\n      jump\t// in\n    tag_210:\n        /* \"ICO/IcoOptimized.sol\":4950:4999  _getPriceFeed(paymentMethod)*int256(PRECISION_10) */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"ICO/IcoOptimized.sol\":4935:4999  int256 price = _getPriceFeed(paymentMethod)*int256(PRECISION_10) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":5025:5026  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5017:5022  price */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":5017:5026  price > 0 */\n      sgt\n        /* \"ICO/IcoOptimized.sol\":5009:5049  require(price > 0, \"Invalid price feed\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5582:5584   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":5009:5049  require(price > 0, \"Invalid price feed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5564:5585   */\n      mstore\n        /* \"#utility.yul\":5621:5623   */\n      0x12\n        /* \"#utility.yul\":5601:5619   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5594:5624   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1c9a58d94819995959)\n        /* \"#utility.yul\":5640:5658   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5633:5681   */\n      mstore\n        /* \"#utility.yul\":5698:5716   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":5009:5049  require(price > 0, \"Invalid price feed\") */\n      tag_47\n        /* \"#utility.yul\":5380:5722   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":5009:5049  require(price > 0, \"Invalid price feed\") */\n    tag_213:\n        /* \"ICO/IcoOptimized.sol\":5060:5081  uint256 currentSaleId */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5084:5102  getCurrentSaleId() */\n      tag_216\n        /* \"ICO/IcoOptimized.sol\":12714:12723  saleCount */\n      sload(0x08)\n      swap1\n        /* \"ICO/IcoOptimized.sol\":12639:12730  function getCurrentSaleId() public view returns (uint256) {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":5084:5102  getCurrentSaleId() */\n    tag_216:\n        /* \"ICO/IcoOptimized.sol\":5112:5129  Sale storage sale */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5132:5152  sales[currentSaleId] */\n      dup2\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":5132:5137  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":5132:5152  sales[currentSaleId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":5189:5207  sale.tokenPriceUSD */\n      0x02\n      dup2\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":5060:5102  uint256 currentSaleId = getCurrentSaleId() */\n      swap3\n      swap4\n      pop\n        /* \"ICO/IcoOptimized.sol\":5132:5152  sales[currentSaleId] */\n      swap2\n        /* \"ICO/IcoOptimized.sol\":5189:5207  sale.tokenPriceUSD */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":5112:5129  Sale storage sale */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":5291:5304  paymentMethod */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":5291:5325  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_221\n      tag_219\n      jump\t// in\n    tag_221:\n      sub\n        /* \"ICO/IcoOptimized.sol\":5287:5808  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_222\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":1022:1026  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":5363:5393  uint256(price) * paymentAmount */\n      tag_223\n        /* \"ICO/IcoOptimized.sol\":5380:5393  paymentAmount */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":5371:5376  price */\n      dup8\n        /* \"ICO/IcoOptimized.sol\":5363:5393  uint256(price) * paymentAmount */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"ICO/IcoOptimized.sol\":5362:5418  (uint256(price) * paymentAmount) / uint256(PRECISION_18) */\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"ICO/IcoOptimized.sol\":5341:5418  paymentAmountInUSD = (uint256(price) * paymentAmount) / uint256(PRECISION_18) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":5287:5808  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_245)\n    tag_222:\n        /* \"ICO/IcoOptimized.sol\":5458:5476  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":5441:5454  paymentMethod */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":5441:5476  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_231\n      tag_219\n      jump\t// in\n    tag_231:\n      eq\n        /* \"ICO/IcoOptimized.sol\":5441:5515  paymentMethod == PaymentMethod.USDC || paymentMethod == PaymentMethod.USDT */\n      dup1\n      tag_232\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":5497:5515  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":5480:5493  paymentMethod */\n      dup9\n        /* \"ICO/IcoOptimized.sol\":5480:5515  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_236\n      tag_219\n      jump\t// in\n    tag_236:\n      eq\n        /* \"ICO/IcoOptimized.sol\":5441:5515  paymentMethod == PaymentMethod.USDC || paymentMethod == PaymentMethod.USDT */\n    tag_232:\n        /* \"ICO/IcoOptimized.sol\":5437:5808  if (paymentMethod == PaymentMethod.USDC || paymentMethod == PaymentMethod.USDT) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":5556:5557  6 */\n      0x06\n        /* \"ICO/IcoOptimized.sol\":5527:5553  uint256 stablecoinDecimals */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5617:5640  18 - stablecoinDecimals */\n      tag_238\n        /* \"ICO/IcoOptimized.sol\":5556:5557  6 */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":5617:5619  18 */\n      0x12\n        /* \"ICO/IcoOptimized.sol\":5617:5640  18 - stablecoinDecimals */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"ICO/IcoOptimized.sol\":5612:5641  10**(18 - stablecoinDecimals) */\n      tag_240\n      swap1\n        /* \"ICO/IcoOptimized.sol\":5612:5614  10 */\n      0x0a\n        /* \"ICO/IcoOptimized.sol\":5612:5641  10**(18 - stablecoinDecimals) */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"ICO/IcoOptimized.sol\":5595:5642  paymentAmount * (10**(18 - stablecoinDecimals)) */\n      tag_242\n      swap1\n        /* \"ICO/IcoOptimized.sol\":5595:5608  paymentAmount */\n      dup11\n        /* \"ICO/IcoOptimized.sol\":5595:5642  paymentAmount * (10**(18 - stablecoinDecimals)) */\n      tag_224\n      jump\t// in\n    tag_242:\n        /* \"ICO/IcoOptimized.sol\":5568:5642  uint256 normalizedAmount = paymentAmount * (10**(18 - stablecoinDecimals)) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":1022:1026  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":5675:5708  uint256(price) * normalizedAmount */\n      tag_243\n        /* \"ICO/IcoOptimized.sol\":5568:5642  uint256 normalizedAmount = paymentAmount * (10**(18 - stablecoinDecimals)) */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":5683:5688  price */\n      dup10\n        /* \"ICO/IcoOptimized.sol\":5675:5708  uint256(price) * normalizedAmount */\n      tag_224\n      jump\t// in\n    tag_243:\n        /* \"ICO/IcoOptimized.sol\":5674:5733  (uint256(price) * normalizedAmount) / uint256(PRECISION_18) */\n      tag_244\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_244:\n        /* \"ICO/IcoOptimized.sol\":5653:5733  paymentAmountInUSD = (uint256(price) * normalizedAmount) / uint256(PRECISION_18) */\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":5517:5745  {... */\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":5437:5808  if (paymentMethod == PaymentMethod.USDC || paymentMethod == PaymentMethod.USDT) {... */\n      jump(tag_245)\n    tag_237:\n        /* \"ICO/IcoOptimized.sol\":5761:5797  revert(\"Unsupported payment method\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7880:7882   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":5761:5797  revert(\"Unsupported payment method\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7862:7883   */\n      mstore\n        /* \"#utility.yul\":7919:7921   */\n      0x1a\n        /* \"#utility.yul\":7899:7917   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7892:7922   */\n      mstore\n        /* \"#utility.yul\":7958:7986   */\n      0x556e737570706f72746564207061796d656e74206d6574686f64000000000000\n        /* \"#utility.yul\":7938:7956   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7931:7987   */\n      mstore\n        /* \"#utility.yul\":8004:8022   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":5761:5797  revert(\"Unsupported payment method\") */\n      tag_47\n        /* \"#utility.yul\":7678:8028   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":5437:5808  if (paymentMethod == PaymentMethod.USDC || paymentMethod == PaymentMethod.USDT) {... */\n    tag_245:\n        /* \"ICO/IcoOptimized.sol\":5818:5837  uint256 tokenAmount */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":5885:5900  tokenPriceInUSD */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":5840:5882  paymentAmountInUSD * uint256(PRECISION_18) */\n      tag_248\n        /* \"ICO/IcoOptimized.sol\":1022:1026  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":5840:5858  paymentAmountInUSD */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":5840:5882  paymentAmountInUSD * uint256(PRECISION_18) */\n      tag_224\n      jump\t// in\n    tag_248:\n        /* \"ICO/IcoOptimized.sol\":5839:5900  (paymentAmountInUSD * uint256(PRECISION_18))/ tokenPriceInUSD */\n      tag_249\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_249:\n        /* \"ICO/IcoOptimized.sol\":5818:5900  uint256 tokenAmount =(paymentAmountInUSD * uint256(PRECISION_18))/ tokenPriceInUSD */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":4788:5935  function calculateTokenAmount(... */\n    tag_209:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":3061:3694  function _getPriceFeed(PaymentMethod paymentMethod)... */\n    tag_65:\n        /* \"ICO/IcoOptimized.sol\":3158:3164  int256 */\n      0x00\n      dup1\n        /* \"ICO/IcoOptimized.sol\":3184:3197  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":3184:3218  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_255\n      tag_219\n      jump\t// in\n    tag_255:\n      sub\n        /* \"ICO/IcoOptimized.sol\":3180:3326  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_256\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":3259:3271  priceFeedBNB */\n      sload(0x02)\n        /* \"ICO/IcoOptimized.sol\":3259:3289  priceFeedBNB.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ICO/IcoOptimized.sol\":3237:3249  int256 price */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":3259:3271  priceFeedBNB */\n      and\n      swap2\n        /* \"ICO/IcoOptimized.sol\":3259:3287  priceFeedBNB.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"ICO/IcoOptimized.sol\":3259:3289  priceFeedBNB.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ICO/IcoOptimized.sol\":3259:3271  priceFeedBNB */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":3259:3289  priceFeedBNB.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      pop\n        /* \"ICO/IcoOptimized.sol\":3234:3289  (, int256 price, , , ) = priceFeedBNB.latestRoundData() */\n      swap2\n      swap7\n        /* \"ICO/IcoOptimized.sol\":3061:3694  function _getPriceFeed(PaymentMethod paymentMethod)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":3180:3326  if (paymentMethod == PaymentMethod.BNB) {... */\n    tag_256:\n        /* \"ICO/IcoOptimized.sol\":3357:3375  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":3340:3353  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":3340:3375  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_264\n      jumpi\n      tag_264\n      tag_219\n      jump\t// in\n    tag_264:\n      sub\n        /* \"ICO/IcoOptimized.sol\":3336:3484  if (paymentMethod == PaymentMethod.USDT) {... */\n      tag_265\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":3416:3429  priceFeedUSDT */\n      sload(0x03)\n        /* \"ICO/IcoOptimized.sol\":3416:3447  priceFeedUSDT.latestRoundData() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x3fabe5a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ICO/IcoOptimized.sol\":3394:3406  int256 price */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":3416:3429  priceFeedUSDT */\n      and\n      swap2\n        /* \"ICO/IcoOptimized.sol\":3416:3445  priceFeedUSDT.latestRoundData */\n      0xfeaf968c\n      swap2\n        /* \"ICO/IcoOptimized.sol\":3416:3447  priceFeedUSDT.latestRoundData() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ICO/IcoOptimized.sol\":3416:3429  priceFeedUSDT */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":3416:3447  priceFeedUSDT.latestRoundData() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ICO/IcoOptimized.sol\":3336:3484  if (paymentMethod == PaymentMethod.USDT) {... */\n    tag_265:\n        /* \"ICO/IcoOptimized.sol\":3515:3533  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":3498:3511  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":3498:3533  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_272\n      jumpi\n      tag_272\n      tag_219\n      jump\t// in\n    tag_272:\n      sub\n        /* \"ICO/IcoOptimized.sol\":3494:3642  if (paymentMethod == PaymentMethod.USDC) {... */\n      tag_237\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":3552:3564  int256 price */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":3574:3587  priceFeedUSDC */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":3574:3603  priceFeedUSDC.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"ICO/IcoOptimized.sol\":3574:3605  priceFeedUSDC.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ICO/IcoOptimized.sol\":5938:7065  function calculatePaymentAmount(PaymentMethod paymentMethod, uint256 tokenAmount) public view returns (uint256) {... */\n    tag_71:\n        /* \"ICO/IcoOptimized.sol\":6041:6048  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":6078:6079  0 */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":6064:6075  tokenAmount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":6064:6079  tokenAmount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":6056:6122  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8995:8997   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":6056:6122  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8977:8998   */\n      mstore\n        /* \"#utility.yul\":9034:9036   */\n      0x26\n        /* \"#utility.yul\":9014:9032   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9007:9037   */\n      mstore\n        /* \"#utility.yul\":9073:9107   */\n      0x546f6b656e20616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":9053:9071   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9046:9108   */\n      mstore\n      shl(0xd0, 0x6e207a65726f)\n        /* \"#utility.yul\":9124:9142   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9117:9153   */\n      mstore\n        /* \"#utility.yul\":9170:9189   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":6056:6122  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_47\n        /* \"#utility.yul\":8793:9195   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":6056:6122  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n    tag_279:\n        /* \"ICO/IcoOptimized.sol\":6129:6141  int256 price */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":980:984  1e10 */\n      0x02540be400\n        /* \"ICO/IcoOptimized.sol\":6144:6172  _getPriceFeed(paymentMethod) */\n      tag_282\n        /* \"ICO/IcoOptimized.sol\":6158:6171  paymentMethod */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":6144:6157  _getPriceFeed */\n      tag_65\n        /* \"ICO/IcoOptimized.sol\":6144:6172  _getPriceFeed(paymentMethod) */\n      jump\t// in\n    tag_282:\n        /* \"ICO/IcoOptimized.sol\":6144:6195  _getPriceFeed(paymentMethod) * int256(PRECISION_10) */\n      tag_283\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_283:\n        /* \"ICO/IcoOptimized.sol\":6129:6195  int256 price = _getPriceFeed(paymentMethod) * int256(PRECISION_10) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":6245:6246  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":6237:6242  price */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":6237:6246  price > 0 */\n      sgt\n        /* \"ICO/IcoOptimized.sol\":6229:6269  require(price > 0, \"Invalid price feed\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5582:5584   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":6229:6269  require(price > 0, \"Invalid price feed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5564:5585   */\n      mstore\n        /* \"#utility.yul\":5621:5623   */\n      0x12\n        /* \"#utility.yul\":5601:5619   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5594:5624   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c1c9a58d94819995959)\n        /* \"#utility.yul\":5640:5658   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5633:5681   */\n      mstore\n        /* \"#utility.yul\":5698:5716   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":6229:6269  require(price > 0, \"Invalid price feed\") */\n      tag_47\n        /* \"#utility.yul\":5380:5722   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":6229:6269  require(price > 0, \"Invalid price feed\") */\n    tag_284:\n        /* \"ICO/IcoOptimized.sol\":6276:6297  uint256 currentSaleId */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":6300:6318  getCurrentSaleId() */\n      tag_286\n        /* \"ICO/IcoOptimized.sol\":12714:12723  saleCount */\n      sload(0x08)\n      swap1\n        /* \"ICO/IcoOptimized.sol\":12639:12730  function getCurrentSaleId() public view returns (uint256) {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":6300:6318  getCurrentSaleId() */\n    tag_286:\n        /* \"ICO/IcoOptimized.sol\":6276:6318  uint256 currentSaleId = getCurrentSaleId() */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":6332:6345  currentSaleId */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":6349:6350  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":6332:6350  currentSaleId != 0 */\n      sub\n        /* \"ICO/IcoOptimized.sol\":6324:6369  require(currentSaleId != 0, \"No active sale\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9402:9404   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":6324:6369  require(currentSaleId != 0, \"No active sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9384:9405   */\n      mstore\n        /* \"#utility.yul\":9441:9443   */\n      0x0e\n        /* \"#utility.yul\":9421:9439   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9414:9444   */\n      mstore\n      shl(0x90, 0x4e6f206163746976652073616c65)\n        /* \"#utility.yul\":9460:9478   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9453:9497   */\n      mstore\n        /* \"#utility.yul\":9514:9532   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":6324:6369  require(currentSaleId != 0, \"No active sale\") */\n      tag_47\n        /* \"#utility.yul\":9200:9538   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":6324:6369  require(currentSaleId != 0, \"No active sale\") */\n    tag_287:\n        /* \"ICO/IcoOptimized.sol\":6404:6408  usdt */\n      sload(0x0d)\n        /* \"ICO/IcoOptimized.sol\":6397:6434  IERC20(usdt).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":6428:6432  this */\n      address\n        /* \"ICO/IcoOptimized.sol\":6397:6434  IERC20(usdt).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"ICO/IcoOptimized.sol\":6375:6394  uint256 usdtBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":6404:6408  usdt */\n      and\n      swap1\n        /* \"ICO/IcoOptimized.sol\":6397:6419  IERC20(usdt).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"ICO/IcoOptimized.sol\":6397:6434  IERC20(usdt).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"ICO/IcoOptimized.sol\":6441:6458  Sale storage sale */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":6461:6481  sales[currentSaleId] */\n      dup4\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":6461:6466  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":6461:6481  sales[currentSaleId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":6513:6531  sale.tokenPriceUSD */\n      0x02\n      dup2\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":6375:6434  uint256 usdtBalance = IERC20(usdt).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"ICO/IcoOptimized.sol\":6461:6481  sales[currentSaleId] */\n      swap2\n        /* \"ICO/IcoOptimized.sol\":6513:6531  sale.tokenPriceUSD */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":1022:1026  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":6607:6636  tokenAmount * tokenPriceInUSD */\n      tag_295\n        /* \"ICO/IcoOptimized.sol\":6513:6531  sale.tokenPriceUSD */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":6607:6618  tokenAmount */\n      dup11\n        /* \"ICO/IcoOptimized.sol\":6607:6636  tokenAmount * tokenPriceInUSD */\n      tag_224\n      jump\t// in\n    tag_295:\n        /* \"ICO/IcoOptimized.sol\":6606:6652  (tokenAmount * tokenPriceInUSD) / PRECISION_18 */\n      tag_296\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_296:\n        /* \"ICO/IcoOptimized.sol\":6578:6652  uint256 totalPaymentInUSD = (tokenAmount * tokenPriceInUSD) / PRECISION_18 */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":6659:6680  uint256 paymentAmount */\n      0x00\n      dup1\n        /* \"ICO/IcoOptimized.sol\":6690:6703  paymentMethod */\n      dup11\n        /* \"ICO/IcoOptimized.sol\":6690:6724  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      tag_300\n      tag_219\n      jump\t// in\n    tag_300:\n      sub\n        /* \"ICO/IcoOptimized.sol\":6686:7036  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_301\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":6797:6802  price */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":6753:6785  totalPaymentInUSD * PRECISION_18 */\n      tag_302\n        /* \"ICO/IcoOptimized.sol\":1022:1026  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ICO/IcoOptimized.sol\":6753:6770  totalPaymentInUSD */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":6753:6785  totalPaymentInUSD * PRECISION_18 */\n      tag_224\n      jump\t// in\n    tag_302:\n        /* \"ICO/IcoOptimized.sol\":6752:6803  (totalPaymentInUSD * PRECISION_18) / uint256(price) */\n      tag_303\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_303:\n        /* \"ICO/IcoOptimized.sol\":6736:6803  paymentAmount = (totalPaymentInUSD * PRECISION_18) / uint256(price) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":6686:7036  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_249)\n    tag_301:\n        /* \"ICO/IcoOptimized.sol\":6837:6855  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":6820:6833  paymentMethod */\n      dup11\n        /* \"ICO/IcoOptimized.sol\":6820:6855  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_308\n      jumpi\n      tag_308\n      tag_219\n      jump\t// in\n    tag_308:\n      eq\n        /* \"ICO/IcoOptimized.sol\":6820:6894  paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC */\n      dup1\n      tag_309\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":6876:6894  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":6859:6872  paymentMethod */\n      dup11\n        /* \"ICO/IcoOptimized.sol\":6859:6894  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_313\n      jumpi\n      tag_313\n      tag_219\n      jump\t// in\n    tag_313:\n      eq\n        /* \"ICO/IcoOptimized.sol\":6820:6894  paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC */\n    tag_309:\n        /* \"ICO/IcoOptimized.sol\":6816:7036  if (paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":6964:6969  price */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":6923:6952  totalPaymentInUSD * (10 ** 6) */\n      tag_302\n        /* \"ICO/IcoOptimized.sol\":6923:6940  totalPaymentInUSD */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":6944:6951  10 ** 6 */\n      0x0f4240\n        /* \"ICO/IcoOptimized.sol\":6923:6952  totalPaymentInUSD * (10 ** 6) */\n      tag_224\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":9255:9581  function finalizeICO() public nonReentrant onlyOwner icoNotFinalized {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_324\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_324:\n        /* \"ICO/IcoOptimized.sol\":2997:3011  isICOFinalized */\n      and(0xff, sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":2996:3011  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":2988:3037  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_329\n      jump\t// in\n    tag_327:\n        /* \"ICO/IcoOptimized.sol\":9378:9390  softCapInUSD */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":9355:9374  totalFundsRaisedUSD */\n      sload(0x09)\n        /* \"ICO/IcoOptimized.sol\":9355:9390  totalFundsRaisedUSD >= softCapInUSD */\n      lt\n      iszero\n        /* \"ICO/IcoOptimized.sol\":9334:9472  require(... */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10330:10332   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":9334:9472  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10312:10333   */\n      mstore\n        /* \"#utility.yul\":10369:10371   */\n      0x38\n        /* \"#utility.yul\":10349:10367   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10342:10372   */\n      mstore\n        /* \"#utility.yul\":10408:10442   */\n      0x43616e6e6f742066696e616c697a653a20536f667420636170206e6f74207265\n        /* \"#utility.yul\":10388:10406   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10381:10443   */\n      mstore\n        /* \"#utility.yul\":10479:10505   */\n      0x6163686564206f722073616c65206973206f6e676f696e670000000000000000\n        /* \"#utility.yul\":10459:10477   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10452:10506   */\n      mstore\n        /* \"#utility.yul\":10523:10542   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":9334:9472  require(... */\n      tag_47\n        /* \"#utility.yul\":10128:10548   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":9334:9472  require(... */\n    tag_331:\n        /* \"ICO/IcoOptimized.sol\":9479:9493  isICOFinalized */\n      0x0b\n        /* \"ICO/IcoOptimized.sol\":9479:9500  isICOFinalized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ICO/IcoOptimized.sol\":9496:9500  true */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":9479:9500  isICOFinalized = true */\n      or\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":9510:9533  _transferFundsToOwner() */\n      tag_334\n        /* \"ICO/IcoOptimized.sol\":9510:9531  _transferFundsToOwner */\n      tag_335\n        /* \"ICO/IcoOptimized.sol\":9510:9533  _transferFundsToOwner() */\n      jump\t// in\n    tag_334:\n        /* \"ICO/IcoOptimized.sol\":9561:9576  totalTokensSold */\n      sload(0x0a)\n        /* \"ICO/IcoOptimized.sol\":9548:9577  ICOFinalized(totalTokensSold) */\n      mload(0x40)\n      0x9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_336\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_336:\n        /* \"ICO/IcoOptimized.sol\":9255:9581  function finalizeICO() public nonReentrant onlyOwner icoNotFinalized {... */\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":1171:1197  address[] public investors */\n    tag_97:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"ICO/IcoOptimized.sol\":3932:4782  function createSale(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_341\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_341:\n        /* \"ICO/IcoOptimized.sol\":2997:3011  isICOFinalized */\n      and(0xff, sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":2996:3011  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":2988:3037  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_329\n      jump\t// in\n    tag_343:\n        /* \"ICO/IcoOptimized.sol\":4123:4138  block.timestamp */\n      timestamp\n        /* \"ICO/IcoOptimized.sol\":4110:4120  _startTime */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":4110:4138  _startTime > block.timestamp */\n      gt\n        /* \"ICO/IcoOptimized.sol\":4089:4208  require(... */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10755:10757   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":4089:4208  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10737:10758   */\n      mstore\n        /* \"#utility.yul\":10794:10796   */\n      0x2c\n        /* \"#utility.yul\":10774:10792   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10767:10797   */\n      mstore\n        /* \"#utility.yul\":10833:10867   */\n      0x53746172742074696d65206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":10813:10831   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10806:10868   */\n      mstore\n      shl(0xa0, 0x63757272656e742074696d65)\n        /* \"#utility.yul\":10884:10902   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10877:10919   */\n      mstore\n        /* \"#utility.yul\":10936:10955   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":4089:4208  require(... */\n      tag_47\n        /* \"#utility.yul\":10553:10961   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":4089:4208  require(... */\n    tag_346:\n        /* \"ICO/IcoOptimized.sol\":4250:4260  _startTime */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":4239:4247  _endTime */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":4239:4260  _endTime > _startTime */\n      gt\n        /* \"ICO/IcoOptimized.sol\":4218:4326  require(... */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11168:11170   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":4218:4326  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11150:11171   */\n      mstore\n        /* \"#utility.yul\":11207:11209   */\n      0x28\n        /* \"#utility.yul\":11187:11205   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11180:11210   */\n      mstore\n        /* \"#utility.yul\":11246:11280   */\n      0x456e642074696d65206d7573742062652067726561746572207468616e207374\n        /* \"#utility.yul\":11226:11244   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11219:11281   */\n      mstore\n      shl(0xc0, 0x6172742074696d65)\n        /* \"#utility.yul\":11297:11315   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11290:11328   */\n      mstore\n        /* \"#utility.yul\":11345:11364   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":4218:4326  require(... */\n      tag_47\n        /* \"#utility.yul\":10966:11370   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":4218:4326  require(... */\n    tag_349:\n        /* \"ICO/IcoOptimized.sol\":12823:12832  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":12791:12798  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":12817:12833  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":12817:12822  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":12817:12833  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":12817:12841  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":4357:4367  _startTime */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":4357:4392  _startTime > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/IcoOptimized.sol\":4336:4462  require(... */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11577:11579   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":4336:4462  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11559:11580   */\n      mstore\n        /* \"#utility.yul\":11616:11618   */\n      0x2c\n        /* \"#utility.yul\":11596:11614   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11589:11619   */\n      mstore\n        /* \"#utility.yul\":11655:11689   */\n      0x4e65772073616c65206d75737420737461727420616674657220746865206c61\n        /* \"#utility.yul\":11635:11653   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11628:11690   */\n      mstore\n      shl(0xa0, 0x73742073616c6520656e6473)\n        /* \"#utility.yul\":11706:11724   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11699:11741   */\n      mstore\n        /* \"#utility.yul\":11758:11777   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":4336:4462  require(... */\n      tag_47\n        /* \"#utility.yul\":11375:11783   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":4336:4462  require(... */\n    tag_354:\n        /* \"ICO/IcoOptimized.sol\":4473:4482  saleCount */\n      0x08\n        /* \"ICO/IcoOptimized.sol\":4473:4484  saleCount++ */\n      dup1\n      sload\n      swap1\n        /* \"ICO/IcoOptimized.sol\":4473:4482  saleCount */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":4473:4484  saleCount++ */\n      tag_357\n      dup4\n      tag_358\n      jump\t// in\n    tag_357:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":4513:4697  Sale({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      dup2\n      mstore\n      dup3\n      dup5\n      add\n      dup6\n      dup2\n      mstore\n      0x00\n      0x60\n      dup1\n      dup7\n      add\n      dup3\n      dup2\n      mstore\n      0x80\n      dup8\n      add\n      dup4\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":4500:4509  saleCount */\n      0x08\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":4494:4510  sales[saleCount] */\n      dup6\n      mstore\n        /* \"ICO/IcoOptimized.sol\":4494:4499  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":4494:4510  sales[saleCount] */\n      dup9\n      mstore\n      swap4\n      dup10\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":4494:4697  sales[saleCount] = Sale({... */\n      swap8\n      mload\n      dup9\n      sstore\n      swap5\n      mload\n        /* \"ICO/IcoOptimized.sol\":4513:4697  Sale({... */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":4494:4697  sales[saleCount] = Sale({... */\n      dup9\n      add\n      sstore\n      swap3\n      mload\n      0x02\n      dup8\n      add\n      sstore\n      swap2\n      mload\n      0x03\n      dup7\n      add\n      sstore\n      swap2\n      mload\n      0x04\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap5\n      iszero\n      iszero\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ICO/IcoOptimized.sol\":4727:4736  saleCount */\n      sload\n        /* \"ICO/IcoOptimized.sol\":4712:4775  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      dup4\n      mload\n        /* \"#utility.yul\":12130:12155   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":12171:12189   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12164:12198   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":12214:12232   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":12207:12241   */\n      dup5\n      swap1\n      mstore\n        /* \"ICO/IcoOptimized.sol\":4712:4775  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      0x63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba\n      swap2\n        /* \"#utility.yul\":12103:12121   */\n      add\n        /* \"ICO/IcoOptimized.sol\":4712:4775  NewSaleCreated(saleCount, _startTime, _endTime, _tokenPriceUSD) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/IcoOptimized.sol\":3932:4782  function createSale(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_362\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_365\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"ICO/IcoOptimized.sol\":11010:12552  function initiateRefund() external nonReentrant onlyOwner icoNotFinalized  {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_367\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_369\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_369:\n        /* \"ICO/IcoOptimized.sol\":2997:3011  isICOFinalized */\n      and(0xff, sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":2996:3011  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":2988:3037  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_329\n      jump\t// in\n    tag_371:\n        /* \"ICO/IcoOptimized.sol\":12823:12832  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":12791:12798  uint256 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":12817:12833  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":12817:12822  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":12817:12833  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":12817:12841  sales[saleCount].endTime */\n      0x01\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":11099:11114  block.timestamp */\n      timestamp\n        /* \"ICO/IcoOptimized.sol\":11099:11139  block.timestamp > getLatestSaleEndTime() */\n      gt\n        /* \"ICO/IcoOptimized.sol\":11091:11156  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12454:12456   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":11091:11156  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12436:12457   */\n      mstore\n        /* \"#utility.yul\":12493:12495   */\n      0x0c\n        /* \"#utility.yul\":12473:12491   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12466:12496   */\n      mstore\n      shl(0xa0, 0x53616c65206f6e676f696e67)\n        /* \"#utility.yul\":12512:12530   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12505:12547   */\n      mstore\n        /* \"#utility.yul\":12564:12582   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":11091:11156  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n      tag_47\n        /* \"#utility.yul\":12252:12588   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11091:11156  require(block.timestamp > getLatestSaleEndTime(), \"Sale ongoing\") */\n    tag_375:\n        /* \"ICO/IcoOptimized.sol\":11192:11204  softCapInUSD */\n      sload(0x06)\n        /* \"ICO/IcoOptimized.sol\":11170:11189  totalFundsRaisedUSD */\n      sload(0x09)\n        /* \"ICO/IcoOptimized.sol\":11170:11204  totalFundsRaisedUSD < softCapInUSD */\n      lt\n        /* \"ICO/IcoOptimized.sol\":11162:11226  require(totalFundsRaisedUSD < softCapInUSD , \"Soft cap reached\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12795:12797   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":11162:11226  require(totalFundsRaisedUSD < softCapInUSD , \"Soft cap reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12777:12798   */\n      mstore\n        /* \"#utility.yul\":12834:12836   */\n      0x10\n        /* \"#utility.yul\":12814:12832   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12807:12837   */\n      mstore\n      shl(0x82, 0x14dbd99d0818d85c081c995858da1959)\n        /* \"#utility.yul\":12853:12871   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12846:12892   */\n      mstore\n        /* \"#utility.yul\":12909:12927   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":11162:11226  require(totalFundsRaisedUSD < softCapInUSD , \"Soft cap reached\") */\n      tag_47\n        /* \"#utility.yul\":12593:12933   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11162:11226  require(totalFundsRaisedUSD < softCapInUSD , \"Soft cap reached\") */\n    tag_378:\n        /* \"ICO/IcoOptimized.sol\":11258:11267  investors */\n      0x0c\n        /* \"ICO/IcoOptimized.sol\":11258:11274  investors.length */\n      sload\n        /* \"ICO/IcoOptimized.sol\":11233:11255  uint256 investorLength */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11280:12523  for (uint256 i = 0; i < investorLength; i++) {... */\n    tag_381:\n        /* \"ICO/IcoOptimized.sol\":11304:11318  investorLength */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":11300:11301  i */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":11300:11318  i < investorLength */\n      lt\n        /* \"ICO/IcoOptimized.sol\":11280:12523  for (uint256 i = 0; i < investorLength; i++) {... */\n      iszero\n      tag_382\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":11335:11351  address investor */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11354:11363  investors */\n      0x0c\n        /* \"ICO/IcoOptimized.sol\":11364:11365  i */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":11354:11366  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_385\n      jumpi\n      tag_385\n      tag_386\n      jump\t// in\n    tag_385:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"ICO/IcoOptimized.sol\":11433:12517  for (uint8 j = 0; j < 3; j++) { ... */\n    tag_388:\n        /* \"ICO/IcoOptimized.sol\":11455:11456  3 */\n      0x03\n        /* \"ICO/IcoOptimized.sol\":11451:11452  j */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":11451:11456  j < 3 */\n      0xff\n      and\n      lt\n        /* \"ICO/IcoOptimized.sol\":11433:12517  for (uint8 j = 0; j < 3; j++) { ... */\n      iszero\n      tag_389\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":11478:11505  PaymentMethod paymentMethod */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11522:11523  j */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":11508:11524  PaymentMethod(j) */\n      0xff\n      and\n      0x02\n      dup2\n      gt\n      iszero\n      tag_392\n      jumpi\n      tag_392\n      tag_219\n      jump\t// in\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":11555:11581  investorPayments[investor] */\n      dup5\n      and\n        /* \"ICO/IcoOptimized.sol\":11538:11552  uint256 amount */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11555:11581  investorPayments[investor] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":11555:11571  investorPayments */\n      0x14\n        /* \"ICO/IcoOptimized.sol\":11555:11581  investorPayments[investor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":11478:11524  PaymentMethod paymentMethod = PaymentMethod(j) */\n      swap2\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":11538:11552  uint256 amount */\n      swap1\n      dup2\n        /* \"ICO/IcoOptimized.sol\":11478:11524  PaymentMethod paymentMethod = PaymentMethod(j) */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":11555:11596  investorPayments[investor][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_394\n      jumpi\n      tag_394\n      tag_219\n      jump\t// in\n    tag_394:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_396\n      jumpi\n      tag_396\n      tag_219\n      jump\t// in\n    tag_396:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ICO/IcoOptimized.sol\":11538:11596  uint256 amount = investorPayments[investor][paymentMethod] */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":11624:11625  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11615:11621  amount */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":11615:11625  amount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":11611:12507  if (amount > 0) {... */\n      iszero\n      tag_397\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":11645:11671  investorPayments[investor] */\n      dup5\n      and\n        /* \"ICO/IcoOptimized.sol\":11689:11690  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11645:11671  investorPayments[investor] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":11645:11661  investorPayments */\n      0x14\n        /* \"ICO/IcoOptimized.sol\":11645:11671  investorPayments[investor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":11689:11690  0 */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":11672:11685  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":11645:11686  investorPayments[investor][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_399\n      jumpi\n      tag_399\n      tag_219\n      jump\t// in\n    tag_399:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_401\n      jumpi\n      tag_401\n      tag_219\n      jump\t// in\n    tag_401:\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":11645:11690  investorPayments[investor][paymentMethod] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"ICO/IcoOptimized.sol\":11712:11725  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":11712:11746  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_405\n      jumpi\n      tag_405\n      tag_219\n      jump\t// in\n    tag_405:\n      sub\n        /* \"ICO/IcoOptimized.sol\":11708:12422  if (paymentMethod == PaymentMethod.BNB) {... */\n      tag_406\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":11771:11780  bool sent */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":11794:11802  investor */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":11786:11808  payable(investor).call */\n      and\n        /* \"ICO/IcoOptimized.sol\":11816:11822  amount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":11786:11827  payable(investor).call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_411\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_410)\n    tag_411:\n      0x60\n      swap2\n      pop\n    tag_410:\n      pop\n        /* \"ICO/IcoOptimized.sol\":11770:11827  (bool sent, ) = payable(investor).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":11857:11861  sent */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":11849:11883  require(sent, \"BNB refund failed\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13482:13484   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":11849:11883  require(sent, \"BNB refund failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13464:13485   */\n      mstore\n        /* \"#utility.yul\":13521:13523   */\n      0x11\n        /* \"#utility.yul\":13501:13519   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13494:13524   */\n      mstore\n      shl(0x7a, 0x109390881c99599d5b990819985a5b1959)\n        /* \"#utility.yul\":13540:13558   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13533:13580   */\n      mstore\n        /* \"#utility.yul\":13597:13615   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":11849:11883  require(sent, \"BNB refund failed\") */\n      tag_47\n        /* \"#utility.yul\":13280:13621   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11849:11883  require(sent, \"BNB refund failed\") */\n    tag_412:\n        /* \"ICO/IcoOptimized.sol\":11748:11902  {... */\n      pop\n        /* \"ICO/IcoOptimized.sol\":11708:12422  if (paymentMethod == PaymentMethod.BNB) {... */\n      jump(tag_441)\n    tag_406:\n        /* \"ICO/IcoOptimized.sol\":11929:11947  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":11912:11925  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":11912:11947  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_419\n      jumpi\n      tag_419\n      tag_219\n      jump\t// in\n    tag_419:\n      eq\n        /* \"ICO/IcoOptimized.sol\":11912:11986  paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC */\n      dup1\n      tag_420\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":11968:11986  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":11951:11964  paymentMethod */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":11951:11986  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_424\n      jumpi\n      tag_424\n      tag_219\n      jump\t// in\n    tag_424:\n      eq\n        /* \"ICO/IcoOptimized.sol\":11912:11986  paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC */\n    tag_420:\n        /* \"ICO/IcoOptimized.sol\":11908:12422  if (paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC) {... */\n      iszero\n      tag_425\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":12010:12027  IERC20 stablecoin */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":12047:12065  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":12030:12043  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":12030:12065  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_429\n      jumpi\n      tag_429\n      tag_219\n      jump\t// in\n    tag_429:\n      eq\n        /* \"ICO/IcoOptimized.sol\":12030:12143  paymentMethod == PaymentMethod.USDT... */\n      tag_430\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":12138:12142  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"ICO/IcoOptimized.sol\":12030:12143  paymentMethod == PaymentMethod.USDT... */\n      jump(tag_431)\n    tag_430:\n        /* \"ICO/IcoOptimized.sol\":12099:12103  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"ICO/IcoOptimized.sol\":12030:12143  paymentMethod == PaymentMethod.USDT... */\n    tag_431:\n        /* \"ICO/IcoOptimized.sol\":12198:12235  stablecoin.transfer(investor, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13818:13850   */\n      dup8\n      dup2\n      and\n        /* \"ICO/IcoOptimized.sol\":12198:12235  stablecoin.transfer(investor, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":13800:13851   */\n      mstore\n        /* \"#utility.yul\":13867:13885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13860:13894   */\n      dup6\n      swap1\n      mstore\n        /* \"ICO/IcoOptimized.sol\":12010:12143  IERC20 stablecoin = paymentMethod == PaymentMethod.USDT... */\n      swap2\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":12198:12217  stablecoin.transfer */\n      swap1\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":13773:13791   */\n      0x44\n      add\n        /* \"ICO/IcoOptimized.sol\":12198:12235  stablecoin.transfer(investor, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_435\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_435:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_436\n      swap2\n      swap1\n      tag_437\n      jump\t// in\n    tag_436:\n        /* \"ICO/IcoOptimized.sol\":12165:12309  require(... */\n      tag_412\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14389:14391   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":12165:12309  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14371:14392   */\n      mstore\n        /* \"#utility.yul\":14428:14430   */\n      0x18\n        /* \"#utility.yul\":14408:14426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14401:14431   */\n      mstore\n        /* \"#utility.yul\":14467:14493   */\n      0x537461626c65636f696e20726566756e64206661696c65640000000000000000\n        /* \"#utility.yul\":14447:14465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14440:14494   */\n      mstore\n        /* \"#utility.yul\":14511:14529   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":12165:12309  require(... */\n      tag_47\n        /* \"#utility.yul\":14187:14535   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11908:12422  if (paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC) {... */\n    tag_425:\n        /* \"ICO/IcoOptimized.sol\":12356:12403  revert(\"Unsupported payment method for refund\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14742:14744   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":12356:12403  revert(\"Unsupported payment method for refund\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14724:14745   */\n      mstore\n        /* \"#utility.yul\":14781:14783   */\n      0x25\n        /* \"#utility.yul\":14761:14779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14754:14784   */\n      mstore\n        /* \"#utility.yul\":14820:14854   */\n      0x556e737570706f72746564207061796d656e74206d6574686f6420666f722072\n        /* \"#utility.yul\":14800:14818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14793:14855   */\n      mstore\n      shl(0xda, 0x19599d5b99)\n        /* \"#utility.yul\":14871:14889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14864:14899   */\n      mstore\n        /* \"#utility.yul\":14916:14935   */\n      0x84\n      add\n        /* \"ICO/IcoOptimized.sol\":12356:12403  revert(\"Unsupported payment method for refund\") */\n      tag_47\n        /* \"#utility.yul\":14540:14941   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":11908:12422  if (paymentMethod == PaymentMethod.USDT || paymentMethod == PaymentMethod.USDC) {... */\n    tag_441:\n        /* \"ICO/IcoOptimized.sol\":12460:12468  investor */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":12444:12492  RefundInitiated(investor, amount, paymentMethod) */\n      and\n      0x03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7\n        /* \"ICO/IcoOptimized.sol\":12470:12476  amount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":12478:12491  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":12444:12492  RefundInitiated(investor, amount, paymentMethod) */\n      mload(0x40)\n      tag_444\n      swap3\n      swap2\n      swap1\n      tag_445\n      jump\t// in\n    tag_444:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/IcoOptimized.sol\":11611:12507  if (amount > 0) {... */\n    tag_397:\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":11458:11461  j++ */\n      0x01\n      add\n        /* \"ICO/IcoOptimized.sol\":11433:12517  for (uint8 j = 0; j < 3; j++) { ... */\n      jump(tag_388)\n    tag_389:\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":11320:11323  i++ */\n      0x01\n      add\n        /* \"ICO/IcoOptimized.sol\":11280:12523  for (uint256 i = 0; i < investorLength; i++) {... */\n      jump(tag_381)\n    tag_382:\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":12528:12542  isICOFinalized */\n      0x0b\n        /* \"ICO/IcoOptimized.sol\":12528:12549  isICOFinalized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ICO/IcoOptimized.sol\":12545:12549  true */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":12528:12549  isICOFinalized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_336\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10257:11004  function airdropTokens() external nonReentrant onlyOwner icoNotFinalized {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_449\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_451\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_451:\n        /* \"ICO/IcoOptimized.sol\":2997:3011  isICOFinalized */\n      and(0xff, sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":2996:3011  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":2988:3037  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_453\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_329\n      jump\t// in\n    tag_453:\n        /* \"ICO/IcoOptimized.sol\":10345:10363  isTokensAirdropped */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":10344:10363  !isTokensAirdropped */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":10336:10393  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      tag_456\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15440:15442   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":10336:10393  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15422:15443   */\n      mstore\n        /* \"#utility.yul\":15479:15481   */\n      0x19\n        /* \"#utility.yul\":15459:15477   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15452:15482   */\n      mstore\n        /* \"#utility.yul\":15518:15545   */\n      0x41697264726f7020616c726561647920636f6d706c6574656400000000000000\n        /* \"#utility.yul\":15498:15516   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15491:15546   */\n      mstore\n        /* \"#utility.yul\":15563:15581   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":10336:10393  require(!isTokensAirdropped, \"Airdrop already completed\") */\n      tag_47\n        /* \"#utility.yul\":15238:15587   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10336:10393  require(!isTokensAirdropped, \"Airdrop already completed\") */\n    tag_456:\n        /* \"ICO/IcoOptimized.sol\":10429:10438  investors */\n      0x0c\n        /* \"ICO/IcoOptimized.sol\":10429:10445  investors.length */\n      sload\n        /* \"ICO/IcoOptimized.sol\":10404:10426  uint256 investorLength */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":10451:10970  for (uint256 i = 0; i < investorLength; i++) {... */\n    tag_459:\n        /* \"ICO/IcoOptimized.sol\":10475:10489  investorLength */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":10471:10472  i */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":10471:10489  i < investorLength */\n      lt\n        /* \"ICO/IcoOptimized.sol\":10451:10970  for (uint256 i = 0; i < investorLength; i++) {... */\n      iszero\n      tag_460\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":10506:10522  address investor */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":10525:10534  investors */\n      0x0c\n        /* \"ICO/IcoOptimized.sol\":10535:10536  i */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":10525:10537  investors[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_463\n      jumpi\n      tag_463\n      tag_386\n      jump\t// in\n    tag_463:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ICO/IcoOptimized.sol\":10570:10602  tokensBoughtByInvestor[investor] */\n      dup1\n      dup4\n      mstore\n        /* \"ICO/IcoOptimized.sol\":10570:10592  tokensBoughtByInvestor */\n      0x11\n        /* \"ICO/IcoOptimized.sol\":10570:10602  tokensBoughtByInvestor[investor] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"ICO/IcoOptimized.sol\":10525:10537  investors[i] */\n      swap1\n      swap2\n      pop\n        /* \"ICO/IcoOptimized.sol\":10617:10633  tokensBought > 0 */\n      dup1\n      iszero\n        /* \"ICO/IcoOptimized.sol\":10613:10964  if (tokensBought > 0) {... */\n      tag_465\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":10732:10737  token */\n      sload(0x05)\n        /* \"ICO/IcoOptimized.sol\":10717:10729  bool success */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":10732:10737  token */\n      and\n        /* \"ICO/IcoOptimized.sol\":10732:10750  token.transferFrom */\n      0x23b872dd\n        /* \"ICO/IcoOptimized.sol\":10751:10758  owner() */\n      tag_466\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10751:10758  owner() */\n    tag_466:\n        /* \"ICO/IcoOptimized.sol\":10732:10783  token.transferFrom(owner(), investor, tokensBought) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15812:15844   */\n      swap2\n      dup3\n      and\n        /* \"ICO/IcoOptimized.sol\":10732:10783  token.transferFrom(owner(), investor, tokensBought) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15794:15845   */\n      mstore\n        /* \"#utility.yul\":15881:15913   */\n      swap1\n      dup7\n      and\n        /* \"#utility.yul\":15861:15879   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15854:15914   */\n      mstore\n        /* \"#utility.yul\":15930:15948   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":15923:15957   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":15767:15785   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":10732:10783  token.transferFrom(owner(), investor, tokensBought) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_470\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_470:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_471\n      swap2\n      swap1\n      tag_437\n      jump\t// in\n    tag_471:\n        /* \"ICO/IcoOptimized.sol\":10717:10783  bool success = token.transferFrom(owner(), investor, tokensBought) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":10805:10812  success */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":10797:10838  require(success, \"Token transfer failed\") */\n      tag_472\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16170:16172   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":10797:10838  require(success, \"Token transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16152:16173   */\n      mstore\n        /* \"#utility.yul\":16209:16211   */\n      0x15\n        /* \"#utility.yul\":16189:16207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16182:16212   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":16228:16246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16221:16272   */\n      mstore\n        /* \"#utility.yul\":16289:16307   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":10797:10838  require(success, \"Token transfer failed\") */\n      tag_47\n        /* \"#utility.yul\":15968:16313   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10797:10838  require(success, \"Token transfer failed\") */\n    tag_472:\n        /* \"ICO/IcoOptimized.sol\":10930:10938  investor */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":10914:10953  TokenAirdropped(investor, tokensBought) */\n      and\n      0x9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b\n        /* \"ICO/IcoOptimized.sol\":10940:10952  tokensBought */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":10914:10953  TokenAirdropped(investor, tokensBought) */\n      mload(0x40)\n      tag_475\n      swap2\n        /* \"#utility.yul\":1014:1039   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n      swap1\n        /* \"#utility.yul\":868:1045   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10914:10953  TokenAirdropped(investor, tokensBought) */\n    tag_475:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ICO/IcoOptimized.sol\":10635:10964  {... */\n      pop\n        /* \"ICO/IcoOptimized.sol\":10613:10964  if (tokensBought > 0) {... */\n    tag_465:\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":10491:10494  i++ */\n      0x01\n      add\n        /* \"ICO/IcoOptimized.sol\":10451:10970  for (uint256 i = 0; i < investorLength; i++) {... */\n      jump(tag_459)\n    tag_460:\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":10976:10994  isTokensAirdropped */\n      0x0b\n        /* \"ICO/IcoOptimized.sol\":10976:11001  isTokensAirdropped = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_336\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7072:9249  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount) external payable icoNotFinalized {... */\n    tag_140:\n        /* \"ICO/IcoOptimized.sol\":2997:3011  isICOFinalized */\n      and(0xff, sload(0x0b))\n        /* \"ICO/IcoOptimized.sol\":2996:3011  !isICOFinalized */\n      iszero\n        /* \"ICO/IcoOptimized.sol\":2988:3037  require(!isICOFinalized, \"ICO already finalized\") */\n      tag_479\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_329\n      jump\t// in\n    tag_479:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ICO/IcoOptimized.sol\":7190:7200  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":7190:7211  msg.sender != owner() */\n      sub\n        /* \"ICO/IcoOptimized.sol\":7182:7239  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      tag_483\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16520:16522   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7182:7239  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16502:16523   */\n      mstore\n        /* \"#utility.yul\":16559:16561   */\n      0x17\n        /* \"#utility.yul\":16539:16557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16532:16562   */\n      mstore\n        /* \"#utility.yul\":16598:16623   */\n      0x4f776e65722063616e6e6f742062757920746f6b656e73000000000000000000\n        /* \"#utility.yul\":16578:16596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16571:16624   */\n      mstore\n        /* \"#utility.yul\":16641:16659   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":7182:7239  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n      tag_47\n        /* \"#utility.yul\":16318:16665   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7182:7239  require(msg.sender != owner(), \"Owner cannot buy tokens\") */\n    tag_483:\n        /* \"ICO/IcoOptimized.sol\":7253:7262  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":7266:7267  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7253:7267  saleCount != 0 */\n      sub\n        /* \"ICO/IcoOptimized.sol\":7245:7279  require(saleCount != 0, \"No sale\") */\n      tag_486\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16872:16874   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7245:7279  require(saleCount != 0, \"No sale\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16854:16875   */\n      mstore\n        /* \"#utility.yul\":16911:16912   */\n      0x07\n        /* \"#utility.yul\":16891:16909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16884:16913   */\n      mstore\n      shl(0xc8, 0x4e6f2073616c65)\n        /* \"#utility.yul\":16929:16947   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16922:16959   */\n      mstore\n        /* \"#utility.yul\":16976:16994   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":7245:7279  require(saleCount != 0, \"No sale\") */\n      tag_47\n        /* \"#utility.yul\":16670:17000   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7245:7279  require(saleCount != 0, \"No sale\") */\n    tag_486:\n        /* \"ICO/IcoOptimized.sol\":7299:7308  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":7293:7309  sales[saleCount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":7293:7298  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":7293:7309  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":7293:7321  sales[saleCount].isFinalized */\n      0x04\n      add\n      sload\n      0xff\n      and\n        /* \"ICO/IcoOptimized.sol\":7285:7348  require(sales[saleCount].isFinalized, \"Sale already finalized\") */\n      tag_489\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17207:17209   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7285:7348  require(sales[saleCount].isFinalized, \"Sale already finalized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17189:17210   */\n      mstore\n        /* \"#utility.yul\":17246:17248   */\n      0x16\n        /* \"#utility.yul\":17226:17244   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17219:17249   */\n      mstore\n      shl(0x52, 0x14d85b1948185b1c9958591e48199a5b985b1a5e9959)\n        /* \"#utility.yul\":17265:17283   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17258:17310   */\n      mstore\n        /* \"#utility.yul\":17327:17345   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":7285:7348  require(sales[saleCount].isFinalized, \"Sale already finalized\") */\n      tag_47\n        /* \"#utility.yul\":17005:17351   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7285:7348  require(sales[saleCount].isFinalized, \"Sale already finalized\") */\n    tag_489:\n        /* \"ICO/IcoOptimized.sol\":7354:7373  uint256 tokenAmount */\n      0x00\n      dup1\n        /* \"ICO/IcoOptimized.sol\":7383:7396  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":7383:7417  paymentMethod == PaymentMethod.BNB */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_495\n      jumpi\n      tag_495\n      tag_219\n      jump\t// in\n    tag_495:\n      sub\n        /* \"ICO/IcoOptimized.sol\":7379:8369  if (paymentMethod == PaymentMethod.BNB ) {... */\n      tag_496\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":7499:7500  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7487:7496  msg.value */\n      callvalue\n        /* \"ICO/IcoOptimized.sol\":7487:7500  msg.value > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":7479:7528  require(msg.value > 0, \"Send a valid BNB amount\") */\n      tag_497\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17558:17560   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7479:7528  require(msg.value > 0, \"Send a valid BNB amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17540:17561   */\n      mstore\n        /* \"#utility.yul\":17597:17599   */\n      0x17\n        /* \"#utility.yul\":17577:17595   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17570:17600   */\n      mstore\n        /* \"#utility.yul\":17636:17661   */\n      0x53656e6420612076616c696420424e4220616d6f756e74000000000000000000\n        /* \"#utility.yul\":17616:17634   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17609:17662   */\n      mstore\n        /* \"#utility.yul\":17679:17697   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":7479:7528  require(msg.value > 0, \"Send a valid BNB amount\") */\n      tag_47\n        /* \"#utility.yul\":17356:17703   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7479:7528  require(msg.value > 0, \"Send a valid BNB amount\") */\n    tag_497:\n        /* \"ICO/IcoOptimized.sol\":7552:7598  calculateTokenAmount(paymentMethod, msg.value) */\n      tag_500\n        /* \"ICO/IcoOptimized.sol\":7573:7586  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":7588:7597  msg.value */\n      callvalue\n        /* \"ICO/IcoOptimized.sol\":7552:7572  calculateTokenAmount */\n      tag_53\n        /* \"ICO/IcoOptimized.sol\":7552:7598  calculateTokenAmount(paymentMethod, msg.value) */\n      jump\t// in\n    tag_500:\n        /* \"ICO/IcoOptimized.sol\":7625:7635  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":7608:7636  investorPayments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":7608:7624  investorPayments */\n      0x14\n        /* \"ICO/IcoOptimized.sol\":7608:7636  investorPayments[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":7538:7598  tokenAmount = calculateTokenAmount(paymentMethod, msg.value) */\n      swap2\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":7655:7664  msg.value */\n      callvalue\n      swap2\n        /* \"ICO/IcoOptimized.sol\":7608:7636  investorPayments[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":7637:7650  paymentMethod */\n      dup6\n        /* \"ICO/IcoOptimized.sol\":7608:7651  investorPayments[msg.sender][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_502\n      jumpi\n      tag_502\n      tag_219\n      jump\t// in\n    tag_502:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_504\n      jumpi\n      tag_504\n      tag_219\n      jump\t// in\n    tag_504:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7608:7664  investorPayments[msg.sender][paymentMethod] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_505\n      swap2\n      swap1\n      tag_506\n      jump\t// in\n    tag_505:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":7379:8369  if (paymentMethod == PaymentMethod.BNB ) {... */\n      tag_540\n      swap1\n      pop\n      jump\n    tag_496:\n        /* \"ICO/IcoOptimized.sol\":7707:7725  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":7690:7703  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":7690:7725  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_511\n      jumpi\n      tag_511\n      tag_219\n      jump\t// in\n    tag_511:\n      eq\n        /* \"ICO/IcoOptimized.sol\":7690:7772  paymentMethod == PaymentMethod.USDT ||... */\n      dup1\n      tag_512\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":7754:7772  PaymentMethod.USDC */\n      0x02\n        /* \"ICO/IcoOptimized.sol\":7737:7750  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":7737:7772  paymentMethod == PaymentMethod.USDC */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_516\n      jumpi\n      tag_516\n      tag_219\n      jump\t// in\n    tag_516:\n      eq\n        /* \"ICO/IcoOptimized.sol\":7690:7772  paymentMethod == PaymentMethod.USDT ||... */\n    tag_512:\n        /* \"ICO/IcoOptimized.sol\":7677:8369  if (... */\n      iszero\n      tag_237\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":7851:7852  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7835:7848  paymentAmount */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":7835:7852  paymentAmount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":7827:7888  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n      tag_518\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18040:18042   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":7827:7888  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18022:18043   */\n      mstore\n        /* \"#utility.yul\":18079:18081   */\n      0x1f\n        /* \"#utility.yul\":18059:18077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18052:18082   */\n      mstore\n        /* \"#utility.yul\":18118:18151   */\n      0x456e74657220612076616c696420737461626c65636f696e20616d6f756e7400\n        /* \"#utility.yul\":18098:18116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18091:18152   */\n      mstore\n        /* \"#utility.yul\":18169:18187   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":7827:7888  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n      tag_47\n        /* \"#utility.yul\":17838:18193   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":7827:7888  require(paymentAmount > 0, \"Enter a valid stablecoin amount\") */\n    tag_518:\n        /* \"ICO/IcoOptimized.sol\":7898:7915  IERC20 stablecoin */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":7944:7962  PaymentMethod.USDT */\n      0x01\n        /* \"ICO/IcoOptimized.sol\":7927:7940  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":7927:7962  paymentMethod == PaymentMethod.USDT */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_524\n      jumpi\n      tag_524\n      tag_219\n      jump\t// in\n    tag_524:\n      eq\n        /* \"ICO/IcoOptimized.sol\":7927:7991  paymentMethod == PaymentMethod.USDT ? IERC20(usdt): IERC20(usdc) */\n      tag_525\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":7986:7990  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"ICO/IcoOptimized.sol\":7927:7991  paymentMethod == PaymentMethod.USDT ? IERC20(usdt): IERC20(usdc) */\n      jump(tag_526)\n    tag_525:\n        /* \"ICO/IcoOptimized.sol\":7972:7976  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"ICO/IcoOptimized.sol\":7927:7991  paymentMethod == PaymentMethod.USDT ? IERC20(usdt): IERC20(usdc) */\n    tag_526:\n        /* \"ICO/IcoOptimized.sol\":8009:8072  stablecoin.transferFrom(msg.sender,address(this),paymentAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8033:8043  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8009:8072  stablecoin.transferFrom(msg.sender,address(this),paymentAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15794:15845   */\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8052:8056  this */\n      address\n        /* \"#utility.yul\":15861:15879   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15854:15914   */\n      mstore\n        /* \"#utility.yul\":15930:15948   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":15923:15957   */\n      dup6\n      swap1\n      mstore\n        /* \"ICO/IcoOptimized.sol\":7898:7991  IERC20 stablecoin = ... */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":8009:8032  stablecoin.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":15767:15785   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8009:8072  stablecoin.transferFrom(msg.sender,address(this),paymentAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_529\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_529:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_530\n      swap2\n      swap1\n      tag_437\n      jump\t// in\n    tag_530:\n        /* \"ICO/IcoOptimized.sol\":8001:8102  require(stablecoin.transferFrom(msg.sender,address(this),paymentAmount),\"Stablecoin transfer failed\") */\n      tag_531\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18400:18402   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":8001:8102  require(stablecoin.transferFrom(msg.sender,address(this),paymentAmount),\"Stablecoin transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18382:18403   */\n      mstore\n        /* \"#utility.yul\":18439:18441   */\n      0x1a\n        /* \"#utility.yul\":18419:18437   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18412:18442   */\n      mstore\n        /* \"#utility.yul\":18478:18506   */\n      0x537461626c65636f696e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":18458:18476   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18451:18507   */\n      mstore\n        /* \"#utility.yul\":18524:18542   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8001:8102  require(stablecoin.transferFrom(msg.sender,address(this),paymentAmount),\"Stablecoin transfer failed\") */\n      tag_47\n        /* \"#utility.yul\":18198:18548   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8001:8102  require(stablecoin.transferFrom(msg.sender,address(this),paymentAmount),\"Stablecoin transfer failed\") */\n    tag_531:\n        /* \"ICO/IcoOptimized.sol\":8183:8233  calculateTokenAmount(paymentMethod, paymentAmount) */\n      tag_534\n        /* \"ICO/IcoOptimized.sol\":8204:8217  paymentMethod */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":8219:8232  paymentAmount */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":8183:8203  calculateTokenAmount */\n      tag_53\n        /* \"ICO/IcoOptimized.sol\":8183:8233  calculateTokenAmount(paymentMethod, paymentAmount) */\n      jump\t// in\n    tag_534:\n        /* \"ICO/IcoOptimized.sol\":8260:8270  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8243:8271  investorPayments[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8243:8259  investorPayments */\n      0x14\n        /* \"ICO/IcoOptimized.sol\":8243:8271  investorPayments[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":8169:8233  tokenAmount = calculateTokenAmount(paymentMethod, paymentAmount) */\n      swap2\n      swap4\n      pop\n        /* \"ICO/IcoOptimized.sol\":8290:8303  paymentAmount */\n      dup5\n      swap2\n        /* \"ICO/IcoOptimized.sol\":8243:8271  investorPayments[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8272:8285  paymentMethod */\n      dup7\n        /* \"ICO/IcoOptimized.sol\":8243:8286  investorPayments[msg.sender][paymentMethod] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_536\n      jumpi\n      tag_536\n      tag_219\n      jump\t// in\n    tag_536:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_538\n      jumpi\n      tag_538\n      tag_219\n      jump\t// in\n    tag_538:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8243:8303  investorPayments[msg.sender][paymentMethod] += paymentAmount */\n      dup3\n      dup3\n      sload\n      tag_539\n      swap2\n      swap1\n      tag_506\n      jump\t// in\n    tag_539:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":7677:8369  if (... */\n      tag_540\n      swap2\n      pop\n      pop\n      jump\n    tag_540:\n        /* \"ICO/IcoOptimized.sol\":8396:8397  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8382:8393  tokenAmount */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":8382:8397  tokenAmount > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":8374:8422  require(tokenAmount > 0, \"Invalid token amount\") */\n      tag_542\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18755:18757   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":8374:8422  require(tokenAmount > 0, \"Invalid token amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18737:18758   */\n      mstore\n        /* \"#utility.yul\":18794:18796   */\n      0x14\n        /* \"#utility.yul\":18774:18792   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18767:18797   */\n      mstore\n      shl(0x62, 0x125b9d985b1a59081d1bdad95b88185b5bdd5b9d)\n        /* \"#utility.yul\":18813:18831   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18806:18856   */\n      mstore\n        /* \"#utility.yul\":18873:18891   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8374:8422  require(tokenAmount > 0, \"Invalid token amount\") */\n      tag_47\n        /* \"#utility.yul\":18553:18897   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8374:8422  require(tokenAmount > 0, \"Invalid token amount\") */\n    tag_542:\n        /* \"ICO/IcoOptimized.sol\":8529:8538  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":8484:8506  uint256 totalCostInUSD */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8523:8539  sales[saleCount] */\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8523:8528  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":8523:8539  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":8523:8553  sales[saleCount].tokenPriceUSD */\n      0x02\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":1022:1026  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8509:8553  tokenAmount * sales[saleCount].tokenPriceUSD */\n      tag_545\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8509:8520  tokenAmount */\n      dup5\n        /* \"ICO/IcoOptimized.sol\":8509:8553  tokenAmount * sales[saleCount].tokenPriceUSD */\n      tag_224\n      jump\t// in\n    tag_545:\n        /* \"ICO/IcoOptimized.sol\":8509:8568  tokenAmount * sales[saleCount].tokenPriceUSD / PRECISION_18 */\n      tag_546\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_546:\n        /* \"ICO/IcoOptimized.sol\":8484:8568  uint256 totalCostInUSD = tokenAmount * sales[saleCount].tokenPriceUSD / PRECISION_18 */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":8632:8644  hardCapInUSD */\n      sload(0x07)\n        /* \"ICO/IcoOptimized.sol\":8614:8628  totalCostInUSD */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":8592:8611  totalFundsRaisedUSD */\n      sload(0x09)\n        /* \"ICO/IcoOptimized.sol\":8592:8628  totalFundsRaisedUSD + totalCostInUSD */\n      tag_547\n      swap2\n      swap1\n      tag_506\n      jump\t// in\n    tag_547:\n        /* \"ICO/IcoOptimized.sol\":8592:8644  totalFundsRaisedUSD + totalCostInUSD <= hardCapInUSD */\n      gt\n      iszero\n        /* \"ICO/IcoOptimized.sol\":8575:8678  require(... */\n      tag_548\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19104:19106   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":8575:8678  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19086:19107   */\n      mstore\n        /* \"#utility.yul\":19143:19145   */\n      0x10\n        /* \"#utility.yul\":19123:19141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19116:19146   */\n      mstore\n      shl(0x82, 0x12185c990818d85c081c995858da1959)\n        /* \"#utility.yul\":19162:19180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19155:19201   */\n      mstore\n        /* \"#utility.yul\":19218:19236   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":8575:8678  require(... */\n      tag_47\n        /* \"#utility.yul\":18902:19242   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":8575:8678  require(... */\n    tag_548:\n        /* \"ICO/IcoOptimized.sol\":8704:8714  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8685:8715  contributionsInUSD[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8685:8703  contributionsInUSD */\n      0x10\n        /* \"ICO/IcoOptimized.sol\":8685:8715  contributionsInUSD[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":8685:8733  contributionsInUSD[msg.sender] += totalCostInUSD */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":8719:8733  totalCostInUSD */\n      dup4\n      swap3\n        /* \"ICO/IcoOptimized.sol\":8685:8715  contributionsInUSD[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8685:8733  contributionsInUSD[msg.sender] += totalCostInUSD */\n      tag_551\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8719:8733  totalCostInUSD */\n      dup5\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8685:8733  contributionsInUSD[msg.sender] += totalCostInUSD */\n      tag_506\n      jump\t// in\n    tag_551:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":8762:8776  totalCostInUSD */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":8739:8758  totalFundsRaisedUSD */\n      0x09\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8739:8776  totalFundsRaisedUSD += totalCostInUSD */\n      dup3\n      dup3\n      sload\n      tag_552\n      swap2\n      swap1\n      tag_506\n      jump\t// in\n    tag_552:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":8788:8797  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":8782:8798  sales[saleCount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8782:8787  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":8782:8798  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":8782:8809  sales[saleCount].tokensSold */\n      0x03\n      add\n        /* \"ICO/IcoOptimized.sol\":8782:8824  sales[saleCount].tokensSold += tokenAmount */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":8813:8824  tokenAmount */\n      dup5\n      swap3\n        /* \"ICO/IcoOptimized.sol\":8782:8798  sales[saleCount] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8782:8824  sales[saleCount].tokensSold += tokenAmount */\n      tag_553\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8813:8824  tokenAmount */\n      dup5\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8782:8824  sales[saleCount].tokensSold += tokenAmount */\n      tag_506\n      jump\t// in\n    tag_553:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":8849:8860  tokenAmount */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":8830:8845  totalTokensSold */\n      0x0a\n      0x00\n        /* \"ICO/IcoOptimized.sol\":8830:8860  totalTokensSold += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_554\n      swap2\n      swap1\n      tag_506\n      jump\t// in\n    tag_554:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":8894:8904  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8871:8905  tokensBoughtByInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8871:8893  tokensBoughtByInvestor */\n      0x11\n        /* \"ICO/IcoOptimized.sol\":8871:8905  tokensBoughtByInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ICO/IcoOptimized.sol\":8871:8910  tokensBoughtByInvestor[msg.sender] == 0 */\n      swap1\n      sub\n        /* \"ICO/IcoOptimized.sol\":8867:8955  if (tokensBoughtByInvestor[msg.sender] == 0) {... */\n      tag_555\n      jumpi\n        /* \"ICO/IcoOptimized.sol\":8922:8931  investors */\n      0x0c\n        /* \"ICO/IcoOptimized.sol\":8922:8948  investors.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"ICO/IcoOptimized.sol\":8937:8947  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8922:8948  investors.push(msg.sender) */\n      or\n      swap1\n      sstore\n        /* \"ICO/IcoOptimized.sol\":8867:8955  if (tokensBoughtByInvestor[msg.sender] == 0) {... */\n    tag_555:\n        /* \"ICO/IcoOptimized.sol\":8983:8993  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":8960:8994  tokensBoughtByInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":8960:8982  tokensBoughtByInvestor */\n      0x11\n        /* \"ICO/IcoOptimized.sol\":8960:8994  tokensBoughtByInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":8960:9009  tokensBoughtByInvestor[msg.sender] += tokenAmount */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":8998:9009  tokenAmount */\n      dup5\n      swap3\n        /* \"ICO/IcoOptimized.sol\":8960:8994  tokensBoughtByInvestor[msg.sender] */\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8960:9009  tokensBoughtByInvestor[msg.sender] += tokenAmount */\n      tag_557\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8998:9009  tokenAmount */\n      dup5\n      swap1\n        /* \"ICO/IcoOptimized.sol\":8960:9009  tokensBoughtByInvestor[msg.sender] += tokenAmount */\n      tag_506\n      jump\t// in\n    tag_557:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":9040:9050  msg.sender */\n      caller\n        /* \"ICO/IcoOptimized.sol\":9015:9051  paymentMethodForInvestor[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9015:9039  paymentMethodForInvestor */\n      0x13\n        /* \"ICO/IcoOptimized.sol\":9015:9051  paymentMethodForInvestor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":9015:9067  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":9054:9067  paymentMethod */\n      dup6\n      swap2\n        /* \"ICO/IcoOptimized.sol\":9015:9051  paymentMethodForInvestor[msg.sender] */\n      swap1\n      not(0xff)\n        /* \"ICO/IcoOptimized.sol\":9015:9067  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      and\n      0x01\n        /* \"ICO/IcoOptimized.sol\":9054:9067  paymentMethod */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":9015:9067  paymentMethodForInvestor[msg.sender] = paymentMethod */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_559\n      jumpi\n      tag_559\n      tag_219\n      jump\t// in\n    tag_559:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ICO/IcoOptimized.sol\":9124:9133  saleCount */\n      sload(0x08)\n        /* \"ICO/IcoOptimized.sol\":9164:9180  sales[saleCount] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9164:9169  sales */\n      0x0f\n        /* \"ICO/IcoOptimized.sol\":9164:9180  sales[saleCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"ICO/IcoOptimized.sol\":9164:9194  sales[saleCount].tokenPriceUSD */\n      0x02\n      add\n      sload\n        /* \"ICO/IcoOptimized.sol\":9079:9246  TokensPurchased(... */\n      swap1\n      mload\n        /* \"ICO/IcoOptimized.sol\":9104:9114  msg.sender */\n      caller\n      swap2\n        /* \"ICO/IcoOptimized.sol\":9079:9246  TokensPurchased(... */\n      0xdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e8\n      swap2\n      tag_560\n      swap2\n        /* \"ICO/IcoOptimized.sol\":9143:9154  tokenAmount */\n      dup8\n      swap2\n        /* \"ICO/IcoOptimized.sol\":9204:9217  paymentAmount */\n      dup10\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9227:9240  paymentMethod */\n      dup12\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9079:9246  TokensPurchased(... */\n      tag_561\n      jump\t// in\n    tag_560:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ICO/IcoOptimized.sol\":7176:9249  {... */\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":7072:9249  function buyTokens(PaymentMethod paymentMethod, uint256 paymentAmount) external payable icoNotFinalized {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_565\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_565:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_567\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_47\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_567:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_569\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_365\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_569:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_571\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_571:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_47\n        /* \"#utility.yul\":1642:1845   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":9587:10251  function _transferFundsToOwner() private {... */\n    tag_335:\n        /* \"ICO/IcoOptimized.sol\":9663:9667  usdt */\n      sload(0x0d)\n        /* \"ICO/IcoOptimized.sol\":9656:9693  IERC20(usdt).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9687:9691  this */\n      address\n        /* \"ICO/IcoOptimized.sol\":9656:9693  IERC20(usdt).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9634:9653  uint256 usdtBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":9663:9667  usdt */\n      and\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9656:9678  IERC20(usdt).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"ICO/IcoOptimized.sol\":9656:9693  IERC20(usdt).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_582\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_582:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_583\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_583:\n        /* \"ICO/IcoOptimized.sol\":9779:9783  usdc */\n      sload(0x0e)\n        /* \"ICO/IcoOptimized.sol\":9772:9809  IERC20(usdc).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9803:9807  this */\n      address\n        /* \"ICO/IcoOptimized.sol\":9772:9809  IERC20(usdc).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1788:1839   */\n      mstore\n        /* \"ICO/IcoOptimized.sol\":9634:9693  uint256 usdtBalance = IERC20(usdt).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"ICO/IcoOptimized.sol\":9723:9744  address(this).balance */\n      selfbalance\n      swap2\n        /* \"ICO/IcoOptimized.sol\":9699:9720  uint256 nativeBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ICO/IcoOptimized.sol\":9779:9783  usdc */\n      and\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9772:9794  IERC20(usdc).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1761:1779   */\n      0x24\n      add\n        /* \"ICO/IcoOptimized.sol\":9772:9809  IERC20(usdc).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_586\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_586:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_587\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_587:\n        /* \"ICO/IcoOptimized.sol\":9750:9809  uint256 usdcBalance = IERC20(usdc).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":9838:9839  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9823:9836  nativeBalance */\n      dup3\n        /* \"ICO/IcoOptimized.sol\":9823:9839  nativeBalance >0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":9823:9856  nativeBalance >0 && usdtBalance>0 */\n      dup1\n      iszero\n      tag_588\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":9855:9856  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9843:9854  usdtBalance */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":9843:9856  usdtBalance>0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":9823:9856  nativeBalance >0 && usdtBalance>0 */\n    tag_588:\n        /* \"ICO/IcoOptimized.sol\":9823:9875  nativeBalance >0 && usdtBalance>0 && usdcBalance > 0 */\n      dup1\n      iszero\n      tag_589\n      jumpi\n      pop\n        /* \"ICO/IcoOptimized.sol\":9874:9875  0 */\n      0x00\n        /* \"ICO/IcoOptimized.sol\":9860:9871  usdcBalance */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":9860:9875  usdcBalance > 0 */\n      gt\n        /* \"ICO/IcoOptimized.sol\":9823:9875  nativeBalance >0 && usdtBalance>0 && usdcBalance > 0 */\n    tag_589:\n        /* \"ICO/IcoOptimized.sol\":9815:9905  require(nativeBalance >0 && usdtBalance>0 && usdcBalance > 0 ,\"balances must not be Zero\") */\n      tag_590\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19884:19886   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":9815:9905  require(nativeBalance >0 && usdtBalance>0 && usdcBalance > 0 ,\"balances must not be Zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19866:19887   */\n      mstore\n        /* \"#utility.yul\":19923:19925   */\n      0x19\n        /* \"#utility.yul\":19903:19921   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19896:19926   */\n      mstore\n        /* \"#utility.yul\":19962:19989   */\n      0x62616c616e636573206d757374206e6f74206265205a65726f00000000000000\n        /* \"#utility.yul\":19942:19960   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19935:19990   */\n      mstore\n        /* \"#utility.yul\":20007:20025   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":9815:9905  require(nativeBalance >0 && usdtBalance>0 && usdcBalance > 0 ,\"balances must not be Zero\") */\n      tag_47\n        /* \"#utility.yul\":19682:20031   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":9815:9905  require(nativeBalance >0 && usdtBalance>0 && usdcBalance > 0 ,\"balances must not be Zero\") */\n    tag_590:\n        /* \"ICO/IcoOptimized.sol\":9926:9938  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      sload\n        /* \"ICO/IcoOptimized.sol\":9944:9991  payable(owner()).call{value: nativeBalance}(\"\") */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9973:9986  nativeBalance */\n      dup5\n      swap1\n        /* \"ICO/IcoOptimized.sol\":9926:9938  bool success */\n      dup4\n        /* \"ICO/IcoOptimized.sol\":9944:9991  payable(owner()).call{value: nativeBalance}(\"\") */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":9926:9938  bool success */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":9944:9991  payable(owner()).call{value: nativeBalance}(\"\") */\n      dup2\n        /* \"ICO/IcoOptimized.sol\":9973:9986  nativeBalance */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup8\n        /* \"ICO/IcoOptimized.sol\":9944:9991  payable(owner()).call{value: nativeBalance}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_597\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_596)\n    tag_597:\n      0x60\n      swap2\n      pop\n    tag_596:\n      pop\n        /* \"ICO/IcoOptimized.sol\":9925:9991  (bool success, ) = payable(owner()).call{value: nativeBalance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ICO/IcoOptimized.sol\":10009:10016  success */\n      dup1\n        /* \"ICO/IcoOptimized.sol\":10001:10036  require(success, \"Transfer failed\") */\n      tag_598\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20238:20240   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":10001:10036  require(success, \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20220:20241   */\n      mstore\n        /* \"#utility.yul\":20277:20279   */\n      0x0f\n        /* \"#utility.yul\":20257:20275   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20250:20280   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":20296:20314   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20289:20334   */\n      mstore\n        /* \"#utility.yul\":20351:20369   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":10001:10036  require(success, \"Transfer failed\") */\n      tag_47\n        /* \"#utility.yul\":20036:20375   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10001:10036  require(success, \"Transfer failed\") */\n    tag_598:\n        /* \"ICO/IcoOptimized.sol\":10080:10084  usdt */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"ICO/IcoOptimized.sol\":10073:10094  IERC20(usdt).transfer */\n      0xa9059cbb\n        /* \"ICO/IcoOptimized.sol\":10095:10102  owner() */\n      tag_601\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10095:10102  owner() */\n    tag_601:\n        /* \"ICO/IcoOptimized.sol\":10073:10116  IERC20(usdt).transfer(owner(), usdtBalance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13818:13850   */\n      swap1\n      swap2\n      and\n        /* \"ICO/IcoOptimized.sol\":10073:10116  IERC20(usdt).transfer(owner(), usdtBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13800:13851   */\n      mstore\n        /* \"#utility.yul\":13867:13885   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":13860:13894   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":13773:13791   */\n      0x44\n      add\n        /* \"ICO/IcoOptimized.sol\":10073:10116  IERC20(usdt).transfer(owner(), usdtBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_604\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_604:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_605\n      swap2\n      swap1\n      tag_437\n      jump\t// in\n    tag_605:\n        /* \"ICO/IcoOptimized.sol\":10065:10141  require(IERC20(usdt).transfer(owner(), usdtBalance), \"USDT transfer failed\") */\n      tag_606\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20582:20584   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":10065:10141  require(IERC20(usdt).transfer(owner(), usdtBalance), \"USDT transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20564:20585   */\n      mstore\n        /* \"#utility.yul\":20621:20623   */\n      0x14\n        /* \"#utility.yul\":20601:20619   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20594:20624   */\n      mstore\n      shl(0x62, 0x1554d115081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":20640:20658   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20633:20683   */\n      mstore\n        /* \"#utility.yul\":20700:20718   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":10065:10141  require(IERC20(usdt).transfer(owner(), usdtBalance), \"USDT transfer failed\") */\n      tag_47\n        /* \"#utility.yul\":20380:20724   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10065:10141  require(IERC20(usdt).transfer(owner(), usdtBalance), \"USDT transfer failed\") */\n    tag_606:\n        /* \"ICO/IcoOptimized.sol\":10182:10186  usdc */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"ICO/IcoOptimized.sol\":10175:10196  IERC20(usdc).transfer */\n      0xa9059cbb\n        /* \"ICO/IcoOptimized.sol\":10197:10204  owner() */\n      tag_609\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10197:10204  owner() */\n    tag_609:\n        /* \"ICO/IcoOptimized.sol\":10175:10218  IERC20(usdc).transfer(owner(), usdcBalance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13818:13850   */\n      swap1\n      swap2\n      and\n        /* \"ICO/IcoOptimized.sol\":10175:10218  IERC20(usdc).transfer(owner(), usdcBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13800:13851   */\n      mstore\n        /* \"#utility.yul\":13867:13885   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":13860:13894   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":13773:13791   */\n      0x44\n      add\n        /* \"ICO/IcoOptimized.sol\":10175:10218  IERC20(usdc).transfer(owner(), usdcBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_612\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_612:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_613\n      swap2\n      swap1\n      tag_437\n      jump\t// in\n    tag_613:\n        /* \"ICO/IcoOptimized.sol\":10167:10243  require(IERC20(usdc).transfer(owner(), usdcBalance), \"USDC transfer failed\") */\n      tag_614\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20931:20933   */\n      0x20\n        /* \"ICO/IcoOptimized.sol\":10167:10243  require(IERC20(usdc).transfer(owner(), usdcBalance), \"USDC transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20913:20934   */\n      mstore\n        /* \"#utility.yul\":20970:20972   */\n      0x14\n        /* \"#utility.yul\":20950:20968   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20943:20973   */\n      mstore\n      shl(0x62, 0x1554d110c81d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":20989:21007   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20982:21032   */\n      mstore\n        /* \"#utility.yul\":21049:21067   */\n      0x64\n      add\n        /* \"ICO/IcoOptimized.sol\":10167:10243  require(IERC20(usdc).transfer(owner(), usdcBalance), \"USDC transfer failed\") */\n      tag_47\n        /* \"#utility.yul\":20729:21073   */\n      jump\n        /* \"ICO/IcoOptimized.sol\":10167:10243  require(IERC20(usdc).transfer(owner(), usdcBalance), \"USDC transfer failed\") */\n    tag_614:\n        /* \"ICO/IcoOptimized.sol\":9628:10251  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ICO/IcoOptimized.sol\":9587:10251  function _transferFundsToOwner() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":375:529   */\n    tag_621:\n        /* \"#utility.yul\":454:474   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":503:504   */\n      0x03\n        /* \"#utility.yul\":493:505   */\n      dup2\n      lt\n        /* \"#utility.yul\":483:523   */\n      tag_631\n      jumpi\n        /* \"#utility.yul\":519:520   */\n      0x00\n        /* \"#utility.yul\":516:517   */\n      dup1\n        /* \"#utility.yul\":509:521   */\n      revert\n        /* \"#utility.yul\":483:523   */\n    tag_631:\n        /* \"#utility.yul\":375:529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":534:863   */\n    tag_52:\n        /* \"#utility.yul\":620:626   */\n      0x00\n        /* \"#utility.yul\":628:634   */\n      dup1\n        /* \"#utility.yul\":681:683   */\n      0x40\n        /* \"#utility.yul\":669:678   */\n      dup4\n        /* \"#utility.yul\":660:667   */\n      dup6\n        /* \"#utility.yul\":656:679   */\n      sub\n        /* \"#utility.yul\":652:684   */\n      slt\n        /* \"#utility.yul\":649:701   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":697:698   */\n      0x00\n        /* \"#utility.yul\":694:695   */\n      dup1\n        /* \"#utility.yul\":687:699   */\n      revert\n        /* \"#utility.yul\":649:701   */\n    tag_633:\n        /* \"#utility.yul\":720:760   */\n      tag_634\n        /* \"#utility.yul\":750:759   */\n      dup4\n        /* \"#utility.yul\":720:760   */\n      tag_621\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":710:760   */\n      swap5\n        /* \"#utility.yul\":829:831   */\n      0x20\n        /* \"#utility.yul\":814:832   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":801:833   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":534:863   */\n      jump\t// out\n        /* \"#utility.yul\":1242:1457   */\n    tag_64:\n        /* \"#utility.yul\":1319:1325   */\n      0x00\n        /* \"#utility.yul\":1372:1374   */\n      0x20\n        /* \"#utility.yul\":1360:1369   */\n      dup3\n        /* \"#utility.yul\":1351:1358   */\n      dup5\n        /* \"#utility.yul\":1347:1370   */\n      sub\n        /* \"#utility.yul\":1343:1375   */\n      slt\n        /* \"#utility.yul\":1340:1392   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1340:1392   */\n    tag_638:\n        /* \"#utility.yul\":1411:1451   */\n      tag_639\n        /* \"#utility.yul\":1441:1450   */\n      dup3\n        /* \"#utility.yul\":1411:1451   */\n      tag_621\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":1401:1451   */\n      swap4\n        /* \"#utility.yul\":1242:1457   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1850:2076   */\n    tag_96:\n        /* \"#utility.yul\":1909:1915   */\n      0x00\n        /* \"#utility.yul\":1962:1964   */\n      0x20\n        /* \"#utility.yul\":1950:1959   */\n      dup3\n        /* \"#utility.yul\":1941:1948   */\n      dup5\n        /* \"#utility.yul\":1937:1960   */\n      sub\n        /* \"#utility.yul\":1933:1965   */\n      slt\n        /* \"#utility.yul\":1930:1982   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":1978:1979   */\n      0x00\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1968:1980   */\n      revert\n        /* \"#utility.yul\":1930:1982   */\n    tag_643:\n      pop\n        /* \"#utility.yul\":2023:2046   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1850:2076   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2783   */\n    tag_115:\n        /* \"#utility.yul\":2394:2400   */\n      0x00\n        /* \"#utility.yul\":2402:2408   */\n      dup1\n        /* \"#utility.yul\":2410:2416   */\n      0x00\n        /* \"#utility.yul\":2463:2465   */\n      0x60\n        /* \"#utility.yul\":2451:2460   */\n      dup5\n        /* \"#utility.yul\":2442:2449   */\n      dup7\n        /* \"#utility.yul\":2438:2461   */\n      sub\n        /* \"#utility.yul\":2434:2466   */\n      slt\n        /* \"#utility.yul\":2431:2483   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":2479:2480   */\n      0x00\n        /* \"#utility.yul\":2476:2477   */\n      dup1\n        /* \"#utility.yul\":2469:2481   */\n      revert\n        /* \"#utility.yul\":2431:2483   */\n    tag_646:\n      pop\n      pop\n        /* \"#utility.yul\":2524:2547   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":2644:2646   */\n      0x20\n        /* \"#utility.yul\":2629:2647   */\n      dup4\n      add\n        /* \"#utility.yul\":2616:2648   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2747:2749   */\n      0x40\n        /* \"#utility.yul\":2732:2750   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2719:2751   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2317:2783   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3519:3692   */\n    tag_622:\n        /* \"#utility.yul\":3587:3607   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3636:3667   */\n      dup2\n      and\n        /* \"#utility.yul\":3626:3668   */\n      dup2\n      eq\n        /* \"#utility.yul\":3616:3686   */\n      tag_631\n      jumpi\n        /* \"#utility.yul\":3682:3683   */\n      0x00\n        /* \"#utility.yul\":3679:3680   */\n      dup1\n        /* \"#utility.yul\":3672:3684   */\n      revert\n        /* \"#utility.yul\":3697:3883   */\n    tag_172:\n        /* \"#utility.yul\":3756:3762   */\n      0x00\n        /* \"#utility.yul\":3809:3811   */\n      0x20\n        /* \"#utility.yul\":3797:3806   */\n      dup3\n        /* \"#utility.yul\":3788:3795   */\n      dup5\n        /* \"#utility.yul\":3784:3807   */\n      sub\n        /* \"#utility.yul\":3780:3812   */\n      slt\n        /* \"#utility.yul\":3777:3829   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":3825:3826   */\n      0x00\n        /* \"#utility.yul\":3822:3823   */\n      dup1\n        /* \"#utility.yul\":3815:3827   */\n      revert\n        /* \"#utility.yul\":3777:3829   */\n    tag_652:\n        /* \"#utility.yul\":3848:3877   */\n      tag_639\n        /* \"#utility.yul\":3867:3876   */\n      dup3\n        /* \"#utility.yul\":3848:3877   */\n      tag_622\n      jump\t// in\n        /* \"#utility.yul\":3888:4015   */\n    tag_219:\n        /* \"#utility.yul\":3949:3959   */\n      0x4e487b71\n        /* \"#utility.yul\":3944:3947   */\n      0xe0\n        /* \"#utility.yul\":3940:3960   */\n      shl\n        /* \"#utility.yul\":3937:3938   */\n      0x00\n        /* \"#utility.yul\":3930:3961   */\n      mstore\n        /* \"#utility.yul\":3980:3984   */\n      0x21\n        /* \"#utility.yul\":3977:3978   */\n      0x04\n        /* \"#utility.yul\":3970:3985   */\n      mstore\n        /* \"#utility.yul\":4004:4008   */\n      0x24\n        /* \"#utility.yul\":4001:4002   */\n      0x00\n        /* \"#utility.yul\":3994:4009   */\n      revert\n        /* \"#utility.yul\":4020:4261   */\n    tag_623:\n        /* \"#utility.yul\":4105:4106   */\n      0x03\n        /* \"#utility.yul\":4098:4103   */\n      dup2\n        /* \"#utility.yul\":4095:4107   */\n      lt\n        /* \"#utility.yul\":4085:4228   */\n      tag_656\n      jumpi\n        /* \"#utility.yul\":4150:4160   */\n      0x4e487b71\n        /* \"#utility.yul\":4145:4148   */\n      0xe0\n        /* \"#utility.yul\":4141:4161   */\n      shl\n        /* \"#utility.yul\":4138:4139   */\n      0x00\n        /* \"#utility.yul\":4131:4162   */\n      mstore\n        /* \"#utility.yul\":4185:4189   */\n      0x21\n        /* \"#utility.yul\":4182:4183   */\n      0x04\n        /* \"#utility.yul\":4175:4190   */\n      mstore\n        /* \"#utility.yul\":4213:4217   */\n      0x24\n        /* \"#utility.yul\":4210:4211   */\n      0x00\n        /* \"#utility.yul\":4203:4218   */\n      revert\n        /* \"#utility.yul\":4085:4228   */\n    tag_656:\n        /* \"#utility.yul\":4237:4255   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4020:4261   */\n      jump\t// out\n        /* \"#utility.yul\":4266:4482   */\n    tag_188:\n        /* \"#utility.yul\":4416:4418   */\n      0x20\n        /* \"#utility.yul\":4401:4419   */\n      dup2\n      add\n        /* \"#utility.yul\":4428:4476   */\n      tag_209\n        /* \"#utility.yul\":4405:4414   */\n      dup3\n        /* \"#utility.yul\":4458:4464   */\n      dup5\n        /* \"#utility.yul\":4428:4476   */\n      tag_623\n      jump\t// in\n        /* \"#utility.yul\":4487:4776   */\n    tag_197:\n        /* \"#utility.yul\":4573:4579   */\n      0x00\n        /* \"#utility.yul\":4581:4587   */\n      dup1\n        /* \"#utility.yul\":4634:4636   */\n      0x40\n        /* \"#utility.yul\":4622:4631   */\n      dup4\n        /* \"#utility.yul\":4613:4620   */\n      dup6\n        /* \"#utility.yul\":4609:4632   */\n      sub\n        /* \"#utility.yul\":4605:4637   */\n      slt\n        /* \"#utility.yul\":4602:4654   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4647:4648   */\n      dup1\n        /* \"#utility.yul\":4640:4652   */\n      revert\n        /* \"#utility.yul\":4602:4654   */\n    tag_660:\n        /* \"#utility.yul\":4673:4702   */\n      tag_661\n        /* \"#utility.yul\":4692:4701   */\n      dup4\n        /* \"#utility.yul\":4673:4702   */\n      tag_622\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":4663:4702   */\n      swap2\n      pop\n        /* \"#utility.yul\":4721:4770   */\n      tag_662\n        /* \"#utility.yul\":4766:4768   */\n      0x20\n        /* \"#utility.yul\":4755:4764   */\n      dup5\n        /* \"#utility.yul\":4751:4769   */\n      add\n        /* \"#utility.yul\":4721:4770   */\n      tag_621\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":4711:4770   */\n      swap1\n      pop\n        /* \"#utility.yul\":4487:4776   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5006:5133   */\n    tag_624:\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5098:5102   */\n      0x11\n        /* \"#utility.yul\":5095:5096   */\n      0x04\n        /* \"#utility.yul\":5088:5103   */\n      mstore\n        /* \"#utility.yul\":5122:5126   */\n      0x24\n        /* \"#utility.yul\":5119:5120   */\n      0x00\n        /* \"#utility.yul\":5112:5127   */\n      revert\n        /* \"#utility.yul\":5138:5375   */\n    tag_212:\n        /* \"#utility.yul\":5210:5219   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5177:5184   */\n      0x00\n        /* \"#utility.yul\":5235:5244   */\n      dup3\n      slt\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":5246:5264   */\n      dup5\n      eq\n        /* \"#utility.yul\":5231:5265   */\n      and\n        /* \"#utility.yul\":5228:5288   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":5268:5286   */\n      tag_667\n      tag_624\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":5341:5342   */\n      dup2\n        /* \"#utility.yul\":5332:5339   */\n      dup2\n        /* \"#utility.yul\":5327:5343   */\n      sdiv\n        /* \"#utility.yul\":5324:5325   */\n      dup4\n        /* \"#utility.yul\":5321:5344   */\n      eq\n        /* \"#utility.yul\":5317:5318   */\n      dup3\n        /* \"#utility.yul\":5310:5319   */\n      iszero\n        /* \"#utility.yul\":5307:5345   */\n      or\n        /* \"#utility.yul\":5297:5369   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5349:5367   */\n      tag_209\n      tag_624\n      jump\t// in\n        /* \"#utility.yul\":5727:5895   */\n    tag_224:\n        /* \"#utility.yul\":5800:5809   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5831:5840   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5848:5863   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5842:5864   */\n      dup5\n      eq\n        /* \"#utility.yul\":5828:5865   */\n      or\n        /* \"#utility.yul\":5818:5889   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5869:5887   */\n      tag_209\n      tag_624\n      jump\t// in\n        /* \"#utility.yul\":5900:6117   */\n    tag_226:\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5966:5967   */\n      dup3\n        /* \"#utility.yul\":5956:6088   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":6010:6020   */\n      0x4e487b71\n        /* \"#utility.yul\":6005:6008   */\n      0xe0\n        /* \"#utility.yul\":6001:6021   */\n      shl\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":5991:6022   */\n      mstore\n        /* \"#utility.yul\":6045:6049   */\n      0x12\n        /* \"#utility.yul\":6042:6043   */\n      0x04\n        /* \"#utility.yul\":6035:6050   */\n      mstore\n        /* \"#utility.yul\":6073:6077   */\n      0x24\n        /* \"#utility.yul\":6070:6071   */\n      0x00\n        /* \"#utility.yul\":6063:6078   */\n      revert\n        /* \"#utility.yul\":5956:6088   */\n    tag_675:\n      pop\n        /* \"#utility.yul\":6102:6111   */\n      div\n      swap1\n        /* \"#utility.yul\":5900:6117   */\n      jump\t// out\n        /* \"#utility.yul\":6122:6250   */\n    tag_239:\n        /* \"#utility.yul\":6189:6198   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6210:6221   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6207:6244   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6224:6242   */\n      tag_209\n      tag_624\n      jump\t// in\n        /* \"#utility.yul\":6255:6630   */\n    tag_625:\n        /* \"#utility.yul\":6343:6344   */\n      0x01\n        /* \"#utility.yul\":6361:6366   */\n      dup2\n        /* \"#utility.yul\":6375:6624   */\n    tag_680:\n        /* \"#utility.yul\":6396:6397   */\n      0x01\n        /* \"#utility.yul\":6386:6394   */\n      dup5\n        /* \"#utility.yul\":6383:6398   */\n      gt\n        /* \"#utility.yul\":6375:6624   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":6446:6450   */\n      dup1\n        /* \"#utility.yul\":6441:6444   */\n      dup6\n        /* \"#utility.yul\":6437:6451   */\n      div\n        /* \"#utility.yul\":6431:6435   */\n      dup2\n        /* \"#utility.yul\":6428:6452   */\n      gt\n        /* \"#utility.yul\":6425:6475   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":6455:6473   */\n      tag_684\n      tag_624\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":6505:6506   */\n      0x01\n        /* \"#utility.yul\":6495:6503   */\n      dup5\n        /* \"#utility.yul\":6491:6507   */\n      and\n        /* \"#utility.yul\":6488:6537   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":6519:6535   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":6488:6537   */\n    tag_685:\n        /* \"#utility.yul\":6602:6603   */\n      0x01\n        /* \"#utility.yul\":6598:6614   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":6558:6573   */\n      dup1\n      mul\n        /* \"#utility.yul\":6375:6624   */\n      jump(tag_680)\n    tag_682:\n        /* \"#utility.yul\":6255:6630   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6635:7537   */\n    tag_626:\n        /* \"#utility.yul\":6684:6689   */\n      0x00\n        /* \"#utility.yul\":6714:6722   */\n      dup3\n        /* \"#utility.yul\":6704:6784   */\n      tag_687\n      jumpi\n      pop\n        /* \"#utility.yul\":6755:6756   */\n      0x01\n        /* \"#utility.yul\":6769:6774   */\n      jump(tag_209)\n        /* \"#utility.yul\":6704:6784   */\n    tag_687:\n        /* \"#utility.yul\":6803:6807   */\n      dup2\n        /* \"#utility.yul\":6793:6869   */\n      tag_688\n      jumpi\n      pop\n        /* \"#utility.yul\":6840:6841   */\n      0x00\n        /* \"#utility.yul\":6854:6859   */\n      jump(tag_209)\n        /* \"#utility.yul\":6793:6869   */\n    tag_688:\n        /* \"#utility.yul\":6885:6889   */\n      dup2\n        /* \"#utility.yul\":6903:6904   */\n      0x01\n        /* \"#utility.yul\":6898:6957   */\n      dup2\n      eq\n      tag_690\n      jumpi\n        /* \"#utility.yul\":6971:6972   */\n      0x02\n        /* \"#utility.yul\":6966:7140   */\n      dup2\n      eq\n      tag_691\n      jumpi\n        /* \"#utility.yul\":6878:7140   */\n      jump(tag_689)\n        /* \"#utility.yul\":6898:6957   */\n    tag_690:\n        /* \"#utility.yul\":6928:6929   */\n      0x01\n        /* \"#utility.yul\":6919:6929   */\n      swap2\n      pop\n        /* \"#utility.yul\":6942:6947   */\n      pop\n      jump(tag_209)\n        /* \"#utility.yul\":6966:7140   */\n    tag_691:\n        /* \"#utility.yul\":7003:7006   */\n      0xff\n        /* \"#utility.yul\":6993:7001   */\n      dup5\n        /* \"#utility.yul\":6990:7007   */\n      gt\n        /* \"#utility.yul\":6987:7030   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":7010:7028   */\n      tag_693\n      tag_624\n      jump\t// in\n    tag_693:\n      pop\n      pop\n        /* \"#utility.yul\":7066:7067   */\n      0x01\n        /* \"#utility.yul\":7052:7068   */\n      dup3\n      shl\n        /* \"#utility.yul\":7125:7130   */\n      jump(tag_209)\n        /* \"#utility.yul\":6878:7140   */\n    tag_689:\n      pop\n        /* \"#utility.yul\":7224:7226   */\n      0x20\n        /* \"#utility.yul\":7214:7222   */\n      dup4\n        /* \"#utility.yul\":7211:7227   */\n      lt\n        /* \"#utility.yul\":7205:7208   */\n      0x0133\n        /* \"#utility.yul\":7199:7203   */\n      dup4\n        /* \"#utility.yul\":7196:7209   */\n      lt\n        /* \"#utility.yul\":7192:7228   */\n      and\n        /* \"#utility.yul\":7186:7188   */\n      0x4e\n        /* \"#utility.yul\":7176:7184   */\n      dup5\n        /* \"#utility.yul\":7173:7189   */\n      lt\n        /* \"#utility.yul\":7168:7170   */\n      0x0b\n        /* \"#utility.yul\":7162:7166   */\n      dup5\n        /* \"#utility.yul\":7159:7171   */\n      lt\n        /* \"#utility.yul\":7155:7190   */\n      and\n        /* \"#utility.yul\":7152:7229   */\n      or\n        /* \"#utility.yul\":7149:7352   */\n      iszero\n      tag_694\n      jumpi\n      pop\n        /* \"#utility.yul\":7261:7280   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":7337:7342   */\n      jump(tag_209)\n        /* \"#utility.yul\":7149:7352   */\n    tag_694:\n        /* \"#utility.yul\":7384:7426   */\n      tag_695\n      not(0x00)\n        /* \"#utility.yul\":7409:7417   */\n      dup5\n        /* \"#utility.yul\":7403:7407   */\n      dup5\n        /* \"#utility.yul\":7384:7426   */\n      tag_625\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":7462:7468   */\n      dup1\n        /* \"#utility.yul\":7458:7459   */\n      0x00\n        /* \"#utility.yul\":7454:7460   */\n      not\n        /* \"#utility.yul\":7450:7469   */\n      div\n        /* \"#utility.yul\":7441:7448   */\n      dup3\n        /* \"#utility.yul\":7438:7470   */\n      gt\n        /* \"#utility.yul\":7435:7493   */\n      iszero\n      tag_697\n      jumpi\n        /* \"#utility.yul\":7473:7491   */\n      tag_697\n      tag_624\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":7511:7531   */\n      mul\n      swap4\n        /* \"#utility.yul\":6635:7537   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7542:7673   */\n    tag_241:\n        /* \"#utility.yul\":7602:7607   */\n      0x00\n        /* \"#utility.yul\":7631:7667   */\n      tag_639\n        /* \"#utility.yul\":7658:7666   */\n      dup4\n        /* \"#utility.yul\":7652:7656   */\n      dup4\n        /* \"#utility.yul\":7631:7667   */\n      tag_626\n      jump\t// in\n        /* \"#utility.yul\":8033:8212   */\n    tag_627:\n        /* \"#utility.yul\":8111:8124   */\n      dup1\n      mload\n        /* \"#utility.yul\":8164:8186   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8153:8187   */\n      dup2\n      and\n        /* \"#utility.yul\":8143:8188   */\n      dup2\n      eq\n        /* \"#utility.yul\":8133:8206   */\n      tag_631\n      jumpi\n        /* \"#utility.yul\":8202:8203   */\n      0x00\n        /* \"#utility.yul\":8199:8200   */\n      dup1\n        /* \"#utility.yul\":8192:8204   */\n      revert\n        /* \"#utility.yul\":8217:8788   */\n    tag_260:\n        /* \"#utility.yul\":8320:8326   */\n      0x00\n        /* \"#utility.yul\":8328:8334   */\n      dup1\n        /* \"#utility.yul\":8336:8342   */\n      0x00\n        /* \"#utility.yul\":8344:8350   */\n      dup1\n        /* \"#utility.yul\":8352:8358   */\n      0x00\n        /* \"#utility.yul\":8405:8408   */\n      0xa0\n        /* \"#utility.yul\":8393:8402   */\n      dup7\n        /* \"#utility.yul\":8384:8391   */\n      dup9\n        /* \"#utility.yul\":8380:8403   */\n      sub\n        /* \"#utility.yul\":8376:8409   */\n      slt\n        /* \"#utility.yul\":8373:8426   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":8422:8423   */\n      0x00\n        /* \"#utility.yul\":8419:8420   */\n      dup1\n        /* \"#utility.yul\":8412:8424   */\n      revert\n        /* \"#utility.yul\":8373:8426   */\n    tag_704:\n        /* \"#utility.yul\":8445:8484   */\n      tag_705\n        /* \"#utility.yul\":8474:8483   */\n      dup7\n        /* \"#utility.yul\":8445:8484   */\n      tag_627\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":8524:8526   */\n      0x20\n        /* \"#utility.yul\":8509:8527   */\n      dup8\n      add\n        /* \"#utility.yul\":8503:8528   */\n      mload\n        /* \"#utility.yul\":8590:8592   */\n      0x40\n        /* \"#utility.yul\":8575:8593   */\n      dup9\n      add\n        /* \"#utility.yul\":8569:8594   */\n      mload\n        /* \"#utility.yul\":8684:8686   */\n      0x60\n        /* \"#utility.yul\":8669:8687   */\n      dup10\n      add\n        /* \"#utility.yul\":8663:8688   */\n      mload\n        /* \"#utility.yul\":8435:8484   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":8503:8528   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":8569:8594   */\n      swap4\n      pop\n        /* \"#utility.yul\":8663:8688   */\n      swap2\n      pop\n        /* \"#utility.yul\":8733:8782   */\n      tag_706\n        /* \"#utility.yul\":8777:8780   */\n      0x80\n        /* \"#utility.yul\":8762:8781   */\n      dup8\n      add\n        /* \"#utility.yul\":8733:8782   */\n      tag_627\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":8723:8782   */\n      swap1\n      pop\n        /* \"#utility.yul\":8217:8788   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9543:9773   */\n    tag_294:\n        /* \"#utility.yul\":9613:9619   */\n      0x00\n        /* \"#utility.yul\":9666:9668   */\n      0x20\n        /* \"#utility.yul\":9654:9663   */\n      dup3\n        /* \"#utility.yul\":9645:9652   */\n      dup5\n        /* \"#utility.yul\":9641:9664   */\n      sub\n        /* \"#utility.yul\":9637:9669   */\n      slt\n        /* \"#utility.yul\":9634:9686   */\n      iszero\n      tag_710\n      jumpi\n        /* \"#utility.yul\":9682:9683   */\n      0x00\n        /* \"#utility.yul\":9679:9680   */\n      dup1\n        /* \"#utility.yul\":9672:9684   */\n      revert\n        /* \"#utility.yul\":9634:9686   */\n    tag_710:\n      pop\n        /* \"#utility.yul\":9727:9743   */\n      mload\n      swap2\n        /* \"#utility.yul\":9543:9773   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9778:10123   */\n    tag_329:\n        /* \"#utility.yul\":9980:9982   */\n      0x20\n        /* \"#utility.yul\":9962:9983   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10019:10021   */\n      0x15\n        /* \"#utility.yul\":9999:10017   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9992:10022   */\n      mstore\n      shl(0x5a, 0x1250d3c8185b1c9958591e48199a5b985b1a5e9959)\n        /* \"#utility.yul\":10053:10055   */\n      0x40\n        /* \"#utility.yul\":10038:10056   */\n      dup3\n      add\n        /* \"#utility.yul\":10031:10082   */\n      mstore\n        /* \"#utility.yul\":10114:10116   */\n      0x60\n        /* \"#utility.yul\":10099:10117   */\n      add\n      swap1\n        /* \"#utility.yul\":9778:10123   */\n      jump\t// out\n        /* \"#utility.yul\":11788:11923   */\n    tag_358:\n        /* \"#utility.yul\":11827:11830   */\n      0x00\n        /* \"#utility.yul\":11848:11865   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11845:11888   */\n      tag_718\n      jumpi\n        /* \"#utility.yul\":11868:11886   */\n      tag_718\n      tag_624\n      jump\t// in\n    tag_718:\n      pop\n        /* \"#utility.yul\":11915:11916   */\n      0x01\n        /* \"#utility.yul\":11904:11917   */\n      add\n      swap1\n        /* \"#utility.yul\":11788:11923   */\n      jump\t// out\n        /* \"#utility.yul\":12938:13065   */\n    tag_386:\n        /* \"#utility.yul\":12999:13009   */\n      0x4e487b71\n        /* \"#utility.yul\":12994:12997   */\n      0xe0\n        /* \"#utility.yul\":12990:13010   */\n      shl\n        /* \"#utility.yul\":12987:12988   */\n      0x00\n        /* \"#utility.yul\":12980:13011   */\n      mstore\n        /* \"#utility.yul\":13030:13034   */\n      0x32\n        /* \"#utility.yul\":13027:13028   */\n      0x04\n        /* \"#utility.yul\":13020:13035   */\n      mstore\n        /* \"#utility.yul\":13054:13058   */\n      0x24\n        /* \"#utility.yul\":13051:13052   */\n      0x00\n        /* \"#utility.yul\":13044:13059   */\n      revert\n        /* \"#utility.yul\":13905:14182   */\n    tag_437:\n        /* \"#utility.yul\":13972:13978   */\n      0x00\n        /* \"#utility.yul\":14025:14027   */\n      0x20\n        /* \"#utility.yul\":14013:14022   */\n      dup3\n        /* \"#utility.yul\":14004:14011   */\n      dup5\n        /* \"#utility.yul\":14000:14023   */\n      sub\n        /* \"#utility.yul\":13996:14028   */\n      slt\n        /* \"#utility.yul\":13993:14045   */\n      iszero\n      tag_727\n      jumpi\n        /* \"#utility.yul\":14041:14042   */\n      0x00\n        /* \"#utility.yul\":14038:14039   */\n      dup1\n        /* \"#utility.yul\":14031:14043   */\n      revert\n        /* \"#utility.yul\":13993:14045   */\n    tag_727:\n        /* \"#utility.yul\":14073:14082   */\n      dup2\n        /* \"#utility.yul\":14067:14083   */\n      mload\n        /* \"#utility.yul\":14126:14131   */\n      dup1\n        /* \"#utility.yul\":14119:14132   */\n      iszero\n        /* \"#utility.yul\":14112:14133   */\n      iszero\n        /* \"#utility.yul\":14105:14110   */\n      dup2\n        /* \"#utility.yul\":14102:14134   */\n      eq\n        /* \"#utility.yul\":14092:14152   */\n      tag_639\n      jumpi\n        /* \"#utility.yul\":14148:14149   */\n      0x00\n        /* \"#utility.yul\":14145:14146   */\n      dup1\n        /* \"#utility.yul\":14138:14150   */\n      revert\n        /* \"#utility.yul\":14946:15233   */\n    tag_445:\n        /* \"#utility.yul\":15136:15161   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":15124:15126   */\n      0x40\n        /* \"#utility.yul\":15109:15127   */\n      dup2\n      add\n        /* \"#utility.yul\":15170:15227   */\n      tag_639\n        /* \"#utility.yul\":15223:15225   */\n      0x20\n        /* \"#utility.yul\":15208:15226   */\n      dup4\n      add\n        /* \"#utility.yul\":15200:15206   */\n      dup5\n        /* \"#utility.yul\":15170:15227   */\n      tag_623\n      jump\t// in\n        /* \"#utility.yul\":17708:17833   */\n    tag_506:\n        /* \"#utility.yul\":17773:17782   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":17794:17804   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":17791:17827   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":17807:17825   */\n      tag_209\n      tag_624\n      jump\t// in\n        /* \"#utility.yul\":19247:19677   */\n    tag_561:\n        /* \"#utility.yul\":19494:19519   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":19550:19552   */\n      0x20\n        /* \"#utility.yul\":19535:19553   */\n      dup2\n      add\n        /* \"#utility.yul\":19528:19562   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":19593:19595   */\n      0x40\n        /* \"#utility.yul\":19578:19596   */\n      dup2\n      add\n        /* \"#utility.yul\":19571:19605   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":19481:19484   */\n      0x80\n        /* \"#utility.yul\":19466:19485   */\n      dup2\n      add\n        /* \"#utility.yul\":19614:19671   */\n      tag_748\n        /* \"#utility.yul\":19667:19669   */\n      0x60\n        /* \"#utility.yul\":19652:19670   */\n      dup4\n      add\n        /* \"#utility.yul\":19644:19650   */\n      dup5\n        /* \"#utility.yul\":19614:19671   */\n      tag_623\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":19247:19677   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122097fdccc1a6ae84938e4f33af1e10e8f4f1b5500b38e2900d7a9818a41fe1349164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1001": {
									"entryPoint": null,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1281": {
									"entryPoint": null,
									"id": 1281,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 237,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_icotoken_$1074t_addresst_addresst_uint256t_uint256t_addresst_addresst_address_fromMemory": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_contract_icotoken": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1599:10",
										"nodeType": "YulBlock",
										"src": "0:1599:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "69:86:10",
													"nodeType": "YulBlock",
													"src": "69:86:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "133:16:10",
																"nodeType": "YulBlock",
																"src": "133:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:10",
																					"nodeType": "YulLiteral",
																					"src": "142:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "145:1:10",
																					"nodeType": "YulLiteral",
																					"src": "145:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "135:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "135:6:10"
																			},
																			"nativeSrc": "135:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "135:12:10"
																		},
																		"nativeSrc": "135:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "135:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "92:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "92:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "103:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "103:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "118:3:10",
																										"nodeType": "YulLiteral",
																										"src": "118:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "123:1:10",
																										"nodeType": "YulLiteral",
																										"src": "123:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "114:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "114:3:10"
																								},
																								"nativeSrc": "114:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "114:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "127:1:10",
																								"nodeType": "YulLiteral",
																								"src": "127:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "110:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "110:3:10"
																						},
																						"nativeSrc": "110:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "110:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "99:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "99:3:10"
																				},
																				"nativeSrc": "99:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "99:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "89:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "89:2:10"
																		},
																		"nativeSrc": "89:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "89:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "82:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:10"
																},
																"nativeSrc": "82:50:10",
																"nodeType": "YulFunctionCall",
																"src": "82:50:10"
															},
															"nativeSrc": "79:70:10",
															"nodeType": "YulIf",
															"src": "79:70:10"
														}
													]
												},
												"name": "validator_revert_contract_icotoken",
												"nativeSrc": "14:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "58:5:10",
														"nodeType": "YulTypedName",
														"src": "58:5:10",
														"type": ""
													}
												],
												"src": "14:141:10"
											},
											{
												"body": {
													"nativeSrc": "377:1012:10",
													"nodeType": "YulBlock",
													"src": "377:1012:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "424:16:10",
																"nodeType": "YulBlock",
																"src": "424:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "433:1:10",
																					"nodeType": "YulLiteral",
																					"src": "433:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "436:1:10",
																					"nodeType": "YulLiteral",
																					"src": "436:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "426:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "426:6:10"
																			},
																			"nativeSrc": "426:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "426:12:10"
																		},
																		"nativeSrc": "426:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "426:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "398:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "398:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "394:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "394:3:10"
																		},
																		"nativeSrc": "394:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "394:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "419:3:10",
																		"nodeType": "YulLiteral",
																		"src": "419:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "390:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "390:3:10"
																},
																"nativeSrc": "390:33:10",
																"nodeType": "YulFunctionCall",
																"src": "390:33:10"
															},
															"nativeSrc": "387:53:10",
															"nodeType": "YulIf",
															"src": "387:53:10"
														},
														{
															"nativeSrc": "449:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "449:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "468:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "462:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:10"
																},
																"nativeSrc": "462:16:10",
																"nodeType": "YulFunctionCall",
																"src": "462:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "453:5:10",
																	"nodeType": "YulTypedName",
																	"src": "453:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "522:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "522:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_icotoken",
																	"nativeSrc": "487:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "487:34:10"
																},
																"nativeSrc": "487:41:10",
																"nodeType": "YulFunctionCall",
																"src": "487:41:10"
															},
															"nativeSrc": "487:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "487:41:10"
														},
														{
															"nativeSrc": "537:15:10",
															"nodeType": "YulAssignment",
															"src": "537:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "547:5:10",
																"nodeType": "YulIdentifier",
																"src": "547:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:10"
																}
															]
														},
														{
															"nativeSrc": "561:40:10",
															"nodeType": "YulVariableDeclaration",
															"src": "561:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "586:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "586:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "597:2:10",
																				"nodeType": "YulLiteral",
																				"src": "597:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "582:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:10"
																		},
																		"nativeSrc": "582:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "582:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "576:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "576:5:10"
																},
																"nativeSrc": "576:25:10",
																"nodeType": "YulFunctionCall",
																"src": "576:25:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "565:7:10",
																	"nodeType": "YulTypedName",
																	"src": "565:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "645:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "645:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_icotoken",
																	"nativeSrc": "610:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "610:34:10"
																},
																"nativeSrc": "610:43:10",
																"nodeType": "YulFunctionCall",
																"src": "610:43:10"
															},
															"nativeSrc": "610:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "610:43:10"
														},
														{
															"nativeSrc": "662:17:10",
															"nodeType": "YulAssignment",
															"src": "662:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "672:7:10",
																"nodeType": "YulIdentifier",
																"src": "672:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "662:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "662:6:10"
																}
															]
														},
														{
															"nativeSrc": "688:40:10",
															"nodeType": "YulVariableDeclaration",
															"src": "688:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "713:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "713:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "724:2:10",
																				"nodeType": "YulLiteral",
																				"src": "724:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "709:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "709:3:10"
																		},
																		"nativeSrc": "709:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "709:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "703:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "703:5:10"
																},
																"nativeSrc": "703:25:10",
																"nodeType": "YulFunctionCall",
																"src": "703:25:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "692:7:10",
																	"nodeType": "YulTypedName",
																	"src": "692:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "772:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "772:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_icotoken",
																	"nativeSrc": "737:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "737:34:10"
																},
																"nativeSrc": "737:43:10",
																"nodeType": "YulFunctionCall",
																"src": "737:43:10"
															},
															"nativeSrc": "737:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "737:43:10"
														},
														{
															"nativeSrc": "789:17:10",
															"nodeType": "YulAssignment",
															"src": "789:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "799:7:10",
																"nodeType": "YulIdentifier",
																"src": "799:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "789:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:10"
																}
															]
														},
														{
															"nativeSrc": "815:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "815:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "830:1:10",
																"nodeType": "YulLiteral",
																"src": "830:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "819:7:10",
																	"nodeType": "YulTypedName",
																	"src": "819:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "840:36:10",
															"nodeType": "YulAssignment",
															"src": "840:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "861:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "872:2:10",
																				"nodeType": "YulLiteral",
																				"src": "872:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "857:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:10"
																		},
																		"nativeSrc": "857:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "857:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "851:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "851:5:10"
																},
																"nativeSrc": "851:25:10",
																"nodeType": "YulFunctionCall",
																"src": "851:25:10"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "840:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "840:7:10"
																}
															]
														},
														{
															"nativeSrc": "885:17:10",
															"nodeType": "YulAssignment",
															"src": "885:17:10",
															"value": {
																"name": "value_3",
																"nativeSrc": "895:7:10",
																"nodeType": "YulIdentifier",
																"src": "895:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "885:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:10"
																}
															]
														},
														{
															"nativeSrc": "911:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "911:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "926:1:10",
																"nodeType": "YulLiteral",
																"src": "926:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "915:7:10",
																	"nodeType": "YulTypedName",
																	"src": "915:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "936:37:10",
															"nodeType": "YulAssignment",
															"src": "936:37:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "957:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "957:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "968:3:10",
																				"nodeType": "YulLiteral",
																				"src": "968:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "953:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "953:3:10"
																		},
																		"nativeSrc": "953:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "953:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "947:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:10"
																},
																"nativeSrc": "947:26:10",
																"nodeType": "YulFunctionCall",
																"src": "947:26:10"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "936:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "936:7:10"
																}
															]
														},
														{
															"nativeSrc": "982:17:10",
															"nodeType": "YulAssignment",
															"src": "982:17:10",
															"value": {
																"name": "value_4",
																"nativeSrc": "992:7:10",
																"nodeType": "YulIdentifier",
																"src": "992:7:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "982:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "982:6:10"
																}
															]
														},
														{
															"nativeSrc": "1008:41:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1008:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1033:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1033:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1044:3:10",
																				"nodeType": "YulLiteral",
																				"src": "1044:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1029:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1029:3:10"
																		},
																		"nativeSrc": "1029:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1029:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1023:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1023:5:10"
																},
																"nativeSrc": "1023:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1023:26:10"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "1012:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1012:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "1093:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1093:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_icotoken",
																	"nativeSrc": "1058:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1058:34:10"
																},
																"nativeSrc": "1058:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1058:43:10"
															},
															"nativeSrc": "1058:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "1058:43:10"
														},
														{
															"nativeSrc": "1110:17:10",
															"nodeType": "YulAssignment",
															"src": "1110:17:10",
															"value": {
																"name": "value_5",
																"nativeSrc": "1120:7:10",
																"nodeType": "YulIdentifier",
																"src": "1120:7:10"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "1110:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:10"
																}
															]
														},
														{
															"nativeSrc": "1136:41:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1136:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1161:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1161:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1172:3:10",
																				"nodeType": "YulLiteral",
																				"src": "1172:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1157:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1157:3:10"
																		},
																		"nativeSrc": "1157:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1157:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1151:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:5:10"
																},
																"nativeSrc": "1151:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:26:10"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nativeSrc": "1140:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1140:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nativeSrc": "1221:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1221:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_icotoken",
																	"nativeSrc": "1186:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1186:34:10"
																},
																"nativeSrc": "1186:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1186:43:10"
															},
															"nativeSrc": "1186:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "1186:43:10"
														},
														{
															"nativeSrc": "1238:17:10",
															"nodeType": "YulAssignment",
															"src": "1238:17:10",
															"value": {
																"name": "value_6",
																"nativeSrc": "1248:7:10",
																"nodeType": "YulIdentifier",
																"src": "1248:7:10"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "1238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1238:6:10"
																}
															]
														},
														{
															"nativeSrc": "1264:41:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1264:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1300:3:10",
																				"nodeType": "YulLiteral",
																				"src": "1300:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1285:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1285:3:10"
																		},
																		"nativeSrc": "1285:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1285:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1279:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1279:5:10"
																},
																"nativeSrc": "1279:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1279:26:10"
															},
															"variables": [
																{
																	"name": "value_7",
																	"nativeSrc": "1268:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1268:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_7",
																		"nativeSrc": "1349:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1349:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_icotoken",
																	"nativeSrc": "1314:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1314:34:10"
																},
																"nativeSrc": "1314:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1314:43:10"
															},
															"nativeSrc": "1314:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "1314:43:10"
														},
														{
															"nativeSrc": "1366:17:10",
															"nodeType": "YulAssignment",
															"src": "1366:17:10",
															"value": {
																"name": "value_7",
																"nativeSrc": "1376:7:10",
																"nodeType": "YulIdentifier",
																"src": "1376:7:10"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "1366:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_icotoken_$1074t_addresst_addresst_uint256t_uint256t_addresst_addresst_address_fromMemory",
												"nativeSrc": "160:1229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "287:9:10",
														"nodeType": "YulTypedName",
														"src": "287:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "298:7:10",
														"nodeType": "YulTypedName",
														"src": "298:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "310:6:10",
														"nodeType": "YulTypedName",
														"src": "310:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "318:6:10",
														"nodeType": "YulTypedName",
														"src": "318:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "326:6:10",
														"nodeType": "YulTypedName",
														"src": "326:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "334:6:10",
														"nodeType": "YulTypedName",
														"src": "334:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "342:6:10",
														"nodeType": "YulTypedName",
														"src": "342:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "350:6:10",
														"nodeType": "YulTypedName",
														"src": "350:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "358:6:10",
														"nodeType": "YulTypedName",
														"src": "358:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "366:6:10",
														"nodeType": "YulTypedName",
														"src": "366:6:10",
														"type": ""
													}
												],
												"src": "160:1229:10"
											},
											{
												"body": {
													"nativeSrc": "1495:102:10",
													"nodeType": "YulBlock",
													"src": "1495:102:10",
													"statements": [
														{
															"nativeSrc": "1505:26:10",
															"nodeType": "YulAssignment",
															"src": "1505:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1528:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1528:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1513:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1513:3:10"
																},
																"nativeSrc": "1513:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1513:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1505:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1505:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1547:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1547:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1562:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1562:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1578:3:10",
																								"nodeType": "YulLiteral",
																								"src": "1578:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1583:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1583:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1574:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1574:3:10"
																						},
																						"nativeSrc": "1574:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1574:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1587:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1587:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1570:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1570:3:10"
																				},
																				"nativeSrc": "1570:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1570:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1558:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:10"
																		},
																		"nativeSrc": "1558:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1558:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1540:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1540:6:10"
																},
																"nativeSrc": "1540:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1540:51:10"
															},
															"nativeSrc": "1540:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "1540:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1394:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1464:9:10",
														"nodeType": "YulTypedName",
														"src": "1464:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1475:6:10",
														"nodeType": "YulTypedName",
														"src": "1475:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1486:4:10",
														"nodeType": "YulTypedName",
														"src": "1486:4:10",
														"type": ""
													}
												],
												"src": "1394:203:10"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_icotoken(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_icotoken_$1074t_addresst_addresst_uint256t_uint256t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_icotoken(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_icotoken(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_icotoken(value_2)\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := mload(add(headStart, 128))\n        value4 := value_4\n        let value_5 := mload(add(headStart, 160))\n        validator_revert_contract_icotoken(value_5)\n        value5 := value_5\n        let value_6 := mload(add(headStart, 192))\n        validator_revert_contract_icotoken(value_6)\n        value6 := value_6\n        let value_7 := mload(add(headStart, 224))\n        validator_revert_contract_icotoken(value_7)\n        value7 := value_7\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600b805461ffff1916905534801561001b57600080fd5b506040516127d63803806127d683398101604081905261003a91610155565b338061006057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610069816100ed565b5060018055600580546001600160a01b03199081166001600160a01b039a8b1617909155600695909555600793909355600d8054851696881696909617909555600e805484169487169490941790935560028054831693861693909317909255600380548216938516939093179092556004805490921692169190911790556101f2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461015257600080fd5b50565b600080600080600080600080610100898b03121561017257600080fd5b885161017d8161013d565b60208a015190985061018e8161013d565b60408a015190975061019f8161013d565b60608a015160808b015160a08c015192985090965094506101bf8161013d565b60c08a01519093506101d08161013d565b60e08a01519092506101e18161013d565b809150509295985092959890939650565b6125d5806102016000396000f3fe6080604052600436106102085760003560e01c80638da5cb5b11610118578063c211e1f9116100a0578063df4e05931161006f578063df4e05931461068e578063e8e87389146106cb578063efdcdb45146106f8578063f2fde38b14610730578063fc0c546a1461075057600080fd5b8063c211e1f91461059e578063c81ffdea14610627578063d1f3b23e14610654578063d3d9d1e41461066e57600080fd5b8063960524e3116100e7578063960524e3146104c657806399131e7e146104db578063a1e89aec146104fb578063b5f522f714610511578063c1560a141461058857600080fd5b80638da5cb5b1461046757806391152c5c1461048557806391d8730a1461049a578063940c333e146104b357600080fd5b80633e413bee1161019b57806363b201171161016a57806363b20117146103f15780636c1909ed14610407578063715018a614610427578063721bc38b1461043c5780637fb120011461045257600080fd5b80633e413bee146103725780633feb5f2b146103925780634dee1dc3146103b257806362a469e9146103d157600080fd5b8063212ea247116101d7578063212ea247146102f85780632151206e1461030d57806323cc75a8146103235780632f48ab7d1461033a57600080fd5b806305834e671461025f57806306e4d36f14610292578063115afc3a146102b8578063117d260f146102d857600080fd5b3661025a5760405162461bcd60e51b815260206004820181905260248201527f44697265637420424e42207472616e7366657273206e6f7420616c6c6f77656460448201526064015b60405180910390fd5b600080fd5b34801561026b57600080fd5b5061027f61027a366004612187565b610770565b6040519081526020015b60405180910390f35b34801561029e57600080fd5b5060065460095410155b6040519015158152602001610289565b3480156102c457600080fd5b5061027f6102d33660046121b1565b61092a565b3480156102e457600080fd5b5061027f6102f3366004612187565b610a8f565b34801561030457600080fd5b5060085461027f565b34801561031957600080fd5b5061027f60065481565b34801561032f57600080fd5b50610338610cc5565b005b34801561034657600080fd5b50600d5461035a906001600160a01b031681565b6040516001600160a01b039091168152602001610289565b34801561037e57600080fd5b50600e5461035a906001600160a01b031681565b34801561039e57600080fd5b5061035a6103ad3660046121d3565b610dbe565b3480156103be57600080fd5b50600b546102a890610100900460ff1681565b3480156103dd57600080fd5b5060035461035a906001600160a01b031681565b3480156103fd57600080fd5b5061027f600a5481565b34801561041357600080fd5b506103386104223660046121ec565b610de8565b34801561043357600080fd5b50610338611010565b34801561044857600080fd5b5061027f60095481565b34801561045e57600080fd5b50610338611022565b34801561047357600080fd5b506000546001600160a01b031661035a565b34801561049157600080fd5b506103386114a2565b3480156104a657600080fd5b50600754600954146102a8565b6103386104c1366004612187565b6116cd565b3480156104d257600080fd5b50600c5461027f565b3480156104e757600080fd5b5060025461035a906001600160a01b031681565b34801561050757600080fd5b5061027f60085481565b34801561051d57600080fd5b5061055e61052c3660046121d3565b600f60205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610289565b34801561059457600080fd5b5061027f60075481565b3480156105aa57600080fd5b506106126105b93660046121d3565b506008546000908152600f6020908152604091829020825160a081018452815480825260018301549382018490526002830154948201949094526003820154606082015260049091015460ff1615156080909101529091565b60408051928352602083019190915201610289565b34801561063357600080fd5b5061027f61064236600461222f565b60106020526000908152604090205481565b34801561066057600080fd5b50600b546102a89060ff1681565b34801561067a57600080fd5b5060045461035a906001600160a01b031681565b34801561069a57600080fd5b506106be6106a936600461222f565b60136020526000908152604090205460ff1681565b6040516102899190612282565b3480156106d757600080fd5b5061027f6106e636600461222f565b60116020526000908152604090205481565b34801561070457600080fd5b5061027f610713366004612290565b601460209081526000928352604080842090915290825290205481565b34801561073c57600080fd5b5061033861074b36600461222f565b611cfc565b34801561075c57600080fd5b5060055461035a906001600160a01b031681565b6000806402540be4006107828561092a565b61078c91906122d9565b9050600081136107d35760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610251565b60006107de60085490565b6000818152600f6020526040812060028101549293509190808860028111156108095761080961224a565b0361083257670de0b6b3a76400006108218887612309565b61082b9190612320565b90506108fc565b60028860028111156108465761084661224a565b1480610863575060018860028111156108615761086161224a565b145b156108b45760066000610877826012612342565b61088290600a61243c565b61088c908a612309565b9050670de0b6b3a76400006108a18289612309565b6108ab9190612320565b925050506108fc565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564207061796d656e74206d6574686f640000000000006044820152606401610251565b600082610911670de0b6b3a764000084612309565b61091b9190612320565b96505050505050505b92915050565b60008082600281111561093f5761093f61224a565b036109be5760025460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b29190612462565b50919695505050505050565b60018260028111156109d2576109d261224a565b03610a215760035460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561098e573d6000803e3d6000fd5b6002826002811115610a3557610a3561224a565b036108b4576000600460009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561098e573d6000803e3d6000fd5b6000808211610aef5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608401610251565b60006402540be400610b008561092a565b610b0a91906122d9565b905060008113610b515760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610251565b6000610b5c60085490565b905080600003610b9f5760405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b6044820152606401610251565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c91906124b4565b6000838152600f6020526040812060028101549293509190670de0b6b3a7640000610c37838a612309565b610c419190612320565b90506000808a6002811115610c5857610c5861224a565b03610c815786610c70670de0b6b3a764000084612309565b610c7a9190612320565b905061091b565b60018a6002811115610c9557610c9561224a565b1480610cb2575060028a6002811115610cb057610cb061224a565b145b156108b45786610c7083620f4240612309565b610ccd611d3a565b610cd5611d64565b600b5460ff1615610cf85760405162461bcd60e51b8152600401610251906124cd565b6006546009541015610d725760405162461bcd60e51b815260206004820152603860248201527f43616e6e6f742066696e616c697a653a20536f667420636170206e6f7420726560448201527f6163686564206f722073616c65206973206f6e676f696e6700000000000000006064820152608401610251565b600b805460ff19166001179055610d87611d91565b600a546040517f9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a90600090a2610dbc60018055565b565b600c8181548110610dce57600080fd5b6000918252602090912001546001600160a01b0316905081565b610df0611d64565b600b5460ff1615610e135760405162461bcd60e51b8152600401610251906124cd565b428311610e775760405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d65206d7573742062652067726561746572207468616e2060448201526b63757272656e742074696d6560a01b6064820152608401610251565b828211610ed75760405162461bcd60e51b815260206004820152602860248201527f456e642074696d65206d7573742062652067726561746572207468616e2073746044820152676172742074696d6560c01b6064820152608401610251565b6008546000908152600f60205260409020600101548311610f4f5760405162461bcd60e51b815260206004820152602c60248201527f4e65772073616c65206d75737420737461727420616674657220746865206c6160448201526b73742073616c6520656e647360a01b6064820152608401610251565b60088054906000610f5f836124fc565b90915550506040805160a08101825284815260208082018581528284018581526000606080860182815260808701838152600880548552600f8852938990209751885594516001880155925160028701559151600386015591516004909401805460ff1916941515949094179093555483518781529182018690529281018490527f63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba910160405180910390a2505050565b611018611d64565b610dbc6000612123565b61102a611d3a565b611032611d64565b600b5460ff16156110555760405162461bcd60e51b8152600401610251906124cd565b6008546000908152600f602052604090206001015442116110a75760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b6044820152606401610251565b600654600954106110ed5760405162461bcd60e51b815260206004820152601060248201526f14dbd99d0818d85c081c995858da195960821b6044820152606401610251565b600c5460005b8181101561148a576000600c828154811061111057611110612515565b60009182526020822001546001600160a01b031691505b60038160ff1610156114805760008160ff16600281111561114a5761114a61224a565b6001600160a01b038416600090815260146020526040812091925090818360028111156111795761117961224a565b600281111561118a5761118a61224a565b81526020019081526020016000205490506000811115611476576001600160a01b0384166000908152601460205260408120818460028111156111cf576111cf61224a565b60028111156111e0576111e061224a565b815260208101919091526040016000908120919091558260028111156112085761120861224a565b036112aa576000846001600160a01b03168260405160006040518083038185875af1925050503d806000811461125a576040519150601f19603f3d011682016040523d82523d6000602084013e61125f565b606091505b50509050806112a45760405162461bcd60e51b8152602060048201526011602482015270109390881c99599d5b990819985a5b1959607a1b6044820152606401610251565b50611432565b60018260028111156112be576112be61224a565b14806112db575060028260028111156112d9576112d961224a565b145b156113dc57600060018360028111156112f6576112f661224a565b1461130c57600e546001600160a01b0316611319565b600d546001600160a01b03165b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018590529192509082169063a9059cbb906044016020604051808303816000875af115801561136c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611390919061252b565b6112a45760405162461bcd60e51b815260206004820152601860248201527f537461626c65636f696e20726566756e64206661696c656400000000000000006044820152606401610251565b60405162461bcd60e51b815260206004820152602560248201527f556e737570706f72746564207061796d656e74206d6574686f6420666f72207260448201526419599d5b9960da1b6064820152608401610251565b836001600160a01b03167f03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7828460405161146d92919061254d565b60405180910390a25b5050600101611127565b50506001016110f3565b5050600b805460ff19166001179055610dbc60018055565b6114aa611d3a565b6114b2611d64565b600b5460ff16156114d55760405162461bcd60e51b8152600401610251906124cd565b600b54610100900460ff161561152d5760405162461bcd60e51b815260206004820152601960248201527f41697264726f7020616c726561647920636f6d706c65746564000000000000006044820152606401610251565b600c5460005b818110156116b3576000600c828154811061155057611550612515565b60009182526020808320909101546001600160a01b0316808352601190915260409091205490915080156116a9576005546000906001600160a01b03166323b872dd6115a46000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529086166024820152604481018590526064016020604051808303816000875af11580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d919061252b565b9050806116645760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610251565b826001600160a01b03167f9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b8360405161169f91815260200190565b60405180910390a2505b5050600101611533565b5050600b805461ff001916610100179055610dbc60018055565b600b5460ff16156116f05760405162461bcd60e51b8152600401610251906124cd565b6000546001600160a01b0316330361174a5760405162461bcd60e51b815260206004820152601760248201527f4f776e65722063616e6e6f742062757920746f6b656e730000000000000000006044820152606401610251565b6008546000036117865760405162461bcd60e51b81526020600482015260076024820152664e6f2073616c6560c81b6044820152606401610251565b6008546000908152600f602052604090206004015460ff166117e35760405162461bcd60e51b815260206004820152601660248201527514d85b1948185b1c9958591e48199a5b985b1a5e995960521b6044820152606401610251565b6000808360028111156117f8576117f861224a565b036118b7576000341161184d5760405162461bcd60e51b815260206004820152601760248201527f53656e6420612076616c696420424e4220616d6f756e740000000000000000006044820152606401610251565b6118578334610770565b33600090815260146020526040812091925034919085600281111561187e5761187e61224a565b600281111561188f5761188f61224a565b815260200190815260200160002060008282546118ac9190612561565b90915550611aa79050565b60018360028111156118cb576118cb61224a565b14806118e8575060028360028111156118e6576118e661224a565b145b156108b4576000821161193d5760405162461bcd60e51b815260206004820152601f60248201527f456e74657220612076616c696420737461626c65636f696e20616d6f756e74006044820152606401610251565b600060018460028111156119535761195361224a565b1461196957600e546001600160a01b0316611976565b600d546001600160a01b03165b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af11580156119cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f0919061252b565b611a3c5760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c65640000000000006044820152606401610251565b611a468484610770565b336000908152601460205260408120919350849190866002811115611a6d57611a6d61224a565b6002811115611a7e57611a7e61224a565b81526020019081526020016000206000828254611a9b9190612561565b90915550611aa7915050565b60008111611aee5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b6044820152606401610251565b6008546000908152600f6020526040812060020154670de0b6b3a764000090611b179084612309565b611b219190612320565b905060075481600954611b349190612561565b1115611b755760405162461bcd60e51b815260206004820152601060248201526f12185c990818d85c081c995858da195960821b6044820152606401610251565b3360009081526010602052604081208054839290611b94908490612561565b925050819055508060096000828254611bad9190612561565b90915550506008546000908152600f602052604081206003018054849290611bd6908490612561565b9250508190555081600a6000828254611bef9190612561565b9091555050336000908152601160205260408120549003611c4d57600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b031916331790555b3360009081526011602052604081208054849290611c6c908490612561565b9091555050336000908152601360205260409020805485919060ff19166001836002811115611c9d57611c9d61224a565b02179055506008546000818152600f60205260409081902060020154905133917fdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e891611cee91879189908b90612574565b60405180910390a350505050565b611d04611d64565b6001600160a01b038116611d2e57604051631e4fbdf760e01b815260006004820152602401610251565b611d3781612123565b50565b600260015403611d5d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000546001600160a01b03163314610dbc5760405163118cdaa760e01b8152336004820152602401610251565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfe91906124b4565b600e546040516370a0823160e01b815230600482015291925047916000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7091906124b4565b9050600082118015611e825750600083115b8015611e8e5750600081115b611eda5760405162461bcd60e51b815260206004820152601960248201527f62616c616e636573206d757374206e6f74206265205a65726f000000000000006044820152606401610251565b600080546040516001600160a01b039091169084908381818185875af1925050503d8060008114611f27576040519150601f19603f3d011682016040523d82523d6000602084013e611f2c565b606091505b5050905080611f6f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610251565b600d546001600160a01b031663a9059cbb611f926000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af1158015611fdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612003919061252b565b6120465760405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b6044820152606401610251565b600e546001600160a01b031663a9059cbb6120696000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af11580156120b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120da919061252b565b61211d5760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610251565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356003811061218257600080fd5b919050565b6000806040838503121561219a57600080fd5b6121a383612173565b946020939093013593505050565b6000602082840312156121c357600080fd5b6121cc82612173565b9392505050565b6000602082840312156121e557600080fd5b5035919050565b60008060006060848603121561220157600080fd5b505081359360208301359350604090920135919050565b80356001600160a01b038116811461218257600080fd5b60006020828403121561224157600080fd5b6121cc82612218565b634e487b7160e01b600052602160045260246000fd5b6003811061227e57634e487b7160e01b600052602160045260246000fd5b9052565b602081016109248284612260565b600080604083850312156122a357600080fd5b6122ac83612218565b91506122ba60208401612173565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b841416156122f5576122f56122c3565b8181058314821517610924576109246122c3565b8082028115828204841417610924576109246122c3565b60008261233d57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610924576109246122c3565b6001815b600184111561239057808504811115612374576123746122c3565b600184161561238257908102905b60019390931c928002612359565b935093915050565b6000826123a757506001610924565b816123b457506000610924565b81600181146123ca57600281146123d4576123f0565b6001915050610924565b60ff8411156123e5576123e56122c3565b50506001821b610924565b5060208310610133831016604e8410600b8410161715612413575081810a610924565b6124206000198484612355565b8060001904821115612434576124346122c3565b029392505050565b60006121cc8383612398565b805169ffffffffffffffffffff8116811461218257600080fd5b600080600080600060a0868803121561247a57600080fd5b61248386612448565b602087015160408801516060890151929750909550935091506124a860808701612448565b90509295509295909350565b6000602082840312156124c657600080fd5b5051919050565b6020808252601590820152741250d3c8185b1c9958591e48199a5b985b1a5e9959605a1b604082015260600190565b60006001820161250e5761250e6122c3565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561253d57600080fd5b815180151581146121cc57600080fd5b828152604081016121cc6020830184612260565b80820180821115610924576109246122c3565b8481526020810184905260408101839052608081016125966060830184612260565b9594505050505056fea264697066735822122097fdccc1a6ae84938e4f33af1e10e8f4f1b5500b38e2900d7a9818a41fe1349164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xB DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27D6 CODESIZE SUB DUP1 PUSH2 0x27D6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3A SWAP2 PUSH2 0x155 JUMP JUMPDEST CALLER DUP1 PUSH2 0x60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69 DUP2 PUSH2 0xED JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x7 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xD DUP1 SLOAD DUP6 AND SWAP7 DUP9 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0xE DUP1 SLOAD DUP5 AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP4 AND SWAP4 DUP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 MLOAD PUSH2 0x17D DUP2 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MLOAD SWAP1 SWAP9 POP PUSH2 0x18E DUP2 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 DUP11 ADD MLOAD SWAP1 SWAP8 POP PUSH2 0x19F DUP2 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1BF DUP2 PUSH2 0x13D JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x1D0 DUP2 PUSH2 0x13D JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1E1 DUP2 PUSH2 0x13D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x25D5 DUP1 PUSH2 0x201 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x208 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xC211E1F9 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDF4E0593 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDF4E0593 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xE8E87389 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xEFDCDB45 EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC211E1F9 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xC81FFDEA EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0xD1F3B23E EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0xD3D9D1E4 EQ PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x960524E3 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x960524E3 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x99131E7E EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA1E89AEC EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xC1560A14 EQ PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x91152C5C EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x91D8730A EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x940C333E EQ PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x6C1909ED EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x721BC38B EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x7FB12001 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x4DEE1DC3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x62A469E9 EQ PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x212EA247 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x212EA247 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x2151206E EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x23CC75A8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5834E67 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x6E4D36F EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x115AFC3A EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x117D260F EQ PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD LT ISZERO JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x27F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0xCC5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x1010 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x1022 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x14A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD EQ PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x16CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x27F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55E PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x612 PUSH2 0x5B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x642 CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2A8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BE PUSH2 0x6A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x713 CALLDATASIZE PUSH1 0x4 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x74B CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH2 0x1CFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH5 0x2540BE400 PUSH2 0x782 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x832 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x821 DUP9 DUP8 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x846 JUMPI PUSH2 0x846 PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0x863 JUMPI POP PUSH1 0x1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x861 JUMPI PUSH2 0x861 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x6 PUSH1 0x0 PUSH2 0x877 DUP3 PUSH1 0x12 PUSH2 0x2342 JUMP JUMPDEST PUSH2 0x882 SWAP1 PUSH1 0xA PUSH2 0x243C JUMP JUMPDEST PUSH2 0x88C SWAP1 DUP11 PUSH2 0x2309 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x8A1 DUP3 DUP10 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F64000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x911 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93F PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x9BE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x2462 JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9D2 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0xA21 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA35 JUMPI PUSH2 0xA35 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x8B4 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH5 0x2540BE400 PUSH2 0xB00 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F206163746976652073616C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0C SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xC37 DUP4 DUP11 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC58 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0xC81 JUMPI DUP7 PUSH2 0xC70 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC95 PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0xCB2 JUMPI POP PUSH1 0x2 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCB0 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x8B4 JUMPI DUP7 PUSH2 0xC70 DUP4 PUSH3 0xF4240 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0xCD5 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742066696E616C697A653A20536F667420636170206E6F74207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163686564206F722073616C65206973206F6E676F696E670000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xD87 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xDBC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xDF0 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x63757272656E742074696D65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST DUP3 DUP3 GT PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652067726561746572207468616E207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6172742074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 GT PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772073616C65206D75737420737461727420616674657220746865206C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x73742073616C6520656E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xF5F DUP4 PUSH2 0x24FC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD DUP6 MSTORE PUSH1 0xF DUP9 MSTORE SWAP4 DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP9 ADD SSTORE SWAP3 MLOAD PUSH1 0x2 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1018 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xDBC PUSH1 0x0 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x102A PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x1032 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD LT PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14DBD99D0818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1110 JUMPI PUSH2 0x1110 PUSH2 0x2515 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x114A JUMPI PUSH2 0x114A PUSH2 0x224A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1179 JUMPI PUSH2 0x1179 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x118A JUMPI PUSH2 0x118A PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11CF JUMPI PUSH2 0x11CF PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11E0 PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x1208 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x12AA JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x125F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109390881C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST POP PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0x12DB JUMPI POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D9 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F6 PUSH2 0x224A JUMP JUMPDEST EQ PUSH2 0x130C JUMPI PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1319 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E20726566756E64206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F6420666F722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x19599D5B99 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x146D SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1127 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x10F3 JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDBC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x14AA PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x14B2 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616C726561647920636F6D706C6574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH2 0x2515 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0x15A4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x161D SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B DUP4 PUSH1 0x40 MLOAD PUSH2 0x169F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1533 JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0xDBC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x174A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x1786 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2073616C65 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D85B1948185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F8 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x18B7 JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0x184D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6420612076616C696420424E4220616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1857 DUP4 CALLVALUE PUSH2 0x770 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP CALLVALUE SWAP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x187E JUMPI PUSH2 0x187E PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x188F JUMPI PUSH2 0x188F PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18AC SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AA7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18CB JUMPI PUSH2 0x18CB PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0x18E8 JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E6 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP3 GT PUSH2 0x193D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420737461626C65636F696E20616D6F756E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1953 PUSH2 0x224A JUMP JUMPDEST EQ PUSH2 0x1969 JUMPI PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19F0 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x1A3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1A46 DUP5 DUP5 PUSH2 0x770 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP4 POP DUP5 SWAP2 SWAP1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6D PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A7E JUMPI PUSH2 0x1A7E PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A9B SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AA7 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1AEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1B17 SWAP1 DUP5 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH1 0x9 SLOAD PUSH2 0x1B34 SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST GT ISZERO PUSH2 0x1B75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x12185C990818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1B94 SWAP1 DUP5 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BAD SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1BD6 SWAP1 DUP5 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BEF SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1C4D JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1C6C SWAP1 DUP5 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9D PUSH2 0x224A JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD CALLER SWAP2 PUSH32 0xDBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8 SWAP2 PUSH2 0x1CEE SWAP2 DUP8 SWAP2 DUP10 SWAP1 DUP12 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D04 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1D37 DUP2 PUSH2 0x2123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1D5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP SELFBALANCE SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E70 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1E82 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1E8E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E636573206D757374206E6F74206265205A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F27 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1F92 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2003 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x2046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2069 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20DA SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x211D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D110C81D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A3 DUP4 PUSH2 0x2173 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21CC DUP3 PUSH2 0x2173 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21CC DUP3 PUSH2 0x2218 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x227E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x924 DUP3 DUP5 PUSH2 0x2260 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22AC DUP4 PUSH2 0x2218 JUMP JUMPDEST SWAP2 POP PUSH2 0x22BA PUSH1 0x20 DUP5 ADD PUSH2 0x2173 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x22F5 PUSH2 0x22C3 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x233D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x2390 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x2374 JUMPI PUSH2 0x2374 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x2382 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x2359 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23A7 JUMPI POP PUSH1 0x1 PUSH2 0x924 JUMP JUMPDEST DUP2 PUSH2 0x23B4 JUMPI POP PUSH1 0x0 PUSH2 0x924 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x23CA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x23D4 JUMPI PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x924 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x23E5 JUMPI PUSH2 0x23E5 PUSH2 0x22C3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x924 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2413 JUMPI POP DUP2 DUP2 EXP PUSH2 0x924 JUMP JUMPDEST PUSH2 0x2420 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x2355 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2434 PUSH2 0x22C3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC DUP4 DUP4 PUSH2 0x2398 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x247A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2483 DUP7 PUSH2 0x2448 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x24A8 PUSH1 0x80 DUP8 ADD PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1250D3C8185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x250E JUMPI PUSH2 0x250E PUSH2 0x22C3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x21CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x21CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x2596 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 REVERT 0xCC 0xC1 0xA6 0xAE DUP5 SWAP4 DUP15 0x4F CALLER 0xAF 0x1E LT 0xE8 DELEGATECALL CALL 0xB5 POP SIGNEXTEND CODESIZE 0xE2 SWAP1 0xD PUSH27 0x9818A41FE1349164736F6C634300081A0033000000000000000000 ",
							"sourceMap": "270:13221:9:-:0;;;1032:34;;;-1:-1:-1;;1072:38:9;;;2341:604;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2595:10;;1269:95:1;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;1540:51:10;1513:18;;1322:31:1;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:7;2061:21;;2617:5:9::1;:14:::0;;-1:-1:-1;;;;;;2617:14:9;;::::1;-1:-1:-1::0;;;;;2617:14:9;;::::1;;::::0;;;2641:12:::1;:28:::0;;;;2679:12:::1;:28:::0;;;;2717:4:::1;:12:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2739:4:::1;:12:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2761::::1;:51:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;2822:53:9;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;2885:53:9;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;270:13221;;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:141:10:-;-1:-1:-1;;;;;99:31:10;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:1229::-;310:6;318;326;334;342;350;358;366;419:3;407:9;398:7;394:23;390:33;387:53;;;436:1;433;426:12;387:53;468:9;462:16;487:41;522:5;487:41;:::i;:::-;597:2;582:18;;576:25;547:5;;-1:-1:-1;610:43:10;576:25;610:43;:::i;:::-;724:2;709:18;;703:25;672:7;;-1:-1:-1;737:43:10;703:25;737:43;:::i;:::-;872:2;857:18;;851:25;968:3;953:19;;947:26;1044:3;1029:19;;1023:26;799:7;;-1:-1:-1;851:25:10;;-1:-1:-1;947:26:10;-1:-1:-1;1058:43:10;1023:26;1058:43;:::i;:::-;1172:3;1157:19;;1151:26;1120:7;;-1:-1:-1;1186:43:10;1151:26;1186:43;:::i;:::-;1300:3;1285:19;;1279:26;1248:7;;-1:-1:-1;1314:43:10;1279:26;1314:43;:::i;:::-;1376:7;1366:17;;;160:1229;;;;;;;;;;;:::o;1394:203::-;270:13221:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2265": {
									"entryPoint": null,
									"id": 2265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 7524,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getPriceFeed_1346": {
									"entryPoint": 2346,
									"id": 1346,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1036": {
									"entryPoint": null,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1028": {
									"entryPoint": 7482,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferFundsToOwner_2021": {
									"entryPoint": 7569,
									"id": 2021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 8483,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdropTokens_2095": {
									"entryPoint": 5282,
									"id": 2095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_1900": {
									"entryPoint": 5837,
									"id": 1900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculatePaymentAmount_1671": {
									"entryPoint": 2703,
									"id": 1671,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateTokenAmount_1536": {
									"entryPoint": 1904,
									"id": 1536,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contributionsInUSD_1149": {
									"entryPoint": null,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createSale_1405": {
									"entryPoint": 3560,
									"id": 1405,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@finalizeICO_1928": {
									"entryPoint": 3269,
									"id": 1928,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentSaleId_2273": {
									"entryPoint": null,
									"id": 2273,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getHardCapReached_2329": {
									"entryPoint": null,
									"id": 2329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInvestorCount_2342": {
									"entryPoint": null,
									"id": 2342,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLatestSaleEndTime_2284": {
									"entryPoint": null,
									"id": 2284,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSaleStartEndTime_2307": {
									"entryPoint": null,
									"id": 2307,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getSoftCapReached_2318": {
									"entryPoint": null,
									"id": 2318,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hardCapInUSD_1115": {
									"entryPoint": null,
									"id": 1115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initiateRefund_2257": {
									"entryPoint": 4130,
									"id": 2257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@investorPayments_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@investors_1136": {
									"entryPoint": 3518,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isICOFinalized_1130": {
									"entryPoint": null,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTokensAirdropped_1133": {
									"entryPoint": null,
									"id": 1133,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentMethodForInvestor_1163": {
									"entryPoint": null,
									"id": 1163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedBNB_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedUSDC_1093": {
									"entryPoint": null,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeedUSDT_1090": {
									"entryPoint": null,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_144": {
									"entryPoint": 4112,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleCount_1117": {
									"entryPoint": null,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sales_1145": {
									"entryPoint": null,
									"id": 1145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@softCapInUSD_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1111": {
									"entryPoint": null,
									"id": 1111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensBoughtByInvestor_1153": {
									"entryPoint": null,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalFundsRaisedUSD_1119": {
									"entryPoint": null,
									"id": 1119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensSold_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 7420,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usdc_1140": {
									"entryPoint": null,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdt_1138": {
									"entryPoint": null,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 8728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_PaymentMethod": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_enum$_PaymentMethod_$1108": {
									"entryPoint": 8848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_PaymentMethod_$1108": {
									"entryPoint": 8625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_PaymentMethod_$1108t_uint256": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 8684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 9314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 9288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_enum_PaymentMethod": {
									"entryPoint": 8800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_icotoken_$1074__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_PaymentMethod_$1108__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d053ad03a9d5a7b9f89b9a631bd1e95f9e841514710f4ade23f14a752fab0c7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1108__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 9549,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1108__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 9588,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 9045,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 9276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 9112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 8921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21075:10",
										"nodeType": "YulBlock",
										"src": "0:21075:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:182:10",
													"nodeType": "YulBlock",
													"src": "188:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:10",
																		"nodeType": "YulLiteral",
																		"src": "216:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:10"
																},
																"nativeSrc": "198:21:10",
																"nodeType": "YulFunctionCall",
																"src": "198:21:10"
															},
															"nativeSrc": "198:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:10",
																				"nodeType": "YulLiteral",
																				"src": "250:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:10"
																		},
																		"nativeSrc": "235:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:10",
																		"nodeType": "YulLiteral",
																		"src": "255:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:10"
																},
																"nativeSrc": "228:30:10",
																"nodeType": "YulFunctionCall",
																"src": "228:30:10"
															},
															"nativeSrc": "228:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:10",
																				"nodeType": "YulLiteral",
																				"src": "289:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:10"
																		},
																		"nativeSrc": "274:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:10"
																	},
																	{
																		"hexValue": "44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "294:34:10",
																		"nodeType": "YulLiteral",
																		"src": "294:34:10",
																		"type": "",
																		"value": "Direct BNB transfers not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:10"
																},
																"nativeSrc": "267:62:10",
																"nodeType": "YulFunctionCall",
																"src": "267:62:10"
															},
															"nativeSrc": "267:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "267:62:10"
														},
														{
															"nativeSrc": "338:26:10",
															"nodeType": "YulAssignment",
															"src": "338:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "350:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "361:2:10",
																		"nodeType": "YulLiteral",
																		"src": "361:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "346:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:10"
																},
																"nativeSrc": "346:18:10",
																"nodeType": "YulFunctionCall",
																"src": "346:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "338:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "338:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:356:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:10",
														"nodeType": "YulTypedName",
														"src": "165:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:10",
														"nodeType": "YulTypedName",
														"src": "179:4:10",
														"type": ""
													}
												],
												"src": "14:356:10"
											},
											{
												"body": {
													"nativeSrc": "435:94:10",
													"nodeType": "YulBlock",
													"src": "435:94:10",
													"statements": [
														{
															"nativeSrc": "445:29:10",
															"nodeType": "YulAssignment",
															"src": "445:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "467:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "454:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "454:12:10"
																},
																"nativeSrc": "454:20:10",
																"nodeType": "YulFunctionCall",
																"src": "454:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "445:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "445:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "507:16:10",
																"nodeType": "YulBlock",
																"src": "507:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "516:1:10",
																					"nodeType": "YulLiteral",
																					"src": "516:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "519:1:10",
																					"nodeType": "YulLiteral",
																					"src": "519:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "509:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "509:6:10"
																			},
																			"nativeSrc": "509:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "509:12:10"
																		},
																		"nativeSrc": "509:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "509:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "496:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "496:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "503:1:10",
																				"nodeType": "YulLiteral",
																				"src": "503:1:10",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "493:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "493:2:10"
																		},
																		"nativeSrc": "493:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "493:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "486:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:10"
																},
																"nativeSrc": "486:20:10",
																"nodeType": "YulFunctionCall",
																"src": "486:20:10"
															},
															"nativeSrc": "483:40:10",
															"nodeType": "YulIf",
															"src": "483:40:10"
														}
													]
												},
												"name": "abi_decode_enum_PaymentMethod",
												"nativeSrc": "375:154:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "414:6:10",
														"nodeType": "YulTypedName",
														"src": "414:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "425:5:10",
														"nodeType": "YulTypedName",
														"src": "425:5:10",
														"type": ""
													}
												],
												"src": "375:154:10"
											},
											{
												"body": {
													"nativeSrc": "639:224:10",
													"nodeType": "YulBlock",
													"src": "639:224:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "685:16:10",
																"nodeType": "YulBlock",
																"src": "685:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "694:1:10",
																					"nodeType": "YulLiteral",
																					"src": "694:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "697:1:10",
																					"nodeType": "YulLiteral",
																					"src": "697:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "687:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "687:6:10"
																			},
																			"nativeSrc": "687:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "687:12:10"
																		},
																		"nativeSrc": "687:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "687:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "660:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "660:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "669:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "669:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "656:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "656:3:10"
																		},
																		"nativeSrc": "656:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "656:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "681:2:10",
																		"nodeType": "YulLiteral",
																		"src": "681:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "652:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "652:3:10"
																},
																"nativeSrc": "652:32:10",
																"nodeType": "YulFunctionCall",
																"src": "652:32:10"
															},
															"nativeSrc": "649:52:10",
															"nodeType": "YulIf",
															"src": "649:52:10"
														},
														{
															"nativeSrc": "710:50:10",
															"nodeType": "YulAssignment",
															"src": "710:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "750:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "750:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "720:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "720:29:10"
																},
																"nativeSrc": "720:40:10",
																"nodeType": "YulFunctionCall",
																"src": "720:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "710:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:10"
																}
															]
														},
														{
															"nativeSrc": "769:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "769:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "782:1:10",
																"nodeType": "YulLiteral",
																"src": "782:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "773:5:10",
																	"nodeType": "YulTypedName",
																	"src": "773:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "792:41:10",
															"nodeType": "YulAssignment",
															"src": "792:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "829:2:10",
																				"nodeType": "YulLiteral",
																				"src": "829:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "814:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:10"
																		},
																		"nativeSrc": "814:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "814:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "801:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "801:12:10"
																},
																"nativeSrc": "801:32:10",
																"nodeType": "YulFunctionCall",
																"src": "801:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "792:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "792:5:10"
																}
															]
														},
														{
															"nativeSrc": "842:15:10",
															"nodeType": "YulAssignment",
															"src": "842:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "852:5:10",
																"nodeType": "YulIdentifier",
																"src": "852:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "842:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "842:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_PaymentMethod_$1108t_uint256",
												"nativeSrc": "534:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "597:9:10",
														"nodeType": "YulTypedName",
														"src": "597:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "608:7:10",
														"nodeType": "YulTypedName",
														"src": "608:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "620:6:10",
														"nodeType": "YulTypedName",
														"src": "620:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "628:6:10",
														"nodeType": "YulTypedName",
														"src": "628:6:10",
														"type": ""
													}
												],
												"src": "534:329:10"
											},
											{
												"body": {
													"nativeSrc": "969:76:10",
													"nodeType": "YulBlock",
													"src": "969:76:10",
													"statements": [
														{
															"nativeSrc": "979:26:10",
															"nodeType": "YulAssignment",
															"src": "979:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "991:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "987:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:10"
																},
																"nativeSrc": "987:18:10",
																"nodeType": "YulFunctionCall",
																"src": "987:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "979:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "979:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1021:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1032:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1032:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:10"
																},
																"nativeSrc": "1014:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1014:25:10"
															},
															"nativeSrc": "1014:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1014:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "868:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "938:9:10",
														"nodeType": "YulTypedName",
														"src": "938:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "949:6:10",
														"nodeType": "YulTypedName",
														"src": "949:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "960:4:10",
														"nodeType": "YulTypedName",
														"src": "960:4:10",
														"type": ""
													}
												],
												"src": "868:177:10"
											},
											{
												"body": {
													"nativeSrc": "1145:92:10",
													"nodeType": "YulBlock",
													"src": "1145:92:10",
													"statements": [
														{
															"nativeSrc": "1155:26:10",
															"nodeType": "YulAssignment",
															"src": "1155:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1167:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1178:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1163:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:10"
																},
																"nativeSrc": "1163:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1163:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1155:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1155:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1197:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1197:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1222:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1222:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1215:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1215:6:10"
																				},
																				"nativeSrc": "1215:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1215:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1208:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1208:6:10"
																		},
																		"nativeSrc": "1208:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1208:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:10"
																},
																"nativeSrc": "1190:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1190:41:10"
															},
															"nativeSrc": "1190:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1190:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1050:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1114:9:10",
														"nodeType": "YulTypedName",
														"src": "1114:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1125:6:10",
														"nodeType": "YulTypedName",
														"src": "1125:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1136:4:10",
														"nodeType": "YulTypedName",
														"src": "1136:4:10",
														"type": ""
													}
												],
												"src": "1050:187:10"
											},
											{
												"body": {
													"nativeSrc": "1330:127:10",
													"nodeType": "YulBlock",
													"src": "1330:127:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:10",
																"nodeType": "YulBlock",
																"src": "1376:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:10"
																			},
																			"nativeSrc": "1378:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:10"
																		},
																		"nativeSrc": "1378:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1351:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1351:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1360:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1360:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1347:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:10"
																		},
																		"nativeSrc": "1347:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1347:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1372:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1372:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1343:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:10"
																},
																"nativeSrc": "1343:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1343:32:10"
															},
															"nativeSrc": "1340:52:10",
															"nodeType": "YulIf",
															"src": "1340:52:10"
														},
														{
															"nativeSrc": "1401:50:10",
															"nodeType": "YulAssignment",
															"src": "1401:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "1411:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "1411:29:10"
																},
																"nativeSrc": "1411:40:10",
																"nodeType": "YulFunctionCall",
																"src": "1411:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_PaymentMethod_$1108",
												"nativeSrc": "1242:215:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1296:9:10",
														"nodeType": "YulTypedName",
														"src": "1296:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1307:7:10",
														"nodeType": "YulTypedName",
														"src": "1307:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1319:6:10",
														"nodeType": "YulTypedName",
														"src": "1319:6:10",
														"type": ""
													}
												],
												"src": "1242:215:10"
											},
											{
												"body": {
													"nativeSrc": "1561:76:10",
													"nodeType": "YulBlock",
													"src": "1561:76:10",
													"statements": [
														{
															"nativeSrc": "1571:26:10",
															"nodeType": "YulAssignment",
															"src": "1571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:10"
																},
																"nativeSrc": "1579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1613:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1613:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1624:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1624:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1606:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:10"
																},
																"nativeSrc": "1606:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1606:25:10"
															},
															"nativeSrc": "1606:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1606:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "1462:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1530:9:10",
														"nodeType": "YulTypedName",
														"src": "1530:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1541:6:10",
														"nodeType": "YulTypedName",
														"src": "1541:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1552:4:10",
														"nodeType": "YulTypedName",
														"src": "1552:4:10",
														"type": ""
													}
												],
												"src": "1462:175:10"
											},
											{
												"body": {
													"nativeSrc": "1743:102:10",
													"nodeType": "YulBlock",
													"src": "1743:102:10",
													"statements": [
														{
															"nativeSrc": "1753:26:10",
															"nodeType": "YulAssignment",
															"src": "1753:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1765:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1765:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1776:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1776:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1761:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1761:3:10"
																},
																"nativeSrc": "1761:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1761:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1753:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1753:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1795:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1795:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1810:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1810:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1826:3:10",
																								"nodeType": "YulLiteral",
																								"src": "1826:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1831:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1831:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1822:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1822:3:10"
																						},
																						"nativeSrc": "1822:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1822:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1835:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1835:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1818:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1818:3:10"
																				},
																				"nativeSrc": "1818:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1818:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1806:3:10"
																		},
																		"nativeSrc": "1806:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1806:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1788:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:10"
																},
																"nativeSrc": "1788:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1788:51:10"
															},
															"nativeSrc": "1788:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "1788:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1642:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1712:9:10",
														"nodeType": "YulTypedName",
														"src": "1712:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1723:6:10",
														"nodeType": "YulTypedName",
														"src": "1723:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1734:4:10",
														"nodeType": "YulTypedName",
														"src": "1734:4:10",
														"type": ""
													}
												],
												"src": "1642:203:10"
											},
											{
												"body": {
													"nativeSrc": "1920:156:10",
													"nodeType": "YulBlock",
													"src": "1920:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1966:16:10",
																"nodeType": "YulBlock",
																"src": "1966:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1975:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1975:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1978:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1978:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1968:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1968:6:10"
																			},
																			"nativeSrc": "1968:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1968:12:10"
																		},
																		"nativeSrc": "1968:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1968:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1941:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1941:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1950:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1950:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1937:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1937:3:10"
																		},
																		"nativeSrc": "1937:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1937:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1962:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1962:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1933:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1933:3:10"
																},
																"nativeSrc": "1933:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1933:32:10"
															},
															"nativeSrc": "1930:52:10",
															"nodeType": "YulIf",
															"src": "1930:52:10"
														},
														{
															"nativeSrc": "1991:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1991:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2004:1:10",
																"nodeType": "YulLiteral",
																"src": "2004:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1995:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1995:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2014:32:10",
															"nodeType": "YulAssignment",
															"src": "2014:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2036:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2036:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2023:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2023:12:10"
																},
																"nativeSrc": "2023:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2023:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2014:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2014:5:10"
																}
															]
														},
														{
															"nativeSrc": "2055:15:10",
															"nodeType": "YulAssignment",
															"src": "2055:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2065:5:10",
																"nodeType": "YulIdentifier",
																"src": "2065:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2055:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1850:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1886:9:10",
														"nodeType": "YulTypedName",
														"src": "1886:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1897:7:10",
														"nodeType": "YulTypedName",
														"src": "1897:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1909:6:10",
														"nodeType": "YulTypedName",
														"src": "1909:6:10",
														"type": ""
													}
												],
												"src": "1850:226:10"
											},
											{
												"body": {
													"nativeSrc": "2210:102:10",
													"nodeType": "YulBlock",
													"src": "2210:102:10",
													"statements": [
														{
															"nativeSrc": "2220:26:10",
															"nodeType": "YulAssignment",
															"src": "2220:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2232:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2232:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2243:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2243:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2228:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:10"
																},
																"nativeSrc": "2228:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2228:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2220:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2220:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2262:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2262:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2277:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2277:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2293:3:10",
																								"nodeType": "YulLiteral",
																								"src": "2293:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2298:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2298:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2289:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2289:3:10"
																						},
																						"nativeSrc": "2289:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2289:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2302:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2302:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2285:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2285:3:10"
																				},
																				"nativeSrc": "2285:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2285:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2273:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2273:3:10"
																		},
																		"nativeSrc": "2273:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2273:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2255:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:10"
																},
																"nativeSrc": "2255:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2255:51:10"
															},
															"nativeSrc": "2255:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2255:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "2081:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2179:9:10",
														"nodeType": "YulTypedName",
														"src": "2179:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2190:6:10",
														"nodeType": "YulTypedName",
														"src": "2190:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2201:4:10",
														"nodeType": "YulTypedName",
														"src": "2201:4:10",
														"type": ""
													}
												],
												"src": "2081:231:10"
											},
											{
												"body": {
													"nativeSrc": "2421:362:10",
													"nodeType": "YulBlock",
													"src": "2421:362:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2467:16:10",
																"nodeType": "YulBlock",
																"src": "2467:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2476:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2476:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2479:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2479:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2469:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2469:6:10"
																			},
																			"nativeSrc": "2469:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2469:12:10"
																		},
																		"nativeSrc": "2469:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2469:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2442:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2442:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2451:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2451:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2438:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2438:3:10"
																		},
																		"nativeSrc": "2438:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2438:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2463:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2463:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2434:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2434:3:10"
																},
																"nativeSrc": "2434:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2434:32:10"
															},
															"nativeSrc": "2431:52:10",
															"nodeType": "YulIf",
															"src": "2431:52:10"
														},
														{
															"nativeSrc": "2492:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2492:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2505:1:10",
																"nodeType": "YulLiteral",
																"src": "2505:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2496:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2496:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2515:32:10",
															"nodeType": "YulAssignment",
															"src": "2515:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2537:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2537:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2524:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2524:12:10"
																},
																"nativeSrc": "2524:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2524:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2515:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2515:5:10"
																}
															]
														},
														{
															"nativeSrc": "2556:15:10",
															"nodeType": "YulAssignment",
															"src": "2556:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2566:5:10",
																"nodeType": "YulIdentifier",
																"src": "2566:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2556:6:10"
																}
															]
														},
														{
															"nativeSrc": "2580:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2580:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2595:1:10",
																"nodeType": "YulLiteral",
																"src": "2595:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2584:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2584:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2605:43:10",
															"nodeType": "YulAssignment",
															"src": "2605:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2633:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2633:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2644:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2644:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2629:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2629:3:10"
																		},
																		"nativeSrc": "2629:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2629:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2616:12:10"
																},
																"nativeSrc": "2616:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2616:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2605:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2605:7:10"
																}
															]
														},
														{
															"nativeSrc": "2657:17:10",
															"nodeType": "YulAssignment",
															"src": "2657:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "2667:7:10",
																"nodeType": "YulIdentifier",
																"src": "2667:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2657:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:10"
																}
															]
														},
														{
															"nativeSrc": "2683:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2683:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2698:1:10",
																"nodeType": "YulLiteral",
																"src": "2698:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2687:7:10",
																	"nodeType": "YulTypedName",
																	"src": "2687:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2708:43:10",
															"nodeType": "YulAssignment",
															"src": "2708:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2736:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2736:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2732:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:10"
																		},
																		"nativeSrc": "2732:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2732:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2719:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2719:12:10"
																},
																"nativeSrc": "2719:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2719:32:10"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2708:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2708:7:10"
																}
															]
														},
														{
															"nativeSrc": "2760:17:10",
															"nodeType": "YulAssignment",
															"src": "2760:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "2770:7:10",
																"nodeType": "YulIdentifier",
																"src": "2770:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2760:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "2317:466:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2371:9:10",
														"nodeType": "YulTypedName",
														"src": "2371:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2382:7:10",
														"nodeType": "YulTypedName",
														"src": "2382:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2394:6:10",
														"nodeType": "YulTypedName",
														"src": "2394:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2402:6:10",
														"nodeType": "YulTypedName",
														"src": "2402:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2410:6:10",
														"nodeType": "YulTypedName",
														"src": "2410:6:10",
														"type": ""
													}
												],
												"src": "2317:466:10"
											},
											{
												"body": {
													"nativeSrc": "2995:266:10",
													"nodeType": "YulBlock",
													"src": "2995:266:10",
													"statements": [
														{
															"nativeSrc": "3005:27:10",
															"nodeType": "YulAssignment",
															"src": "3005:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3017:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3017:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3028:3:10",
																		"nodeType": "YulLiteral",
																		"src": "3028:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3013:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:10"
																},
																"nativeSrc": "3013:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3013:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3005:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3005:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3048:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3048:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3059:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3059:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3041:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3041:6:10"
																},
																"nativeSrc": "3041:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3041:25:10"
															},
															"nativeSrc": "3041:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3041:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3086:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3086:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3097:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3097:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3082:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:10"
																		},
																		"nativeSrc": "3082:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3082:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3102:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3075:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3075:6:10"
																},
																"nativeSrc": "3075:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3075:34:10"
															},
															"nativeSrc": "3075:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3075:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3129:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3129:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3140:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3140:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3125:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:10"
																		},
																		"nativeSrc": "3125:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3125:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3145:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:10"
																},
																"nativeSrc": "3118:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3118:34:10"
															},
															"nativeSrc": "3118:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3118:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3172:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3172:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3183:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3183:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3168:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:10"
																		},
																		"nativeSrc": "3168:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3188:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3188:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3161:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3161:6:10"
																},
																"nativeSrc": "3161:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3161:34:10"
															},
															"nativeSrc": "3161:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3161:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3215:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3215:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3226:3:10",
																				"nodeType": "YulLiteral",
																				"src": "3226:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3211:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:10"
																		},
																		"nativeSrc": "3211:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "3246:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3246:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3239:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "3239:6:10"
																				},
																				"nativeSrc": "3239:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3239:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3232:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3232:6:10"
																		},
																		"nativeSrc": "3232:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3204:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:10"
																},
																"nativeSrc": "3204:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3204:51:10"
															},
															"nativeSrc": "3204:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3204:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2788:473:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2932:9:10",
														"nodeType": "YulTypedName",
														"src": "2932:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2943:6:10",
														"nodeType": "YulTypedName",
														"src": "2943:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2951:6:10",
														"nodeType": "YulTypedName",
														"src": "2951:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2959:6:10",
														"nodeType": "YulTypedName",
														"src": "2959:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2967:6:10",
														"nodeType": "YulTypedName",
														"src": "2967:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2975:6:10",
														"nodeType": "YulTypedName",
														"src": "2975:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2986:4:10",
														"nodeType": "YulTypedName",
														"src": "2986:4:10",
														"type": ""
													}
												],
												"src": "2788:473:10"
											},
											{
												"body": {
													"nativeSrc": "3395:119:10",
													"nodeType": "YulBlock",
													"src": "3395:119:10",
													"statements": [
														{
															"nativeSrc": "3405:26:10",
															"nodeType": "YulAssignment",
															"src": "3405:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3417:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3417:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3428:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3413:3:10"
																},
																"nativeSrc": "3413:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3413:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3405:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3405:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3447:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3447:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3458:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3458:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3440:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:10"
																},
																"nativeSrc": "3440:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3440:25:10"
															},
															"nativeSrc": "3440:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3440:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3485:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3496:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3496:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3481:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:10"
																		},
																		"nativeSrc": "3481:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3501:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3474:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:10"
																},
																"nativeSrc": "3474:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3474:34:10"
															},
															"nativeSrc": "3474:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3474:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3266:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3356:9:10",
														"nodeType": "YulTypedName",
														"src": "3356:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3367:6:10",
														"nodeType": "YulTypedName",
														"src": "3367:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3375:6:10",
														"nodeType": "YulTypedName",
														"src": "3375:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3386:4:10",
														"nodeType": "YulTypedName",
														"src": "3386:4:10",
														"type": ""
													}
												],
												"src": "3266:248:10"
											},
											{
												"body": {
													"nativeSrc": "3568:124:10",
													"nodeType": "YulBlock",
													"src": "3568:124:10",
													"statements": [
														{
															"nativeSrc": "3578:29:10",
															"nodeType": "YulAssignment",
															"src": "3578:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3600:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3587:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3587:12:10"
																},
																"nativeSrc": "3587:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3587:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3578:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3578:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3670:16:10",
																"nodeType": "YulBlock",
																"src": "3670:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3679:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3679:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3682:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3682:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3672:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3672:6:10"
																			},
																			"nativeSrc": "3672:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3672:12:10"
																		},
																		"nativeSrc": "3672:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3672:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3629:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3629:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3640:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3640:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3655:3:10",
																										"nodeType": "YulLiteral",
																										"src": "3655:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3660:1:10",
																										"nodeType": "YulLiteral",
																										"src": "3660:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3651:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3651:3:10"
																								},
																								"nativeSrc": "3651:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "3651:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3664:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3664:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "3647:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3647:3:10"
																						},
																						"nativeSrc": "3647:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3647:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3636:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3636:3:10"
																				},
																				"nativeSrc": "3636:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3636:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3626:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3626:2:10"
																		},
																		"nativeSrc": "3626:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3626:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3619:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:10"
																},
																"nativeSrc": "3619:50:10",
																"nodeType": "YulFunctionCall",
																"src": "3619:50:10"
															},
															"nativeSrc": "3616:70:10",
															"nodeType": "YulIf",
															"src": "3616:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "3519:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3547:6:10",
														"nodeType": "YulTypedName",
														"src": "3547:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3558:5:10",
														"nodeType": "YulTypedName",
														"src": "3558:5:10",
														"type": ""
													}
												],
												"src": "3519:173:10"
											},
											{
												"body": {
													"nativeSrc": "3767:116:10",
													"nodeType": "YulBlock",
													"src": "3767:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3813:16:10",
																"nodeType": "YulBlock",
																"src": "3813:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3822:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3822:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3825:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3825:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3815:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3815:6:10"
																			},
																			"nativeSrc": "3815:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3815:12:10"
																		},
																		"nativeSrc": "3815:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3815:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3788:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3788:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3797:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3797:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3784:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:10"
																		},
																		"nativeSrc": "3784:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3784:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3809:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3809:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3780:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3780:3:10"
																},
																"nativeSrc": "3780:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3780:32:10"
															},
															"nativeSrc": "3777:52:10",
															"nodeType": "YulIf",
															"src": "3777:52:10"
														},
														{
															"nativeSrc": "3838:39:10",
															"nodeType": "YulAssignment",
															"src": "3838:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3867:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3867:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3848:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3848:18:10"
																},
																"nativeSrc": "3848:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3848:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3838:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3697:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3733:9:10",
														"nodeType": "YulTypedName",
														"src": "3733:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3744:7:10",
														"nodeType": "YulTypedName",
														"src": "3744:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3756:6:10",
														"nodeType": "YulTypedName",
														"src": "3756:6:10",
														"type": ""
													}
												],
												"src": "3697:186:10"
											},
											{
												"body": {
													"nativeSrc": "3920:95:10",
													"nodeType": "YulBlock",
													"src": "3920:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3937:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3937:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3944:3:10",
																				"nodeType": "YulLiteral",
																				"src": "3944:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3949:10:10",
																				"nodeType": "YulLiteral",
																				"src": "3949:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3940:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:10"
																		},
																		"nativeSrc": "3940:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3940:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3930:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:10"
																},
																"nativeSrc": "3930:31:10",
																"nodeType": "YulFunctionCall",
																"src": "3930:31:10"
															},
															"nativeSrc": "3930:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "3930:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3977:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3977:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3980:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3980:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:10"
																},
																"nativeSrc": "3970:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3970:15:10"
															},
															"nativeSrc": "3970:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3970:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4001:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4001:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4004:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4004:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3994:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:10"
																},
																"nativeSrc": "3994:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3994:15:10"
															},
															"nativeSrc": "3994:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3994:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "3888:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3888:127:10"
											},
											{
												"body": {
													"nativeSrc": "4075:186:10",
													"nodeType": "YulBlock",
													"src": "4075:186:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4117:111:10",
																"nodeType": "YulBlock",
																"src": "4117:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4138:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4145:3:10",
																							"nodeType": "YulLiteral",
																							"src": "4145:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4150:10:10",
																							"nodeType": "YulLiteral",
																							"src": "4150:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4141:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4141:3:10"
																					},
																					"nativeSrc": "4141:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4141:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4131:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4131:6:10"
																			},
																			"nativeSrc": "4131:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4131:31:10"
																		},
																		"nativeSrc": "4131:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4131:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4182:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4182:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4185:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4185:4:10",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4175:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4175:6:10"
																			},
																			"nativeSrc": "4175:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4175:15:10"
																		},
																		"nativeSrc": "4175:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4175:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4210:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4213:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4213:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4203:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4203:6:10"
																			},
																			"nativeSrc": "4203:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4203:15:10"
																		},
																		"nativeSrc": "4203:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4203:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4098:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4098:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4105:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4105:1:10",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4095:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4095:2:10"
																		},
																		"nativeSrc": "4095:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4095:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:10"
																},
																"nativeSrc": "4088:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4088:20:10"
															},
															"nativeSrc": "4085:143:10",
															"nodeType": "YulIf",
															"src": "4085:143:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4244:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4244:3:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4249:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4237:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4237:6:10"
																},
																"nativeSrc": "4237:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4237:18:10"
															},
															"nativeSrc": "4237:18:10",
															"nodeType": "YulExpressionStatement",
															"src": "4237:18:10"
														}
													]
												},
												"name": "abi_encode_enum_PaymentMethod",
												"nativeSrc": "4020:241:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4059:5:10",
														"nodeType": "YulTypedName",
														"src": "4059:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4066:3:10",
														"nodeType": "YulTypedName",
														"src": "4066:3:10",
														"type": ""
													}
												],
												"src": "4020:241:10"
											},
											{
												"body": {
													"nativeSrc": "4383:99:10",
													"nodeType": "YulBlock",
													"src": "4383:99:10",
													"statements": [
														{
															"nativeSrc": "4393:26:10",
															"nodeType": "YulAssignment",
															"src": "4393:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4405:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4405:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4401:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:10"
																},
																"nativeSrc": "4401:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4401:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4393:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4393:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4458:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4458:6:10"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "4466:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4466:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "4428:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "4428:29:10"
																},
																"nativeSrc": "4428:48:10",
																"nodeType": "YulFunctionCall",
																"src": "4428:48:10"
															},
															"nativeSrc": "4428:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "4428:48:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_PaymentMethod_$1108__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4266:216:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:10",
														"nodeType": "YulTypedName",
														"src": "4352:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4363:6:10",
														"nodeType": "YulTypedName",
														"src": "4363:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4374:4:10",
														"nodeType": "YulTypedName",
														"src": "4374:4:10",
														"type": ""
													}
												],
												"src": "4266:216:10"
											},
											{
												"body": {
													"nativeSrc": "4592:184:10",
													"nodeType": "YulBlock",
													"src": "4592:184:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4638:16:10",
																"nodeType": "YulBlock",
																"src": "4638:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4647:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4647:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4650:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4650:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4640:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4640:6:10"
																			},
																			"nativeSrc": "4640:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:12:10"
																		},
																		"nativeSrc": "4640:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4613:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4613:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4622:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4622:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4609:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:10"
																		},
																		"nativeSrc": "4609:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4609:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4634:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4605:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4605:3:10"
																},
																"nativeSrc": "4605:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4605:32:10"
															},
															"nativeSrc": "4602:52:10",
															"nodeType": "YulIf",
															"src": "4602:52:10"
														},
														{
															"nativeSrc": "4663:39:10",
															"nodeType": "YulAssignment",
															"src": "4663:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4692:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4692:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4673:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4673:18:10"
																},
																"nativeSrc": "4673:29:10",
																"nodeType": "YulFunctionCall",
																"src": "4673:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4663:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:10"
																}
															]
														},
														{
															"nativeSrc": "4711:59:10",
															"nodeType": "YulAssignment",
															"src": "4711:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4755:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4755:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4766:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4766:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4751:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:10"
																		},
																		"nativeSrc": "4751:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4751:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PaymentMethod",
																	"nativeSrc": "4721:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "4721:29:10"
																},
																"nativeSrc": "4721:49:10",
																"nodeType": "YulFunctionCall",
																"src": "4721:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4711:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4711:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_PaymentMethod_$1108",
												"nativeSrc": "4487:289:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4550:9:10",
														"nodeType": "YulTypedName",
														"src": "4550:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4561:7:10",
														"nodeType": "YulTypedName",
														"src": "4561:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4573:6:10",
														"nodeType": "YulTypedName",
														"src": "4573:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4581:6:10",
														"nodeType": "YulTypedName",
														"src": "4581:6:10",
														"type": ""
													}
												],
												"src": "4487:289:10"
											},
											{
												"body": {
													"nativeSrc": "4899:102:10",
													"nodeType": "YulBlock",
													"src": "4899:102:10",
													"statements": [
														{
															"nativeSrc": "4909:26:10",
															"nodeType": "YulAssignment",
															"src": "4909:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4921:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4921:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4932:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4932:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4917:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4917:3:10"
																},
																"nativeSrc": "4917:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4917:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4909:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4909:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4951:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4951:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4966:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4966:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4982:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4982:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4987:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4987:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4978:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4978:3:10"
																						},
																						"nativeSrc": "4978:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4978:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4991:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4991:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4974:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4974:3:10"
																				},
																				"nativeSrc": "4974:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4974:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4962:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4962:3:10"
																		},
																		"nativeSrc": "4962:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4962:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:10"
																},
																"nativeSrc": "4944:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4944:51:10"
															},
															"nativeSrc": "4944:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4944:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_icotoken_$1074__to_t_address__fromStack_reversed",
												"nativeSrc": "4781:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4868:9:10",
														"nodeType": "YulTypedName",
														"src": "4868:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4879:6:10",
														"nodeType": "YulTypedName",
														"src": "4879:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4890:4:10",
														"nodeType": "YulTypedName",
														"src": "4890:4:10",
														"type": ""
													}
												],
												"src": "4781:220:10"
											},
											{
												"body": {
													"nativeSrc": "5038:95:10",
													"nodeType": "YulBlock",
													"src": "5038:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5055:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5055:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5062:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5062:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5067:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5067:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5058:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5058:3:10"
																		},
																		"nativeSrc": "5058:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5058:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5048:6:10"
																},
																"nativeSrc": "5048:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5048:31:10"
															},
															"nativeSrc": "5048:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5048:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5095:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5095:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5098:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5098:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5088:6:10"
																},
																"nativeSrc": "5088:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5088:15:10"
															},
															"nativeSrc": "5088:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5088:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5119:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5119:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5122:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5122:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5112:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:10"
																},
																"nativeSrc": "5112:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5112:15:10"
															},
															"nativeSrc": "5112:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5112:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5006:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5006:127:10"
											},
											{
												"body": {
													"nativeSrc": "5189:186:10",
													"nodeType": "YulBlock",
													"src": "5189:186:10",
													"statements": [
														{
															"nativeSrc": "5199:20:10",
															"nodeType": "YulAssignment",
															"src": "5199:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5214:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5214:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5217:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5217:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5210:3:10"
																},
																"nativeSrc": "5210:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5210:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5199:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5199:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5266:22:10",
																"nodeType": "YulBlock",
																"src": "5266:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5268:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5268:16:10"
																			},
																			"nativeSrc": "5268:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5268:18:10"
																		},
																		"nativeSrc": "5268:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5239:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5239:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5242:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5242:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5235:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:10"
																		},
																		"nativeSrc": "5235:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5235:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "5249:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5249:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5256:3:10",
																						"nodeType": "YulLiteral",
																						"src": "5256:3:10",
																						"type": "",
																						"value": "255"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5261:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5261:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5252:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:10"
																				},
																				"nativeSrc": "5252:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5252:11:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5246:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5246:2:10"
																		},
																		"nativeSrc": "5246:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5246:18:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5231:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5231:3:10"
																},
																"nativeSrc": "5231:34:10",
																"nodeType": "YulFunctionCall",
																"src": "5231:34:10"
															},
															"nativeSrc": "5228:60:10",
															"nodeType": "YulIf",
															"src": "5228:60:10"
														},
														{
															"body": {
																"nativeSrc": "5347:22:10",
																"nodeType": "YulBlock",
																"src": "5347:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5349:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5349:16:10"
																			},
																			"nativeSrc": "5349:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5349:18:10"
																		},
																		"nativeSrc": "5349:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5349:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5317:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "5317:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5310:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5310:6:10"
																				},
																				"nativeSrc": "5310:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5310:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5324:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "5324:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5332:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "5332:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5341:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "5341:1:10"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nativeSrc": "5327:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5327:4:10"
																						},
																						"nativeSrc": "5327:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5327:16:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5321:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5321:2:10"
																				},
																				"nativeSrc": "5321:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5321:23:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5307:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5307:2:10"
																		},
																		"nativeSrc": "5307:38:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5307:38:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5300:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:10"
																},
																"nativeSrc": "5300:46:10",
																"nodeType": "YulFunctionCall",
																"src": "5300:46:10"
															},
															"nativeSrc": "5297:72:10",
															"nodeType": "YulIf",
															"src": "5297:72:10"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nativeSrc": "5138:237:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5168:1:10",
														"nodeType": "YulTypedName",
														"src": "5168:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5171:1:10",
														"nodeType": "YulTypedName",
														"src": "5171:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5177:7:10",
														"nodeType": "YulTypedName",
														"src": "5177:7:10",
														"type": ""
													}
												],
												"src": "5138:237:10"
											},
											{
												"body": {
													"nativeSrc": "5554:168:10",
													"nodeType": "YulBlock",
													"src": "5554:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5571:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5582:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:10"
																},
																"nativeSrc": "5564:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5564:21:10"
															},
															"nativeSrc": "5564:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5564:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5605:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5605:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5616:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5616:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5601:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5601:3:10"
																		},
																		"nativeSrc": "5601:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5601:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5621:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5621:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5594:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5594:6:10"
																},
																"nativeSrc": "5594:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5594:30:10"
															},
															"nativeSrc": "5594:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5594:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5644:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5644:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5655:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5655:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5640:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:10"
																		},
																		"nativeSrc": "5640:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:18:10"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652066656564",
																		"kind": "string",
																		"nativeSrc": "5660:20:10",
																		"nodeType": "YulLiteral",
																		"src": "5660:20:10",
																		"type": "",
																		"value": "Invalid price feed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5633:6:10"
																},
																"nativeSrc": "5633:48:10",
																"nodeType": "YulFunctionCall",
																"src": "5633:48:10"
															},
															"nativeSrc": "5633:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "5633:48:10"
														},
														{
															"nativeSrc": "5690:26:10",
															"nodeType": "YulAssignment",
															"src": "5690:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5702:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5702:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5713:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5713:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5698:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:10"
																},
																"nativeSrc": "5698:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5698:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5690:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5690:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5380:342:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5531:9:10",
														"nodeType": "YulTypedName",
														"src": "5531:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5545:4:10",
														"nodeType": "YulTypedName",
														"src": "5545:4:10",
														"type": ""
													}
												],
												"src": "5380:342:10"
											},
											{
												"body": {
													"nativeSrc": "5779:116:10",
													"nodeType": "YulBlock",
													"src": "5779:116:10",
													"statements": [
														{
															"nativeSrc": "5789:20:10",
															"nodeType": "YulAssignment",
															"src": "5789:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5804:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5804:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5807:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5807:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5800:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:10"
																},
																"nativeSrc": "5800:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5800:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5789:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5789:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5867:22:10",
																"nodeType": "YulBlock",
																"src": "5867:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5869:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5869:16:10"
																			},
																			"nativeSrc": "5869:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5869:18:10"
																		},
																		"nativeSrc": "5869:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5869:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5838:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "5838:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5831:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5831:6:10"
																				},
																				"nativeSrc": "5831:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5831:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5845:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "5845:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5852:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "5852:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5861:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "5861:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5848:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5848:3:10"
																						},
																						"nativeSrc": "5848:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5848:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5842:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5842:2:10"
																				},
																				"nativeSrc": "5842:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5842:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5828:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5828:2:10"
																		},
																		"nativeSrc": "5828:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5821:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5821:6:10"
																},
																"nativeSrc": "5821:45:10",
																"nodeType": "YulFunctionCall",
																"src": "5821:45:10"
															},
															"nativeSrc": "5818:71:10",
															"nodeType": "YulIf",
															"src": "5818:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5727:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5758:1:10",
														"nodeType": "YulTypedName",
														"src": "5758:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5761:1:10",
														"nodeType": "YulTypedName",
														"src": "5761:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5767:7:10",
														"nodeType": "YulTypedName",
														"src": "5767:7:10",
														"type": ""
													}
												],
												"src": "5727:168:10"
											},
											{
												"body": {
													"nativeSrc": "5946:171:10",
													"nodeType": "YulBlock",
													"src": "5946:171:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5977:111:10",
																"nodeType": "YulBlock",
																"src": "5977:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5998:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5998:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6005:3:10",
																							"nodeType": "YulLiteral",
																							"src": "6005:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6010:10:10",
																							"nodeType": "YulLiteral",
																							"src": "6010:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6001:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6001:3:10"
																					},
																					"nativeSrc": "6001:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6001:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5991:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5991:6:10"
																			},
																			"nativeSrc": "5991:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5991:31:10"
																		},
																		"nativeSrc": "5991:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5991:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6042:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6042:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6045:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6045:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6035:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6035:6:10"
																			},
																			"nativeSrc": "6035:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6035:15:10"
																		},
																		"nativeSrc": "6035:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6035:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6070:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6070:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6073:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6073:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6063:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6063:6:10"
																			},
																			"nativeSrc": "6063:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6063:15:10"
																		},
																		"nativeSrc": "6063:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6063:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5966:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5966:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5959:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5959:6:10"
																},
																"nativeSrc": "5959:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5959:9:10"
															},
															"nativeSrc": "5956:132:10",
															"nodeType": "YulIf",
															"src": "5956:132:10"
														},
														{
															"nativeSrc": "6097:14:10",
															"nodeType": "YulAssignment",
															"src": "6097:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6106:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6106:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6109:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6109:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6102:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6102:3:10"
																},
																"nativeSrc": "6102:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6102:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6097:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6097:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5900:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5931:1:10",
														"nodeType": "YulTypedName",
														"src": "5931:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5934:1:10",
														"nodeType": "YulTypedName",
														"src": "5934:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5940:1:10",
														"nodeType": "YulTypedName",
														"src": "5940:1:10",
														"type": ""
													}
												],
												"src": "5900:217:10"
											},
											{
												"body": {
													"nativeSrc": "6171:79:10",
													"nodeType": "YulBlock",
													"src": "6171:79:10",
													"statements": [
														{
															"nativeSrc": "6181:17:10",
															"nodeType": "YulAssignment",
															"src": "6181:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6193:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6193:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6196:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6196:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6189:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6189:3:10"
																},
																"nativeSrc": "6189:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6189:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6181:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6181:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6222:22:10",
																"nodeType": "YulBlock",
																"src": "6222:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6224:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6224:16:10"
																			},
																			"nativeSrc": "6224:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6224:18:10"
																		},
																		"nativeSrc": "6224:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6224:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6213:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6213:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6219:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6219:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6210:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6210:2:10"
																},
																"nativeSrc": "6210:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6210:11:10"
															},
															"nativeSrc": "6207:37:10",
															"nodeType": "YulIf",
															"src": "6207:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6122:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6153:1:10",
														"nodeType": "YulTypedName",
														"src": "6153:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6156:1:10",
														"nodeType": "YulTypedName",
														"src": "6156:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6162:4:10",
														"nodeType": "YulTypedName",
														"src": "6162:4:10",
														"type": ""
													}
												],
												"src": "6122:128:10"
											},
											{
												"body": {
													"nativeSrc": "6324:306:10",
													"nodeType": "YulBlock",
													"src": "6324:306:10",
													"statements": [
														{
															"nativeSrc": "6334:10:10",
															"nodeType": "YulAssignment",
															"src": "6334:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6343:1:10",
																"nodeType": "YulLiteral",
																"src": "6343:1:10",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6334:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6334:5:10"
																}
															]
														},
														{
															"nativeSrc": "6353:13:10",
															"nodeType": "YulAssignment",
															"src": "6353:13:10",
															"value": {
																"name": "_base",
																"nativeSrc": "6361:5:10",
																"nodeType": "YulIdentifier",
																"src": "6361:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6353:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6353:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6411:213:10",
																"nodeType": "YulBlock",
																"src": "6411:213:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6453:22:10",
																			"nodeType": "YulBlock",
																			"src": "6453:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6455:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "6455:16:10"
																						},
																						"nativeSrc": "6455:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6455:18:10"
																					},
																					"nativeSrc": "6455:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "6455:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6431:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "6431:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6441:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6441:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6446:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6446:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6437:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6437:3:10"
																					},
																					"nativeSrc": "6437:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6437:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6428:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6428:2:10"
																			},
																			"nativeSrc": "6428:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6428:24:10"
																		},
																		"nativeSrc": "6425:50:10",
																		"nodeType": "YulIf",
																		"src": "6425:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "6508:29:10",
																			"nodeType": "YulBlock",
																			"src": "6508:29:10",
																			"statements": [
																				{
																					"nativeSrc": "6510:25:10",
																					"nodeType": "YulAssignment",
																					"src": "6510:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6523:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "6523:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6530:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6530:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6519:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6519:3:10"
																						},
																						"nativeSrc": "6519:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6519:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6510:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "6510:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6495:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6495:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6505:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6505:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6491:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:10"
																			},
																			"nativeSrc": "6491:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:16:10"
																		},
																		"nativeSrc": "6488:49:10",
																		"nodeType": "YulIf",
																		"src": "6488:49:10"
																	},
																	{
																		"nativeSrc": "6550:23:10",
																		"nodeType": "YulAssignment",
																		"src": "6550:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6562:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "6562:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6568:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "6568:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6558:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6558:3:10"
																			},
																			"nativeSrc": "6558:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6558:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6550:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6586:28:10",
																		"nodeType": "YulAssignment",
																		"src": "6586:28:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6602:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6602:1:10",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6605:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6605:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6598:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6598:3:10"
																			},
																			"nativeSrc": "6598:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6598:16:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6586:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "6586:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6386:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "6386:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6396:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6396:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6383:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6383:2:10"
																},
																"nativeSrc": "6383:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:10"
															},
															"nativeSrc": "6375:249:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6399:3:10",
																"nodeType": "YulBlock",
																"src": "6399:3:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6379:3:10",
																"nodeType": "YulBlock",
																"src": "6379:3:10",
																"statements": []
															},
															"src": "6375:249:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6255:375:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "6283:5:10",
														"nodeType": "YulTypedName",
														"src": "6283:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6290:8:10",
														"nodeType": "YulTypedName",
														"src": "6290:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6300:3:10",
														"nodeType": "YulTypedName",
														"src": "6300:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6308:5:10",
														"nodeType": "YulTypedName",
														"src": "6308:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6315:4:10",
														"nodeType": "YulTypedName",
														"src": "6315:4:10",
														"type": ""
													}
												],
												"src": "6255:375:10"
											},
											{
												"body": {
													"nativeSrc": "6694:843:10",
													"nodeType": "YulBlock",
													"src": "6694:843:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6732:52:10",
																"nodeType": "YulBlock",
																"src": "6732:52:10",
																"statements": [
																	{
																		"nativeSrc": "6746:10:10",
																		"nodeType": "YulAssignment",
																		"src": "6746:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6755:1:10",
																			"nodeType": "YulLiteral",
																			"src": "6755:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6746:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6746:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6769:5:10",
																		"nodeType": "YulLeave",
																		"src": "6769:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6714:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "6714:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6707:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6707:6:10"
																},
																"nativeSrc": "6707:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6707:16:10"
															},
															"nativeSrc": "6704:80:10",
															"nodeType": "YulIf",
															"src": "6704:80:10"
														},
														{
															"body": {
																"nativeSrc": "6817:52:10",
																"nodeType": "YulBlock",
																"src": "6817:52:10",
																"statements": [
																	{
																		"nativeSrc": "6831:10:10",
																		"nodeType": "YulAssignment",
																		"src": "6831:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6840:1:10",
																			"nodeType": "YulLiteral",
																			"src": "6840:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6831:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6831:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6854:5:10",
																		"nodeType": "YulLeave",
																		"src": "6854:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6803:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6803:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6796:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6796:6:10"
																},
																"nativeSrc": "6796:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6796:12:10"
															},
															"nativeSrc": "6793:76:10",
															"nodeType": "YulIf",
															"src": "6793:76:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6905:52:10",
																		"nodeType": "YulBlock",
																		"src": "6905:52:10",
																		"statements": [
																			{
																				"nativeSrc": "6919:10:10",
																				"nodeType": "YulAssignment",
																				"src": "6919:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6928:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6928:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6919:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6919:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6942:5:10",
																				"nodeType": "YulLeave",
																				"src": "6942:5:10"
																			}
																		]
																	},
																	"nativeSrc": "6898:59:10",
																	"nodeType": "YulCase",
																	"src": "6898:59:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6903:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6903:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6973:167:10",
																		"nodeType": "YulBlock",
																		"src": "6973:167:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7008:22:10",
																					"nodeType": "YulBlock",
																					"src": "7008:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7010:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "7010:16:10"
																								},
																								"nativeSrc": "7010:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7010:18:10"
																							},
																							"nativeSrc": "7010:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "7010:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6993:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "6993:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7003:3:10",
																							"nodeType": "YulLiteral",
																							"src": "7003:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6990:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6990:2:10"
																					},
																					"nativeSrc": "6990:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6990:17:10"
																				},
																				"nativeSrc": "6987:43:10",
																				"nodeType": "YulIf",
																				"src": "6987:43:10"
																			},
																			{
																				"nativeSrc": "7043:25:10",
																				"nodeType": "YulAssignment",
																				"src": "7043:25:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7056:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7056:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7066:1:10",
																							"nodeType": "YulLiteral",
																							"src": "7066:1:10",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7052:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7052:3:10"
																					},
																					"nativeSrc": "7052:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7052:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7043:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7043:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7081:11:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7081:11:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7091:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7091:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "7085:2:10",
																						"nodeType": "YulTypedName",
																						"src": "7085:2:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7105:7:10",
																				"nodeType": "YulAssignment",
																				"src": "7105:7:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7111:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7111:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "7105:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "7105:2:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7125:5:10",
																				"nodeType": "YulLeave",
																				"src": "7125:5:10"
																			}
																		]
																	},
																	"nativeSrc": "6966:174:10",
																	"nodeType": "YulCase",
																	"src": "6966:174:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6971:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6971:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6885:4:10",
																"nodeType": "YulIdentifier",
																"src": "6885:4:10"
															},
															"nativeSrc": "6878:262:10",
															"nodeType": "YulSwitch",
															"src": "6878:262:10"
														},
														{
															"body": {
																"nativeSrc": "7238:114:10",
																"nodeType": "YulBlock",
																"src": "7238:114:10",
																"statements": [
																	{
																		"nativeSrc": "7252:28:10",
																		"nodeType": "YulAssignment",
																		"src": "7252:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7265:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "7265:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7271:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "7271:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7261:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7261:3:10"
																			},
																			"nativeSrc": "7261:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7261:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7252:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7252:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7293:11:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7293:11:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7303:1:10",
																			"nodeType": "YulLiteral",
																			"src": "7303:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "7297:2:10",
																				"nodeType": "YulTypedName",
																				"src": "7297:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7317:7:10",
																		"nodeType": "YulAssignment",
																		"src": "7317:7:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7323:1:10",
																			"nodeType": "YulLiteral",
																			"src": "7323:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "7317:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "7317:2:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7337:5:10",
																		"nodeType": "YulLeave",
																		"src": "7337:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7162:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "7162:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7168:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7168:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7159:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7159:2:10"
																				},
																				"nativeSrc": "7159:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7159:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7176:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7176:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7186:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7186:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7173:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7173:2:10"
																				},
																				"nativeSrc": "7173:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7173:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7155:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7155:3:10"
																		},
																		"nativeSrc": "7155:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7155:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7199:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "7199:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7205:3:10",
																						"nodeType": "YulLiteral",
																						"src": "7205:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7196:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7196:2:10"
																				},
																				"nativeSrc": "7196:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7196:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7214:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7214:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7224:2:10",
																						"nodeType": "YulLiteral",
																						"src": "7224:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7211:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7211:2:10"
																				},
																				"nativeSrc": "7211:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7211:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:10"
																		},
																		"nativeSrc": "7192:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7192:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7152:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7152:2:10"
																},
																"nativeSrc": "7152:77:10",
																"nodeType": "YulFunctionCall",
																"src": "7152:77:10"
															},
															"nativeSrc": "7149:203:10",
															"nodeType": "YulIf",
															"src": "7149:203:10"
														},
														{
															"nativeSrc": "7361:65:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7361:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7403:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7403:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7409:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7409:8:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7423:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7423:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7419:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7419:3:10"
																		},
																		"nativeSrc": "7419:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7419:6:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7384:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7384:18:10"
																},
																"nativeSrc": "7384:42:10",
																"nodeType": "YulFunctionCall",
																"src": "7384:42:10"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "7365:7:10",
																	"nodeType": "YulTypedName",
																	"src": "7365:7:10",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "7374:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7374:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7471:22:10",
																"nodeType": "YulBlock",
																"src": "7471:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7473:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7473:16:10"
																			},
																			"nativeSrc": "7473:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7473:18:10"
																		},
																		"nativeSrc": "7473:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7473:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "7441:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "7441:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7458:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7458:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7454:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7454:3:10"
																				},
																				"nativeSrc": "7454:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7454:6:10"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "7462:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7462:6:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7450:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:10"
																		},
																		"nativeSrc": "7450:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7450:19:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7438:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7438:2:10"
																},
																"nativeSrc": "7438:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7438:32:10"
															},
															"nativeSrc": "7435:58:10",
															"nodeType": "YulIf",
															"src": "7435:58:10"
														},
														{
															"nativeSrc": "7502:29:10",
															"nodeType": "YulAssignment",
															"src": "7502:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "7515:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "7515:7:10"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "7524:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7524:6:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7511:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:10"
																},
																"nativeSrc": "7511:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7511:20:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7502:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7502:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6635:902:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6665:4:10",
														"nodeType": "YulTypedName",
														"src": "6665:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6671:8:10",
														"nodeType": "YulTypedName",
														"src": "6671:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6684:5:10",
														"nodeType": "YulTypedName",
														"src": "6684:5:10",
														"type": ""
													}
												],
												"src": "6635:902:10"
											},
											{
												"body": {
													"nativeSrc": "7612:61:10",
													"nodeType": "YulBlock",
													"src": "7612:61:10",
													"statements": [
														{
															"nativeSrc": "7622:45:10",
															"nodeType": "YulAssignment",
															"src": "7622:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7652:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7652:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7658:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "7658:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7631:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "7631:20:10"
																},
																"nativeSrc": "7631:36:10",
																"nodeType": "YulFunctionCall",
																"src": "7631:36:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7622:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7622:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "7542:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7583:4:10",
														"nodeType": "YulTypedName",
														"src": "7583:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7589:8:10",
														"nodeType": "YulTypedName",
														"src": "7589:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7602:5:10",
														"nodeType": "YulTypedName",
														"src": "7602:5:10",
														"type": ""
													}
												],
												"src": "7542:131:10"
											},
											{
												"body": {
													"nativeSrc": "7852:176:10",
													"nodeType": "YulBlock",
													"src": "7852:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7869:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7869:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7880:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7862:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:10"
																},
																"nativeSrc": "7862:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7862:21:10"
															},
															"nativeSrc": "7862:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7862:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7903:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7903:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7914:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7914:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:10"
																		},
																		"nativeSrc": "7899:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7919:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7892:6:10"
																},
																"nativeSrc": "7892:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7892:30:10"
															},
															"nativeSrc": "7892:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7892:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7942:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7942:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7953:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7953:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7938:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7938:3:10"
																		},
																		"nativeSrc": "7938:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7938:18:10"
																	},
																	{
																		"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																		"kind": "string",
																		"nativeSrc": "7958:28:10",
																		"nodeType": "YulLiteral",
																		"src": "7958:28:10",
																		"type": "",
																		"value": "Unsupported payment method"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7931:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7931:6:10"
																},
																"nativeSrc": "7931:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7931:56:10"
															},
															"nativeSrc": "7931:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "7931:56:10"
														},
														{
															"nativeSrc": "7996:26:10",
															"nodeType": "YulAssignment",
															"src": "7996:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8008:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8008:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8019:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8019:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8004:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8004:3:10"
																},
																"nativeSrc": "8004:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8004:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7996:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7996:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7678:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7829:9:10",
														"nodeType": "YulTypedName",
														"src": "7829:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7843:4:10",
														"nodeType": "YulTypedName",
														"src": "7843:4:10",
														"type": ""
													}
												],
												"src": "7678:350:10"
											},
											{
												"body": {
													"nativeSrc": "8092:120:10",
													"nodeType": "YulBlock",
													"src": "8092:120:10",
													"statements": [
														{
															"nativeSrc": "8102:22:10",
															"nodeType": "YulAssignment",
															"src": "8102:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8117:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8117:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8111:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8111:5:10"
																},
																"nativeSrc": "8111:13:10",
																"nodeType": "YulFunctionCall",
																"src": "8111:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8102:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8102:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8190:16:10",
																"nodeType": "YulBlock",
																"src": "8190:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8199:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8199:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8202:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8202:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8192:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8192:6:10"
																			},
																			"nativeSrc": "8192:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8192:12:10"
																		},
																		"nativeSrc": "8192:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8192:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8146:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8146:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8157:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "8157:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8164:22:10",
																						"nodeType": "YulLiteral",
																						"src": "8164:22:10",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8153:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8153:3:10"
																				},
																				"nativeSrc": "8153:34:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8153:34:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8143:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8143:2:10"
																		},
																		"nativeSrc": "8143:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8143:45:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8136:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8136:6:10"
																},
																"nativeSrc": "8136:53:10",
																"nodeType": "YulFunctionCall",
																"src": "8136:53:10"
															},
															"nativeSrc": "8133:73:10",
															"nodeType": "YulIf",
															"src": "8133:73:10"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "8033:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8071:6:10",
														"nodeType": "YulTypedName",
														"src": "8071:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8082:5:10",
														"nodeType": "YulTypedName",
														"src": "8082:5:10",
														"type": ""
													}
												],
												"src": "8033:179:10"
											},
											{
												"body": {
													"nativeSrc": "8363:425:10",
													"nodeType": "YulBlock",
													"src": "8363:425:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8410:16:10",
																"nodeType": "YulBlock",
																"src": "8410:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8419:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8419:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8422:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8422:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8412:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8412:6:10"
																			},
																			"nativeSrc": "8412:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8412:12:10"
																		},
																		"nativeSrc": "8412:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8412:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8384:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8384:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8393:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8380:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8380:3:10"
																		},
																		"nativeSrc": "8380:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8380:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8405:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8405:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8376:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8376:3:10"
																},
																"nativeSrc": "8376:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8376:33:10"
															},
															"nativeSrc": "8373:53:10",
															"nodeType": "YulIf",
															"src": "8373:53:10"
														},
														{
															"nativeSrc": "8435:49:10",
															"nodeType": "YulAssignment",
															"src": "8435:49:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8474:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8474:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "8445:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "8445:28:10"
																},
																"nativeSrc": "8445:39:10",
																"nodeType": "YulFunctionCall",
																"src": "8445:39:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8435:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8435:6:10"
																}
															]
														},
														{
															"nativeSrc": "8493:35:10",
															"nodeType": "YulAssignment",
															"src": "8493:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8513:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8513:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8524:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8509:3:10"
																		},
																		"nativeSrc": "8509:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8509:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8503:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8503:5:10"
																},
																"nativeSrc": "8503:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8503:25:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8493:6:10"
																}
															]
														},
														{
															"nativeSrc": "8537:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8537:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8550:1:10",
																"nodeType": "YulLiteral",
																"src": "8550:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8541:5:10",
																	"nodeType": "YulTypedName",
																	"src": "8541:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8560:34:10",
															"nodeType": "YulAssignment",
															"src": "8560:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8579:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8579:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8590:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8590:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8575:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8575:3:10"
																		},
																		"nativeSrc": "8575:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8575:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8569:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8569:5:10"
																},
																"nativeSrc": "8569:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8569:25:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8560:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8560:5:10"
																}
															]
														},
														{
															"nativeSrc": "8603:15:10",
															"nodeType": "YulAssignment",
															"src": "8603:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "8613:5:10",
																"nodeType": "YulIdentifier",
																"src": "8613:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8603:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8603:6:10"
																}
															]
														},
														{
															"nativeSrc": "8627:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8627:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8642:1:10",
																"nodeType": "YulLiteral",
																"src": "8642:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "8631:7:10",
																	"nodeType": "YulTypedName",
																	"src": "8631:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8652:36:10",
															"nodeType": "YulAssignment",
															"src": "8652:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8673:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8673:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8684:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8684:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8669:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8669:3:10"
																		},
																		"nativeSrc": "8669:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8669:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8663:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8663:5:10"
																},
																"nativeSrc": "8663:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8663:25:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "8652:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8652:7:10"
																}
															]
														},
														{
															"nativeSrc": "8697:17:10",
															"nodeType": "YulAssignment",
															"src": "8697:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "8707:7:10",
																"nodeType": "YulIdentifier",
																"src": "8707:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "8697:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8697:6:10"
																}
															]
														},
														{
															"nativeSrc": "8723:59:10",
															"nodeType": "YulAssignment",
															"src": "8723:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8766:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8766:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8777:3:10",
																				"nodeType": "YulLiteral",
																				"src": "8777:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8762:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8762:3:10"
																		},
																		"nativeSrc": "8762:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8762:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "8733:28:10",
																	"nodeType": "YulIdentifier",
																	"src": "8733:28:10"
																},
																"nativeSrc": "8733:49:10",
																"nodeType": "YulFunctionCall",
																"src": "8733:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "8723:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8723:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "8217:571:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8297:9:10",
														"nodeType": "YulTypedName",
														"src": "8297:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8308:7:10",
														"nodeType": "YulTypedName",
														"src": "8308:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8320:6:10",
														"nodeType": "YulTypedName",
														"src": "8320:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8328:6:10",
														"nodeType": "YulTypedName",
														"src": "8328:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8336:6:10",
														"nodeType": "YulTypedName",
														"src": "8336:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8344:6:10",
														"nodeType": "YulTypedName",
														"src": "8344:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8352:6:10",
														"nodeType": "YulTypedName",
														"src": "8352:6:10",
														"type": ""
													}
												],
												"src": "8217:571:10"
											},
											{
												"body": {
													"nativeSrc": "8967:228:10",
													"nodeType": "YulBlock",
													"src": "8967:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8984:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8984:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8995:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8995:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8977:6:10"
																},
																"nativeSrc": "8977:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8977:21:10"
															},
															"nativeSrc": "8977:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8977:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9018:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9018:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9029:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9029:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9014:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9014:3:10"
																		},
																		"nativeSrc": "9014:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9014:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9034:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9034:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9007:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9007:6:10"
																},
																"nativeSrc": "9007:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9007:30:10"
															},
															"nativeSrc": "9007:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9007:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9057:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9057:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9068:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9068:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9053:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9053:3:10"
																		},
																		"nativeSrc": "9053:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9053:18:10"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "9073:34:10",
																		"nodeType": "YulLiteral",
																		"src": "9073:34:10",
																		"type": "",
																		"value": "Token amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9046:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9046:6:10"
																},
																"nativeSrc": "9046:62:10",
																"nodeType": "YulFunctionCall",
																"src": "9046:62:10"
															},
															"nativeSrc": "9046:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "9046:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9139:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9139:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9124:3:10"
																		},
																		"nativeSrc": "9124:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9124:18:10"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nativeSrc": "9144:8:10",
																		"nodeType": "YulLiteral",
																		"src": "9144:8:10",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9117:6:10"
																},
																"nativeSrc": "9117:36:10",
																"nodeType": "YulFunctionCall",
																"src": "9117:36:10"
															},
															"nativeSrc": "9117:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "9117:36:10"
														},
														{
															"nativeSrc": "9162:27:10",
															"nodeType": "YulAssignment",
															"src": "9162:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9174:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9174:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9185:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9185:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9170:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:10"
																},
																"nativeSrc": "9170:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9170:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9162:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9162:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8793:402:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8944:9:10",
														"nodeType": "YulTypedName",
														"src": "8944:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8958:4:10",
														"nodeType": "YulTypedName",
														"src": "8958:4:10",
														"type": ""
													}
												],
												"src": "8793:402:10"
											},
											{
												"body": {
													"nativeSrc": "9374:164:10",
													"nodeType": "YulBlock",
													"src": "9374:164:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9391:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9391:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9402:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9384:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9384:6:10"
																},
																"nativeSrc": "9384:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9384:21:10"
															},
															"nativeSrc": "9384:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9384:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9425:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9425:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9436:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9421:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9421:3:10"
																		},
																		"nativeSrc": "9421:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9421:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9441:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9441:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9414:6:10"
																},
																"nativeSrc": "9414:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9414:30:10"
															},
															"nativeSrc": "9414:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9414:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9464:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9464:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9475:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9475:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9460:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:10"
																		},
																		"nativeSrc": "9460:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9460:18:10"
																	},
																	{
																		"hexValue": "4e6f206163746976652073616c65",
																		"kind": "string",
																		"nativeSrc": "9480:16:10",
																		"nodeType": "YulLiteral",
																		"src": "9480:16:10",
																		"type": "",
																		"value": "No active sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9453:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9453:6:10"
																},
																"nativeSrc": "9453:44:10",
																"nodeType": "YulFunctionCall",
																"src": "9453:44:10"
															},
															"nativeSrc": "9453:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "9453:44:10"
														},
														{
															"nativeSrc": "9506:26:10",
															"nodeType": "YulAssignment",
															"src": "9506:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9518:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9518:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9529:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9529:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9514:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9514:3:10"
																},
																"nativeSrc": "9514:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9514:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9506:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9506:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9200:338:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9351:9:10",
														"nodeType": "YulTypedName",
														"src": "9351:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9365:4:10",
														"nodeType": "YulTypedName",
														"src": "9365:4:10",
														"type": ""
													}
												],
												"src": "9200:338:10"
											},
											{
												"body": {
													"nativeSrc": "9624:149:10",
													"nodeType": "YulBlock",
													"src": "9624:149:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9670:16:10",
																"nodeType": "YulBlock",
																"src": "9670:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9679:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9679:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9682:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9682:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9672:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9672:6:10"
																			},
																			"nativeSrc": "9672:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9672:12:10"
																		},
																		"nativeSrc": "9672:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9672:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9645:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9645:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9654:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9654:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9641:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9641:3:10"
																		},
																		"nativeSrc": "9641:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9641:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9666:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9666:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9637:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9637:3:10"
																},
																"nativeSrc": "9637:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9637:32:10"
															},
															"nativeSrc": "9634:52:10",
															"nodeType": "YulIf",
															"src": "9634:52:10"
														},
														{
															"nativeSrc": "9695:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9695:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "9708:1:10",
																"nodeType": "YulLiteral",
																"src": "9708:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9699:5:10",
																	"nodeType": "YulTypedName",
																	"src": "9699:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9718:25:10",
															"nodeType": "YulAssignment",
															"src": "9718:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9733:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9733:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9727:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9727:5:10"
																},
																"nativeSrc": "9727:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9727:16:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9718:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9718:5:10"
																}
															]
														},
														{
															"nativeSrc": "9752:15:10",
															"nodeType": "YulAssignment",
															"src": "9752:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "9762:5:10",
																"nodeType": "YulIdentifier",
																"src": "9762:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9752:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9752:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9543:230:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9590:9:10",
														"nodeType": "YulTypedName",
														"src": "9590:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9601:7:10",
														"nodeType": "YulTypedName",
														"src": "9601:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9613:6:10",
														"nodeType": "YulTypedName",
														"src": "9613:6:10",
														"type": ""
													}
												],
												"src": "9543:230:10"
											},
											{
												"body": {
													"nativeSrc": "9952:171:10",
													"nodeType": "YulBlock",
													"src": "9952:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9969:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9969:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9980:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9980:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9962:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9962:6:10"
																},
																"nativeSrc": "9962:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9962:21:10"
															},
															"nativeSrc": "9962:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9962:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10003:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10003:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10014:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10014:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9999:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9999:3:10"
																		},
																		"nativeSrc": "9999:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9999:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10019:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10019:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9992:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9992:6:10"
																},
																"nativeSrc": "9992:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9992:30:10"
															},
															"nativeSrc": "9992:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9992:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10042:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10042:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10053:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10053:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10038:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10038:3:10"
																		},
																		"nativeSrc": "10038:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10038:18:10"
																	},
																	{
																		"hexValue": "49434f20616c72656164792066696e616c697a6564",
																		"kind": "string",
																		"nativeSrc": "10058:23:10",
																		"nodeType": "YulLiteral",
																		"src": "10058:23:10",
																		"type": "",
																		"value": "ICO already finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10031:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10031:6:10"
																},
																"nativeSrc": "10031:51:10",
																"nodeType": "YulFunctionCall",
																"src": "10031:51:10"
															},
															"nativeSrc": "10031:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "10031:51:10"
														},
														{
															"nativeSrc": "10091:26:10",
															"nodeType": "YulAssignment",
															"src": "10091:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10103:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10103:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10114:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10114:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10099:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10099:3:10"
																},
																"nativeSrc": "10099:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10099:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10091:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10091:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9778:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9929:9:10",
														"nodeType": "YulTypedName",
														"src": "9929:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9943:4:10",
														"nodeType": "YulTypedName",
														"src": "9943:4:10",
														"type": ""
													}
												],
												"src": "9778:345:10"
											},
											{
												"body": {
													"nativeSrc": "10302:246:10",
													"nodeType": "YulBlock",
													"src": "10302:246:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10319:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10319:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10330:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10330:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10312:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10312:6:10"
																},
																"nativeSrc": "10312:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10312:21:10"
															},
															"nativeSrc": "10312:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "10312:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10353:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10353:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10364:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10364:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10349:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10349:3:10"
																		},
																		"nativeSrc": "10349:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10349:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10369:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:10",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10342:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10342:6:10"
																},
																"nativeSrc": "10342:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10342:30:10"
															},
															"nativeSrc": "10342:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10342:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10392:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10392:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10403:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10403:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10388:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10388:3:10"
																		},
																		"nativeSrc": "10388:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10388:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f742066696e616c697a653a20536f667420636170206e6f74207265",
																		"kind": "string",
																		"nativeSrc": "10408:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10408:34:10",
																		"type": "",
																		"value": "Cannot finalize: Soft cap not re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10381:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10381:6:10"
																},
																"nativeSrc": "10381:62:10",
																"nodeType": "YulFunctionCall",
																"src": "10381:62:10"
															},
															"nativeSrc": "10381:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "10381:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10463:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10463:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10474:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10474:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10459:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10459:3:10"
																		},
																		"nativeSrc": "10459:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10459:18:10"
																	},
																	{
																		"hexValue": "6163686564206f722073616c65206973206f6e676f696e67",
																		"kind": "string",
																		"nativeSrc": "10479:26:10",
																		"nodeType": "YulLiteral",
																		"src": "10479:26:10",
																		"type": "",
																		"value": "ached or sale is ongoing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10452:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10452:6:10"
																},
																"nativeSrc": "10452:54:10",
																"nodeType": "YulFunctionCall",
																"src": "10452:54:10"
															},
															"nativeSrc": "10452:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "10452:54:10"
														},
														{
															"nativeSrc": "10515:27:10",
															"nodeType": "YulAssignment",
															"src": "10515:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10527:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10527:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10538:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10538:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:10"
																},
																"nativeSrc": "10523:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10523:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10515:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10515:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10128:420:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10279:9:10",
														"nodeType": "YulTypedName",
														"src": "10279:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10293:4:10",
														"nodeType": "YulTypedName",
														"src": "10293:4:10",
														"type": ""
													}
												],
												"src": "10128:420:10"
											},
											{
												"body": {
													"nativeSrc": "10727:234:10",
													"nodeType": "YulBlock",
													"src": "10727:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10744:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10744:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10755:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10755:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10737:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:10"
																},
																"nativeSrc": "10737:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10737:21:10"
															},
															"nativeSrc": "10737:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "10737:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10778:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10778:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10789:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10789:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10774:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10774:3:10"
																		},
																		"nativeSrc": "10774:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10774:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10794:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10794:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10767:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10767:6:10"
																},
																"nativeSrc": "10767:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10767:30:10"
															},
															"nativeSrc": "10767:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10767:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10817:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10817:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10828:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10828:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10813:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10813:3:10"
																		},
																		"nativeSrc": "10813:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10813:18:10"
																	},
																	{
																		"hexValue": "53746172742074696d65206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nativeSrc": "10833:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10833:34:10",
																		"type": "",
																		"value": "Start time must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10806:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10806:6:10"
																},
																"nativeSrc": "10806:62:10",
																"nodeType": "YulFunctionCall",
																"src": "10806:62:10"
															},
															"nativeSrc": "10806:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "10806:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10888:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10888:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10899:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10899:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10884:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10884:3:10"
																		},
																		"nativeSrc": "10884:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10884:18:10"
																	},
																	{
																		"hexValue": "63757272656e742074696d65",
																		"kind": "string",
																		"nativeSrc": "10904:14:10",
																		"nodeType": "YulLiteral",
																		"src": "10904:14:10",
																		"type": "",
																		"value": "current time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10877:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10877:6:10"
																},
																"nativeSrc": "10877:42:10",
																"nodeType": "YulFunctionCall",
																"src": "10877:42:10"
															},
															"nativeSrc": "10877:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "10877:42:10"
														},
														{
															"nativeSrc": "10928:27:10",
															"nodeType": "YulAssignment",
															"src": "10928:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10940:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10940:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10951:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10951:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10936:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10936:3:10"
																},
																"nativeSrc": "10936:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10936:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10928:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10928:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10553:408:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10704:9:10",
														"nodeType": "YulTypedName",
														"src": "10704:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10718:4:10",
														"nodeType": "YulTypedName",
														"src": "10718:4:10",
														"type": ""
													}
												],
												"src": "10553:408:10"
											},
											{
												"body": {
													"nativeSrc": "11140:230:10",
													"nodeType": "YulBlock",
													"src": "11140:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11157:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11157:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11168:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11168:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:10"
																},
																"nativeSrc": "11150:21:10",
																"nodeType": "YulFunctionCall",
																"src": "11150:21:10"
															},
															"nativeSrc": "11150:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "11150:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11191:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11191:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11202:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11202:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11187:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11187:3:10"
																		},
																		"nativeSrc": "11187:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11187:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11207:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11207:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11180:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11180:6:10"
																},
																"nativeSrc": "11180:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11180:30:10"
															},
															"nativeSrc": "11180:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "11180:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11230:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11230:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11241:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11241:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11226:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11226:3:10"
																		},
																		"nativeSrc": "11226:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11226:18:10"
																	},
																	{
																		"hexValue": "456e642074696d65206d7573742062652067726561746572207468616e207374",
																		"kind": "string",
																		"nativeSrc": "11246:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11246:34:10",
																		"type": "",
																		"value": "End time must be greater than st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11219:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11219:6:10"
																},
																"nativeSrc": "11219:62:10",
																"nodeType": "YulFunctionCall",
																"src": "11219:62:10"
															},
															"nativeSrc": "11219:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "11219:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11301:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11301:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11312:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11312:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11297:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11297:3:10"
																		},
																		"nativeSrc": "11297:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11297:18:10"
																	},
																	{
																		"hexValue": "6172742074696d65",
																		"kind": "string",
																		"nativeSrc": "11317:10:10",
																		"nodeType": "YulLiteral",
																		"src": "11317:10:10",
																		"type": "",
																		"value": "art time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11290:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11290:6:10"
																},
																"nativeSrc": "11290:38:10",
																"nodeType": "YulFunctionCall",
																"src": "11290:38:10"
															},
															"nativeSrc": "11290:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "11290:38:10"
														},
														{
															"nativeSrc": "11337:27:10",
															"nodeType": "YulAssignment",
															"src": "11337:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11349:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11349:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11360:3:10",
																		"nodeType": "YulLiteral",
																		"src": "11360:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11345:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11345:3:10"
																},
																"nativeSrc": "11345:19:10",
																"nodeType": "YulFunctionCall",
																"src": "11345:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11337:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11337:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10966:404:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11117:9:10",
														"nodeType": "YulTypedName",
														"src": "11117:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11131:4:10",
														"nodeType": "YulTypedName",
														"src": "11131:4:10",
														"type": ""
													}
												],
												"src": "10966:404:10"
											},
											{
												"body": {
													"nativeSrc": "11549:234:10",
													"nodeType": "YulBlock",
													"src": "11549:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11566:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11566:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11577:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11577:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11559:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11559:6:10"
																},
																"nativeSrc": "11559:21:10",
																"nodeType": "YulFunctionCall",
																"src": "11559:21:10"
															},
															"nativeSrc": "11559:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "11559:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11600:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11600:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11611:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11611:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11596:3:10"
																		},
																		"nativeSrc": "11596:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11596:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11616:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11616:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11589:6:10"
																},
																"nativeSrc": "11589:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11589:30:10"
															},
															"nativeSrc": "11589:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "11589:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11639:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11639:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11650:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11650:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11635:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11635:3:10"
																		},
																		"nativeSrc": "11635:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11635:18:10"
																	},
																	{
																		"hexValue": "4e65772073616c65206d75737420737461727420616674657220746865206c61",
																		"kind": "string",
																		"nativeSrc": "11655:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11655:34:10",
																		"type": "",
																		"value": "New sale must start after the la"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11628:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11628:6:10"
																},
																"nativeSrc": "11628:62:10",
																"nodeType": "YulFunctionCall",
																"src": "11628:62:10"
															},
															"nativeSrc": "11628:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "11628:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11710:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11710:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11721:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11721:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11706:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11706:3:10"
																		},
																		"nativeSrc": "11706:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11706:18:10"
																	},
																	{
																		"hexValue": "73742073616c6520656e6473",
																		"kind": "string",
																		"nativeSrc": "11726:14:10",
																		"nodeType": "YulLiteral",
																		"src": "11726:14:10",
																		"type": "",
																		"value": "st sale ends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11699:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11699:6:10"
																},
																"nativeSrc": "11699:42:10",
																"nodeType": "YulFunctionCall",
																"src": "11699:42:10"
															},
															"nativeSrc": "11699:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "11699:42:10"
														},
														{
															"nativeSrc": "11750:27:10",
															"nodeType": "YulAssignment",
															"src": "11750:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11762:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11762:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11773:3:10",
																		"nodeType": "YulLiteral",
																		"src": "11773:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11758:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:10"
																},
																"nativeSrc": "11758:19:10",
																"nodeType": "YulFunctionCall",
																"src": "11758:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11750:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11750:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11375:408:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11526:9:10",
														"nodeType": "YulTypedName",
														"src": "11526:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11540:4:10",
														"nodeType": "YulTypedName",
														"src": "11540:4:10",
														"type": ""
													}
												],
												"src": "11375:408:10"
											},
											{
												"body": {
													"nativeSrc": "11835:88:10",
													"nodeType": "YulBlock",
													"src": "11835:88:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11866:22:10",
																"nodeType": "YulBlock",
																"src": "11866:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11868:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11868:16:10"
																			},
																			"nativeSrc": "11868:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11868:18:10"
																		},
																		"nativeSrc": "11868:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11868:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11851:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11851:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11862:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11862:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11858:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11858:3:10"
																		},
																		"nativeSrc": "11858:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11858:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11848:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11848:2:10"
																},
																"nativeSrc": "11848:17:10",
																"nodeType": "YulFunctionCall",
																"src": "11848:17:10"
															},
															"nativeSrc": "11845:43:10",
															"nodeType": "YulIf",
															"src": "11845:43:10"
														},
														{
															"nativeSrc": "11897:20:10",
															"nodeType": "YulAssignment",
															"src": "11897:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11908:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11908:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11915:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11915:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11904:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11904:3:10"
																},
																"nativeSrc": "11904:13:10",
																"nodeType": "YulFunctionCall",
																"src": "11904:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11897:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11788:135:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11817:5:10",
														"nodeType": "YulTypedName",
														"src": "11817:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11827:3:10",
														"nodeType": "YulTypedName",
														"src": "11827:3:10",
														"type": ""
													}
												],
												"src": "11788:135:10"
											},
											{
												"body": {
													"nativeSrc": "12085:162:10",
													"nodeType": "YulBlock",
													"src": "12085:162:10",
													"statements": [
														{
															"nativeSrc": "12095:26:10",
															"nodeType": "YulAssignment",
															"src": "12095:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12107:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12107:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12118:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12118:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12103:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12103:3:10"
																},
																"nativeSrc": "12103:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12103:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12095:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12095:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12137:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12148:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12148:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12130:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12130:6:10"
																},
																"nativeSrc": "12130:25:10",
																"nodeType": "YulFunctionCall",
																"src": "12130:25:10"
															},
															"nativeSrc": "12130:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "12130:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12175:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12175:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12186:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12186:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12171:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12171:3:10"
																		},
																		"nativeSrc": "12171:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12171:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12191:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12191:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12164:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12164:6:10"
																},
																"nativeSrc": "12164:34:10",
																"nodeType": "YulFunctionCall",
																"src": "12164:34:10"
															},
															"nativeSrc": "12164:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "12164:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12218:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12218:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12229:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12229:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12214:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12214:3:10"
																		},
																		"nativeSrc": "12214:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12214:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12234:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12234:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12207:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12207:6:10"
																},
																"nativeSrc": "12207:34:10",
																"nodeType": "YulFunctionCall",
																"src": "12207:34:10"
															},
															"nativeSrc": "12207:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "12207:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11928:319:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12038:9:10",
														"nodeType": "YulTypedName",
														"src": "12038:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12049:6:10",
														"nodeType": "YulTypedName",
														"src": "12049:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12057:6:10",
														"nodeType": "YulTypedName",
														"src": "12057:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12065:6:10",
														"nodeType": "YulTypedName",
														"src": "12065:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12076:4:10",
														"nodeType": "YulTypedName",
														"src": "12076:4:10",
														"type": ""
													}
												],
												"src": "11928:319:10"
											},
											{
												"body": {
													"nativeSrc": "12426:162:10",
													"nodeType": "YulBlock",
													"src": "12426:162:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12443:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12443:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12454:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12454:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12436:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:10"
																},
																"nativeSrc": "12436:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12436:21:10"
															},
															"nativeSrc": "12436:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "12436:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12477:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12488:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12488:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12473:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:10"
																		},
																		"nativeSrc": "12473:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12473:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12493:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12493:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12466:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:10"
																},
																"nativeSrc": "12466:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12466:30:10"
															},
															"nativeSrc": "12466:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "12466:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12516:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12516:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12527:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12527:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12512:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12512:3:10"
																		},
																		"nativeSrc": "12512:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12512:18:10"
																	},
																	{
																		"hexValue": "53616c65206f6e676f696e67",
																		"kind": "string",
																		"nativeSrc": "12532:14:10",
																		"nodeType": "YulLiteral",
																		"src": "12532:14:10",
																		"type": "",
																		"value": "Sale ongoing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12505:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12505:6:10"
																},
																"nativeSrc": "12505:42:10",
																"nodeType": "YulFunctionCall",
																"src": "12505:42:10"
															},
															"nativeSrc": "12505:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "12505:42:10"
														},
														{
															"nativeSrc": "12556:26:10",
															"nodeType": "YulAssignment",
															"src": "12556:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12568:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12568:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12579:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12579:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12564:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12564:3:10"
																},
																"nativeSrc": "12564:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12564:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12556:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12556:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12252:336:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12403:9:10",
														"nodeType": "YulTypedName",
														"src": "12403:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12417:4:10",
														"nodeType": "YulTypedName",
														"src": "12417:4:10",
														"type": ""
													}
												],
												"src": "12252:336:10"
											},
											{
												"body": {
													"nativeSrc": "12767:166:10",
													"nodeType": "YulBlock",
													"src": "12767:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12784:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12784:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12795:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12795:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12777:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:10"
																},
																"nativeSrc": "12777:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12777:21:10"
															},
															"nativeSrc": "12777:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "12777:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12818:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12818:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12829:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12829:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12814:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12814:3:10"
																		},
																		"nativeSrc": "12814:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12814:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12834:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12834:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12807:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12807:6:10"
																},
																"nativeSrc": "12807:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12807:30:10"
															},
															"nativeSrc": "12807:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "12807:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12857:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12857:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12868:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12868:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12853:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12853:3:10"
																		},
																		"nativeSrc": "12853:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12853:18:10"
																	},
																	{
																		"hexValue": "536f6674206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "12873:18:10",
																		"nodeType": "YulLiteral",
																		"src": "12873:18:10",
																		"type": "",
																		"value": "Soft cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12846:6:10"
																},
																"nativeSrc": "12846:46:10",
																"nodeType": "YulFunctionCall",
																"src": "12846:46:10"
															},
															"nativeSrc": "12846:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "12846:46:10"
														},
														{
															"nativeSrc": "12901:26:10",
															"nodeType": "YulAssignment",
															"src": "12901:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12913:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12913:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12924:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12924:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12909:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12909:3:10"
																},
																"nativeSrc": "12909:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12909:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12901:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12901:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12593:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12744:9:10",
														"nodeType": "YulTypedName",
														"src": "12744:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12758:4:10",
														"nodeType": "YulTypedName",
														"src": "12758:4:10",
														"type": ""
													}
												],
												"src": "12593:340:10"
											},
											{
												"body": {
													"nativeSrc": "12970:95:10",
													"nodeType": "YulBlock",
													"src": "12970:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12987:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12987:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12994:3:10",
																				"nodeType": "YulLiteral",
																				"src": "12994:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12999:10:10",
																				"nodeType": "YulLiteral",
																				"src": "12999:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12990:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12990:3:10"
																		},
																		"nativeSrc": "12990:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12990:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12980:6:10"
																},
																"nativeSrc": "12980:31:10",
																"nodeType": "YulFunctionCall",
																"src": "12980:31:10"
															},
															"nativeSrc": "12980:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "12980:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13027:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13027:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13030:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13030:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13020:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13020:6:10"
																},
																"nativeSrc": "13020:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13020:15:10"
															},
															"nativeSrc": "13020:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13020:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13051:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13051:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13054:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13054:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13044:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13044:6:10"
																},
																"nativeSrc": "13044:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13044:15:10"
															},
															"nativeSrc": "13044:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13044:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12938:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12938:127:10"
											},
											{
												"body": {
													"nativeSrc": "13261:14:10",
													"nodeType": "YulBlock",
													"src": "13261:14:10",
													"statements": [
														{
															"nativeSrc": "13263:10:10",
															"nodeType": "YulAssignment",
															"src": "13263:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "13270:3:10",
																"nodeType": "YulIdentifier",
																"src": "13270:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13263:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13263:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13070:205:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13245:3:10",
														"nodeType": "YulTypedName",
														"src": "13245:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13253:3:10",
														"nodeType": "YulTypedName",
														"src": "13253:3:10",
														"type": ""
													}
												],
												"src": "13070:205:10"
											},
											{
												"body": {
													"nativeSrc": "13454:167:10",
													"nodeType": "YulBlock",
													"src": "13454:167:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13471:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13471:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13482:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13464:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13464:6:10"
																},
																"nativeSrc": "13464:21:10",
																"nodeType": "YulFunctionCall",
																"src": "13464:21:10"
															},
															"nativeSrc": "13464:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "13464:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13505:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13516:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13516:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:10"
																		},
																		"nativeSrc": "13501:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13501:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13521:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13521:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13494:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:10"
																},
																"nativeSrc": "13494:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13494:30:10"
															},
															"nativeSrc": "13494:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "13494:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13544:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13544:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13555:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13555:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13540:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13540:3:10"
																		},
																		"nativeSrc": "13540:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13540:18:10"
																	},
																	{
																		"hexValue": "424e4220726566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "13560:19:10",
																		"nodeType": "YulLiteral",
																		"src": "13560:19:10",
																		"type": "",
																		"value": "BNB refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13533:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13533:6:10"
																},
																"nativeSrc": "13533:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13533:47:10"
															},
															"nativeSrc": "13533:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13533:47:10"
														},
														{
															"nativeSrc": "13589:26:10",
															"nodeType": "YulAssignment",
															"src": "13589:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13601:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13601:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13612:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13612:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13597:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13597:3:10"
																},
																"nativeSrc": "13597:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13597:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13589:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13589:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13280:341:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13431:9:10",
														"nodeType": "YulTypedName",
														"src": "13431:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13445:4:10",
														"nodeType": "YulTypedName",
														"src": "13445:4:10",
														"type": ""
													}
												],
												"src": "13280:341:10"
											},
											{
												"body": {
													"nativeSrc": "13755:145:10",
													"nodeType": "YulBlock",
													"src": "13755:145:10",
													"statements": [
														{
															"nativeSrc": "13765:26:10",
															"nodeType": "YulAssignment",
															"src": "13765:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13777:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13777:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13788:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13773:3:10"
																},
																"nativeSrc": "13773:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13773:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13765:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13765:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13807:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13807:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13822:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13822:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13838:3:10",
																								"nodeType": "YulLiteral",
																								"src": "13838:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13843:1:10",
																								"nodeType": "YulLiteral",
																								"src": "13843:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13834:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "13834:3:10"
																						},
																						"nativeSrc": "13834:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "13834:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13847:1:10",
																						"nodeType": "YulLiteral",
																						"src": "13847:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13830:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13830:3:10"
																				},
																				"nativeSrc": "13830:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13830:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13818:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13818:3:10"
																		},
																		"nativeSrc": "13818:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13818:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13800:6:10"
																},
																"nativeSrc": "13800:51:10",
																"nodeType": "YulFunctionCall",
																"src": "13800:51:10"
															},
															"nativeSrc": "13800:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "13800:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13871:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13871:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13882:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13882:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13867:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13867:3:10"
																		},
																		"nativeSrc": "13867:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13867:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13887:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13887:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13860:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13860:6:10"
																},
																"nativeSrc": "13860:34:10",
																"nodeType": "YulFunctionCall",
																"src": "13860:34:10"
															},
															"nativeSrc": "13860:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "13860:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13626:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13716:9:10",
														"nodeType": "YulTypedName",
														"src": "13716:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13727:6:10",
														"nodeType": "YulTypedName",
														"src": "13727:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13735:6:10",
														"nodeType": "YulTypedName",
														"src": "13735:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13746:4:10",
														"nodeType": "YulTypedName",
														"src": "13746:4:10",
														"type": ""
													}
												],
												"src": "13626:274:10"
											},
											{
												"body": {
													"nativeSrc": "13983:199:10",
													"nodeType": "YulBlock",
													"src": "13983:199:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "14029:16:10",
																"nodeType": "YulBlock",
																"src": "14029:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14038:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14038:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14041:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14041:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14031:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14031:6:10"
																			},
																			"nativeSrc": "14031:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14031:12:10"
																		},
																		"nativeSrc": "14031:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14031:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14004:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14004:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14013:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14013:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14000:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14000:3:10"
																		},
																		"nativeSrc": "14000:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14000:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14025:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14025:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13996:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13996:3:10"
																},
																"nativeSrc": "13996:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13996:32:10"
															},
															"nativeSrc": "13993:52:10",
															"nodeType": "YulIf",
															"src": "13993:52:10"
														},
														{
															"nativeSrc": "14054:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14054:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14073:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14073:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14067:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14067:5:10"
																},
																"nativeSrc": "14067:16:10",
																"nodeType": "YulFunctionCall",
																"src": "14067:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "14058:5:10",
																	"nodeType": "YulTypedName",
																	"src": "14058:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14136:16:10",
																"nodeType": "YulBlock",
																"src": "14136:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14145:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14145:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14148:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14148:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14138:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14138:6:10"
																			},
																			"nativeSrc": "14138:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14138:12:10"
																		},
																		"nativeSrc": "14138:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14138:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14105:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "14105:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "14126:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "14126:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "14119:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "14119:6:10"
																						},
																						"nativeSrc": "14119:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "14119:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14112:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14112:6:10"
																				},
																				"nativeSrc": "14112:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14112:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14102:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14102:2:10"
																		},
																		"nativeSrc": "14102:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14102:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14095:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14095:6:10"
																},
																"nativeSrc": "14095:40:10",
																"nodeType": "YulFunctionCall",
																"src": "14095:40:10"
															},
															"nativeSrc": "14092:60:10",
															"nodeType": "YulIf",
															"src": "14092:60:10"
														},
														{
															"nativeSrc": "14161:15:10",
															"nodeType": "YulAssignment",
															"src": "14161:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "14171:5:10",
																"nodeType": "YulIdentifier",
																"src": "14171:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "14161:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14161:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13905:277:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13949:9:10",
														"nodeType": "YulTypedName",
														"src": "13949:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13960:7:10",
														"nodeType": "YulTypedName",
														"src": "13960:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13972:6:10",
														"nodeType": "YulTypedName",
														"src": "13972:6:10",
														"type": ""
													}
												],
												"src": "13905:277:10"
											},
											{
												"body": {
													"nativeSrc": "14361:174:10",
													"nodeType": "YulBlock",
													"src": "14361:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14378:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14378:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14389:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14389:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14371:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14371:6:10"
																},
																"nativeSrc": "14371:21:10",
																"nodeType": "YulFunctionCall",
																"src": "14371:21:10"
															},
															"nativeSrc": "14371:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "14371:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14412:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14412:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14423:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14423:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14408:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14408:3:10"
																		},
																		"nativeSrc": "14408:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14408:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14428:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14401:6:10"
																},
																"nativeSrc": "14401:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14401:30:10"
															},
															"nativeSrc": "14401:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "14401:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14451:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14451:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14462:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14462:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14447:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14447:3:10"
																		},
																		"nativeSrc": "14447:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14447:18:10"
																	},
																	{
																		"hexValue": "537461626c65636f696e20726566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14467:26:10",
																		"nodeType": "YulLiteral",
																		"src": "14467:26:10",
																		"type": "",
																		"value": "Stablecoin refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14440:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14440:6:10"
																},
																"nativeSrc": "14440:54:10",
																"nodeType": "YulFunctionCall",
																"src": "14440:54:10"
															},
															"nativeSrc": "14440:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "14440:54:10"
														},
														{
															"nativeSrc": "14503:26:10",
															"nodeType": "YulAssignment",
															"src": "14503:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14515:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14515:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14526:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14526:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14511:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14511:3:10"
																},
																"nativeSrc": "14511:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14511:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14503:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14503:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14187:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14338:9:10",
														"nodeType": "YulTypedName",
														"src": "14338:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14352:4:10",
														"nodeType": "YulTypedName",
														"src": "14352:4:10",
														"type": ""
													}
												],
												"src": "14187:348:10"
											},
											{
												"body": {
													"nativeSrc": "14714:227:10",
													"nodeType": "YulBlock",
													"src": "14714:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14731:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14731:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14742:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14742:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14724:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14724:6:10"
																},
																"nativeSrc": "14724:21:10",
																"nodeType": "YulFunctionCall",
																"src": "14724:21:10"
															},
															"nativeSrc": "14724:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "14724:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14765:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14765:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14776:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14776:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14761:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14761:3:10"
																		},
																		"nativeSrc": "14761:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14761:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14781:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14781:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14754:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14754:6:10"
																},
																"nativeSrc": "14754:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14754:30:10"
															},
															"nativeSrc": "14754:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "14754:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14804:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14804:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14815:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14815:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14800:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14800:3:10"
																		},
																		"nativeSrc": "14800:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14800:18:10"
																	},
																	{
																		"hexValue": "556e737570706f72746564207061796d656e74206d6574686f6420666f722072",
																		"kind": "string",
																		"nativeSrc": "14820:34:10",
																		"nodeType": "YulLiteral",
																		"src": "14820:34:10",
																		"type": "",
																		"value": "Unsupported payment method for r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14793:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14793:6:10"
																},
																"nativeSrc": "14793:62:10",
																"nodeType": "YulFunctionCall",
																"src": "14793:62:10"
															},
															"nativeSrc": "14793:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "14793:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14875:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14875:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14886:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14886:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14871:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14871:3:10"
																		},
																		"nativeSrc": "14871:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14871:18:10"
																	},
																	{
																		"hexValue": "6566756e64",
																		"kind": "string",
																		"nativeSrc": "14891:7:10",
																		"nodeType": "YulLiteral",
																		"src": "14891:7:10",
																		"type": "",
																		"value": "efund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14864:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14864:6:10"
																},
																"nativeSrc": "14864:35:10",
																"nodeType": "YulFunctionCall",
																"src": "14864:35:10"
															},
															"nativeSrc": "14864:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "14864:35:10"
														},
														{
															"nativeSrc": "14908:27:10",
															"nodeType": "YulAssignment",
															"src": "14908:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14920:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14920:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14931:3:10",
																		"nodeType": "YulLiteral",
																		"src": "14931:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14916:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14916:3:10"
																},
																"nativeSrc": "14916:19:10",
																"nodeType": "YulFunctionCall",
																"src": "14916:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14908:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14908:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14540:401:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14691:9:10",
														"nodeType": "YulTypedName",
														"src": "14691:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14705:4:10",
														"nodeType": "YulTypedName",
														"src": "14705:4:10",
														"type": ""
													}
												],
												"src": "14540:401:10"
											},
											{
												"body": {
													"nativeSrc": "15091:142:10",
													"nodeType": "YulBlock",
													"src": "15091:142:10",
													"statements": [
														{
															"nativeSrc": "15101:26:10",
															"nodeType": "YulAssignment",
															"src": "15101:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15113:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15113:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15124:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15124:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15109:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15109:3:10"
																},
																"nativeSrc": "15109:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15109:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15101:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15101:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15143:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15143:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "15154:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15154:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15136:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15136:6:10"
																},
																"nativeSrc": "15136:25:10",
																"nodeType": "YulFunctionCall",
																"src": "15136:25:10"
															},
															"nativeSrc": "15136:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "15136:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15200:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15200:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15212:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15212:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15223:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15223:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15208:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15208:3:10"
																		},
																		"nativeSrc": "15208:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15208:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "15170:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "15170:29:10"
																},
																"nativeSrc": "15170:57:10",
																"nodeType": "YulFunctionCall",
																"src": "15170:57:10"
															},
															"nativeSrc": "15170:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "15170:57:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1108__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "14946:287:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15052:9:10",
														"nodeType": "YulTypedName",
														"src": "15052:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15063:6:10",
														"nodeType": "YulTypedName",
														"src": "15063:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15071:6:10",
														"nodeType": "YulTypedName",
														"src": "15071:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15082:4:10",
														"nodeType": "YulTypedName",
														"src": "15082:4:10",
														"type": ""
													}
												],
												"src": "14946:287:10"
											},
											{
												"body": {
													"nativeSrc": "15412:175:10",
													"nodeType": "YulBlock",
													"src": "15412:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15429:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15429:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15440:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15440:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15422:6:10"
																},
																"nativeSrc": "15422:21:10",
																"nodeType": "YulFunctionCall",
																"src": "15422:21:10"
															},
															"nativeSrc": "15422:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "15422:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15463:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15463:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15474:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15474:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15459:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15459:3:10"
																		},
																		"nativeSrc": "15459:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15459:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15479:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15479:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15452:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15452:6:10"
																},
																"nativeSrc": "15452:30:10",
																"nodeType": "YulFunctionCall",
																"src": "15452:30:10"
															},
															"nativeSrc": "15452:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "15452:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15502:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15502:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15513:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15513:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15498:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15498:3:10"
																		},
																		"nativeSrc": "15498:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15498:18:10"
																	},
																	{
																		"hexValue": "41697264726f7020616c726561647920636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "15518:27:10",
																		"nodeType": "YulLiteral",
																		"src": "15518:27:10",
																		"type": "",
																		"value": "Airdrop already completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15491:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15491:6:10"
																},
																"nativeSrc": "15491:55:10",
																"nodeType": "YulFunctionCall",
																"src": "15491:55:10"
															},
															"nativeSrc": "15491:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "15491:55:10"
														},
														{
															"nativeSrc": "15555:26:10",
															"nodeType": "YulAssignment",
															"src": "15555:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15567:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15567:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15578:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15578:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15563:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15563:3:10"
																},
																"nativeSrc": "15563:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15563:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15555:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15555:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15238:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15389:9:10",
														"nodeType": "YulTypedName",
														"src": "15389:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15403:4:10",
														"nodeType": "YulTypedName",
														"src": "15403:4:10",
														"type": ""
													}
												],
												"src": "15238:349:10"
											},
											{
												"body": {
													"nativeSrc": "15749:214:10",
													"nodeType": "YulBlock",
													"src": "15749:214:10",
													"statements": [
														{
															"nativeSrc": "15759:26:10",
															"nodeType": "YulAssignment",
															"src": "15759:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15771:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15771:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15782:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15782:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15767:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15767:3:10"
																},
																"nativeSrc": "15767:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15767:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15759:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15759:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15801:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15801:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15816:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15816:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15832:3:10",
																								"nodeType": "YulLiteral",
																								"src": "15832:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15837:1:10",
																								"nodeType": "YulLiteral",
																								"src": "15837:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15828:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "15828:3:10"
																						},
																						"nativeSrc": "15828:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "15828:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15841:1:10",
																						"nodeType": "YulLiteral",
																						"src": "15841:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15824:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "15824:3:10"
																				},
																				"nativeSrc": "15824:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15824:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15812:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15812:3:10"
																		},
																		"nativeSrc": "15812:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15812:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15794:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15794:6:10"
																},
																"nativeSrc": "15794:51:10",
																"nodeType": "YulFunctionCall",
																"src": "15794:51:10"
															},
															"nativeSrc": "15794:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "15794:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15865:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15865:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15876:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15876:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15861:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15861:3:10"
																		},
																		"nativeSrc": "15861:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15861:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "15885:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15885:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15901:3:10",
																								"nodeType": "YulLiteral",
																								"src": "15901:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15906:1:10",
																								"nodeType": "YulLiteral",
																								"src": "15906:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15897:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "15897:3:10"
																						},
																						"nativeSrc": "15897:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "15897:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15910:1:10",
																						"nodeType": "YulLiteral",
																						"src": "15910:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15893:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "15893:3:10"
																				},
																				"nativeSrc": "15893:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15893:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15881:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15881:3:10"
																		},
																		"nativeSrc": "15881:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15881:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15854:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15854:6:10"
																},
																"nativeSrc": "15854:60:10",
																"nodeType": "YulFunctionCall",
																"src": "15854:60:10"
															},
															"nativeSrc": "15854:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "15854:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15934:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15934:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15945:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15945:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15930:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15930:3:10"
																		},
																		"nativeSrc": "15930:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15930:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "15950:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15950:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15923:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15923:6:10"
																},
																"nativeSrc": "15923:34:10",
																"nodeType": "YulFunctionCall",
																"src": "15923:34:10"
															},
															"nativeSrc": "15923:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "15923:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15592:371:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15702:9:10",
														"nodeType": "YulTypedName",
														"src": "15702:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15713:6:10",
														"nodeType": "YulTypedName",
														"src": "15713:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15721:6:10",
														"nodeType": "YulTypedName",
														"src": "15721:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15729:6:10",
														"nodeType": "YulTypedName",
														"src": "15729:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15740:4:10",
														"nodeType": "YulTypedName",
														"src": "15740:4:10",
														"type": ""
													}
												],
												"src": "15592:371:10"
											},
											{
												"body": {
													"nativeSrc": "16142:171:10",
													"nodeType": "YulBlock",
													"src": "16142:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16159:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16159:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16170:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16170:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16152:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16152:6:10"
																},
																"nativeSrc": "16152:21:10",
																"nodeType": "YulFunctionCall",
																"src": "16152:21:10"
															},
															"nativeSrc": "16152:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "16152:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16193:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16193:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16204:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16204:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16189:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16189:3:10"
																		},
																		"nativeSrc": "16189:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16189:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16209:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16209:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16182:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16182:6:10"
																},
																"nativeSrc": "16182:30:10",
																"nodeType": "YulFunctionCall",
																"src": "16182:30:10"
															},
															"nativeSrc": "16182:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "16182:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16232:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16232:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16243:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16243:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16228:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16228:3:10"
																		},
																		"nativeSrc": "16228:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16228:18:10"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16248:23:10",
																		"nodeType": "YulLiteral",
																		"src": "16248:23:10",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16221:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16221:6:10"
																},
																"nativeSrc": "16221:51:10",
																"nodeType": "YulFunctionCall",
																"src": "16221:51:10"
															},
															"nativeSrc": "16221:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "16221:51:10"
														},
														{
															"nativeSrc": "16281:26:10",
															"nodeType": "YulAssignment",
															"src": "16281:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16293:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16293:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16304:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16304:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16289:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16289:3:10"
																},
																"nativeSrc": "16289:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16289:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16281:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16281:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15968:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16119:9:10",
														"nodeType": "YulTypedName",
														"src": "16119:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16133:4:10",
														"nodeType": "YulTypedName",
														"src": "16133:4:10",
														"type": ""
													}
												],
												"src": "15968:345:10"
											},
											{
												"body": {
													"nativeSrc": "16492:173:10",
													"nodeType": "YulBlock",
													"src": "16492:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16509:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16509:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16520:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16520:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16502:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16502:6:10"
																},
																"nativeSrc": "16502:21:10",
																"nodeType": "YulFunctionCall",
																"src": "16502:21:10"
															},
															"nativeSrc": "16502:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "16502:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16543:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16543:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16554:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16554:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16539:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16539:3:10"
																		},
																		"nativeSrc": "16539:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16539:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16559:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16559:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16532:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16532:6:10"
																},
																"nativeSrc": "16532:30:10",
																"nodeType": "YulFunctionCall",
																"src": "16532:30:10"
															},
															"nativeSrc": "16532:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "16532:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16582:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16582:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16593:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16593:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16578:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16578:3:10"
																		},
																		"nativeSrc": "16578:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16578:18:10"
																	},
																	{
																		"hexValue": "4f776e65722063616e6e6f742062757920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "16598:25:10",
																		"nodeType": "YulLiteral",
																		"src": "16598:25:10",
																		"type": "",
																		"value": "Owner cannot buy tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16571:6:10"
																},
																"nativeSrc": "16571:53:10",
																"nodeType": "YulFunctionCall",
																"src": "16571:53:10"
															},
															"nativeSrc": "16571:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "16571:53:10"
														},
														{
															"nativeSrc": "16633:26:10",
															"nodeType": "YulAssignment",
															"src": "16633:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16645:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16645:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16656:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16656:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16641:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16641:3:10"
																},
																"nativeSrc": "16641:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16641:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16633:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16633:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16318:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16469:9:10",
														"nodeType": "YulTypedName",
														"src": "16469:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16483:4:10",
														"nodeType": "YulTypedName",
														"src": "16483:4:10",
														"type": ""
													}
												],
												"src": "16318:347:10"
											},
											{
												"body": {
													"nativeSrc": "16844:156:10",
													"nodeType": "YulBlock",
													"src": "16844:156:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16861:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16861:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16872:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16872:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16854:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16854:6:10"
																},
																"nativeSrc": "16854:21:10",
																"nodeType": "YulFunctionCall",
																"src": "16854:21:10"
															},
															"nativeSrc": "16854:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "16854:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16895:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16895:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16906:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16906:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16891:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16891:3:10"
																		},
																		"nativeSrc": "16891:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16891:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16911:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16911:1:10",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16884:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16884:6:10"
																},
																"nativeSrc": "16884:29:10",
																"nodeType": "YulFunctionCall",
																"src": "16884:29:10"
															},
															"nativeSrc": "16884:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "16884:29:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16933:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16933:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16944:2:10",
																				"nodeType": "YulLiteral",
																				"src": "16944:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16929:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16929:3:10"
																		},
																		"nativeSrc": "16929:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16929:18:10"
																	},
																	{
																		"hexValue": "4e6f2073616c65",
																		"kind": "string",
																		"nativeSrc": "16949:9:10",
																		"nodeType": "YulLiteral",
																		"src": "16949:9:10",
																		"type": "",
																		"value": "No sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16922:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16922:6:10"
																},
																"nativeSrc": "16922:37:10",
																"nodeType": "YulFunctionCall",
																"src": "16922:37:10"
															},
															"nativeSrc": "16922:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "16922:37:10"
														},
														{
															"nativeSrc": "16968:26:10",
															"nodeType": "YulAssignment",
															"src": "16968:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16980:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16980:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16991:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16991:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16976:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16976:3:10"
																},
																"nativeSrc": "16976:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16976:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16968:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16968:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16670:330:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16821:9:10",
														"nodeType": "YulTypedName",
														"src": "16821:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16835:4:10",
														"nodeType": "YulTypedName",
														"src": "16835:4:10",
														"type": ""
													}
												],
												"src": "16670:330:10"
											},
											{
												"body": {
													"nativeSrc": "17179:172:10",
													"nodeType": "YulBlock",
													"src": "17179:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17196:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17196:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17207:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17207:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17189:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17189:6:10"
																},
																"nativeSrc": "17189:21:10",
																"nodeType": "YulFunctionCall",
																"src": "17189:21:10"
															},
															"nativeSrc": "17189:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "17189:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17230:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17230:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17241:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17241:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17226:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17226:3:10"
																		},
																		"nativeSrc": "17226:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17226:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17246:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17246:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17219:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17219:6:10"
																},
																"nativeSrc": "17219:30:10",
																"nodeType": "YulFunctionCall",
																"src": "17219:30:10"
															},
															"nativeSrc": "17219:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "17219:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17269:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17269:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17280:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17280:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17265:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17265:3:10"
																		},
																		"nativeSrc": "17265:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17265:18:10"
																	},
																	{
																		"hexValue": "53616c6520616c72656164792066696e616c697a6564",
																		"kind": "string",
																		"nativeSrc": "17285:24:10",
																		"nodeType": "YulLiteral",
																		"src": "17285:24:10",
																		"type": "",
																		"value": "Sale already finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17258:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17258:6:10"
																},
																"nativeSrc": "17258:52:10",
																"nodeType": "YulFunctionCall",
																"src": "17258:52:10"
															},
															"nativeSrc": "17258:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "17258:52:10"
														},
														{
															"nativeSrc": "17319:26:10",
															"nodeType": "YulAssignment",
															"src": "17319:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17331:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17331:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17342:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17342:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17327:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17327:3:10"
																},
																"nativeSrc": "17327:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17327:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17319:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17319:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17005:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17156:9:10",
														"nodeType": "YulTypedName",
														"src": "17156:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17170:4:10",
														"nodeType": "YulTypedName",
														"src": "17170:4:10",
														"type": ""
													}
												],
												"src": "17005:346:10"
											},
											{
												"body": {
													"nativeSrc": "17530:173:10",
													"nodeType": "YulBlock",
													"src": "17530:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17547:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17547:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17558:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17558:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17540:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17540:6:10"
																},
																"nativeSrc": "17540:21:10",
																"nodeType": "YulFunctionCall",
																"src": "17540:21:10"
															},
															"nativeSrc": "17540:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "17540:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17581:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17581:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17592:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17592:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17577:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17577:3:10"
																		},
																		"nativeSrc": "17577:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17577:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17597:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17570:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17570:6:10"
																},
																"nativeSrc": "17570:30:10",
																"nodeType": "YulFunctionCall",
																"src": "17570:30:10"
															},
															"nativeSrc": "17570:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "17570:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17620:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17620:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17631:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17631:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17616:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17616:3:10"
																		},
																		"nativeSrc": "17616:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17616:18:10"
																	},
																	{
																		"hexValue": "53656e6420612076616c696420424e4220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "17636:25:10",
																		"nodeType": "YulLiteral",
																		"src": "17636:25:10",
																		"type": "",
																		"value": "Send a valid BNB amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17609:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17609:6:10"
																},
																"nativeSrc": "17609:53:10",
																"nodeType": "YulFunctionCall",
																"src": "17609:53:10"
															},
															"nativeSrc": "17609:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "17609:53:10"
														},
														{
															"nativeSrc": "17671:26:10",
															"nodeType": "YulAssignment",
															"src": "17671:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17683:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17683:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17694:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17694:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17679:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17679:3:10"
																},
																"nativeSrc": "17679:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17679:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17671:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17671:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17356:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17507:9:10",
														"nodeType": "YulTypedName",
														"src": "17507:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17521:4:10",
														"nodeType": "YulTypedName",
														"src": "17521:4:10",
														"type": ""
													}
												],
												"src": "17356:347:10"
											},
											{
												"body": {
													"nativeSrc": "17756:77:10",
													"nodeType": "YulBlock",
													"src": "17756:77:10",
													"statements": [
														{
															"nativeSrc": "17766:16:10",
															"nodeType": "YulAssignment",
															"src": "17766:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17777:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17777:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17780:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17780:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17773:3:10"
																},
																"nativeSrc": "17773:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17773:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17766:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17766:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17805:22:10",
																"nodeType": "YulBlock",
																"src": "17805:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17807:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17807:16:10"
																			},
																			"nativeSrc": "17807:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17807:18:10"
																		},
																		"nativeSrc": "17807:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17807:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17797:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17797:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17800:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17800:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17794:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "17794:2:10"
																},
																"nativeSrc": "17794:10:10",
																"nodeType": "YulFunctionCall",
																"src": "17794:10:10"
															},
															"nativeSrc": "17791:36:10",
															"nodeType": "YulIf",
															"src": "17791:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17708:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17739:1:10",
														"nodeType": "YulTypedName",
														"src": "17739:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17742:1:10",
														"nodeType": "YulTypedName",
														"src": "17742:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17748:3:10",
														"nodeType": "YulTypedName",
														"src": "17748:3:10",
														"type": ""
													}
												],
												"src": "17708:125:10"
											},
											{
												"body": {
													"nativeSrc": "18012:181:10",
													"nodeType": "YulBlock",
													"src": "18012:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18029:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18029:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18040:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18040:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18022:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18022:6:10"
																},
																"nativeSrc": "18022:21:10",
																"nodeType": "YulFunctionCall",
																"src": "18022:21:10"
															},
															"nativeSrc": "18022:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "18022:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18063:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18063:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18074:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18074:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18059:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18059:3:10"
																		},
																		"nativeSrc": "18059:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18059:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18079:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18079:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18052:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18052:6:10"
																},
																"nativeSrc": "18052:30:10",
																"nodeType": "YulFunctionCall",
																"src": "18052:30:10"
															},
															"nativeSrc": "18052:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "18052:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18102:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18102:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18113:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18113:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18098:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18098:3:10"
																		},
																		"nativeSrc": "18098:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18098:18:10"
																	},
																	{
																		"hexValue": "456e74657220612076616c696420737461626c65636f696e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18118:33:10",
																		"nodeType": "YulLiteral",
																		"src": "18118:33:10",
																		"type": "",
																		"value": "Enter a valid stablecoin amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18091:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18091:6:10"
																},
																"nativeSrc": "18091:61:10",
																"nodeType": "YulFunctionCall",
																"src": "18091:61:10"
															},
															"nativeSrc": "18091:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "18091:61:10"
														},
														{
															"nativeSrc": "18161:26:10",
															"nodeType": "YulAssignment",
															"src": "18161:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18173:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18173:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18184:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18184:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18169:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18169:3:10"
																},
																"nativeSrc": "18169:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18169:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18161:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18161:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17838:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17989:9:10",
														"nodeType": "YulTypedName",
														"src": "17989:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18003:4:10",
														"nodeType": "YulTypedName",
														"src": "18003:4:10",
														"type": ""
													}
												],
												"src": "17838:355:10"
											},
											{
												"body": {
													"nativeSrc": "18372:176:10",
													"nodeType": "YulBlock",
													"src": "18372:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18389:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18389:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18400:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18400:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18382:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18382:6:10"
																},
																"nativeSrc": "18382:21:10",
																"nodeType": "YulFunctionCall",
																"src": "18382:21:10"
															},
															"nativeSrc": "18382:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "18382:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18423:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18423:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18434:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18434:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18419:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18419:3:10"
																		},
																		"nativeSrc": "18419:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18419:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18439:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18439:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18412:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18412:6:10"
																},
																"nativeSrc": "18412:30:10",
																"nodeType": "YulFunctionCall",
																"src": "18412:30:10"
															},
															"nativeSrc": "18412:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "18412:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18462:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18473:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18473:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18458:3:10"
																		},
																		"nativeSrc": "18458:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18458:18:10"
																	},
																	{
																		"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "18478:28:10",
																		"nodeType": "YulLiteral",
																		"src": "18478:28:10",
																		"type": "",
																		"value": "Stablecoin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18451:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18451:6:10"
																},
																"nativeSrc": "18451:56:10",
																"nodeType": "YulFunctionCall",
																"src": "18451:56:10"
															},
															"nativeSrc": "18451:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "18451:56:10"
														},
														{
															"nativeSrc": "18516:26:10",
															"nodeType": "YulAssignment",
															"src": "18516:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18528:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18528:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18539:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18539:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18524:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18524:3:10"
																},
																"nativeSrc": "18524:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18524:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18516:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18516:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18198:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18349:9:10",
														"nodeType": "YulTypedName",
														"src": "18349:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18363:4:10",
														"nodeType": "YulTypedName",
														"src": "18363:4:10",
														"type": ""
													}
												],
												"src": "18198:350:10"
											},
											{
												"body": {
													"nativeSrc": "18727:170:10",
													"nodeType": "YulBlock",
													"src": "18727:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18744:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18744:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18755:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18755:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18737:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18737:6:10"
																},
																"nativeSrc": "18737:21:10",
																"nodeType": "YulFunctionCall",
																"src": "18737:21:10"
															},
															"nativeSrc": "18737:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "18737:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18778:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18778:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18789:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18789:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18774:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18774:3:10"
																		},
																		"nativeSrc": "18774:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18774:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18794:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18794:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18767:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18767:6:10"
																},
																"nativeSrc": "18767:30:10",
																"nodeType": "YulFunctionCall",
																"src": "18767:30:10"
															},
															"nativeSrc": "18767:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "18767:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18817:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18817:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18828:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18828:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18813:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18813:3:10"
																		},
																		"nativeSrc": "18813:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18813:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18833:22:10",
																		"nodeType": "YulLiteral",
																		"src": "18833:22:10",
																		"type": "",
																		"value": "Invalid token amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18806:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18806:6:10"
																},
																"nativeSrc": "18806:50:10",
																"nodeType": "YulFunctionCall",
																"src": "18806:50:10"
															},
															"nativeSrc": "18806:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "18806:50:10"
														},
														{
															"nativeSrc": "18865:26:10",
															"nodeType": "YulAssignment",
															"src": "18865:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18877:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18877:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18888:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18888:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18873:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18873:3:10"
																},
																"nativeSrc": "18873:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18873:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18865:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18865:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18553:344:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18704:9:10",
														"nodeType": "YulTypedName",
														"src": "18704:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18718:4:10",
														"nodeType": "YulTypedName",
														"src": "18718:4:10",
														"type": ""
													}
												],
												"src": "18553:344:10"
											},
											{
												"body": {
													"nativeSrc": "19076:166:10",
													"nodeType": "YulBlock",
													"src": "19076:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19093:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19093:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19104:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19104:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19086:6:10"
																},
																"nativeSrc": "19086:21:10",
																"nodeType": "YulFunctionCall",
																"src": "19086:21:10"
															},
															"nativeSrc": "19086:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "19086:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19127:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19127:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19138:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19138:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19123:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19123:3:10"
																		},
																		"nativeSrc": "19123:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19123:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19143:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19143:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19116:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19116:6:10"
																},
																"nativeSrc": "19116:30:10",
																"nodeType": "YulFunctionCall",
																"src": "19116:30:10"
															},
															"nativeSrc": "19116:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "19116:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19166:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19166:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19177:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19177:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19162:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19162:3:10"
																		},
																		"nativeSrc": "19162:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19162:18:10"
																	},
																	{
																		"hexValue": "48617264206361702072656163686564",
																		"kind": "string",
																		"nativeSrc": "19182:18:10",
																		"nodeType": "YulLiteral",
																		"src": "19182:18:10",
																		"type": "",
																		"value": "Hard cap reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19155:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19155:6:10"
																},
																"nativeSrc": "19155:46:10",
																"nodeType": "YulFunctionCall",
																"src": "19155:46:10"
															},
															"nativeSrc": "19155:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "19155:46:10"
														},
														{
															"nativeSrc": "19210:26:10",
															"nodeType": "YulAssignment",
															"src": "19210:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19222:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19222:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19233:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19233:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19218:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19218:3:10"
																},
																"nativeSrc": "19218:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19218:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19210:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19210:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18902:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19053:9:10",
														"nodeType": "YulTypedName",
														"src": "19053:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19067:4:10",
														"nodeType": "YulTypedName",
														"src": "19067:4:10",
														"type": ""
													}
												],
												"src": "18902:340:10"
											},
											{
												"body": {
													"nativeSrc": "19448:229:10",
													"nodeType": "YulBlock",
													"src": "19448:229:10",
													"statements": [
														{
															"nativeSrc": "19458:27:10",
															"nodeType": "YulAssignment",
															"src": "19458:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19470:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19470:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19481:3:10",
																		"nodeType": "YulLiteral",
																		"src": "19481:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19466:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19466:3:10"
																},
																"nativeSrc": "19466:19:10",
																"nodeType": "YulFunctionCall",
																"src": "19466:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19458:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19458:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19501:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19501:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "19512:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19512:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19494:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19494:6:10"
																},
																"nativeSrc": "19494:25:10",
																"nodeType": "YulFunctionCall",
																"src": "19494:25:10"
															},
															"nativeSrc": "19494:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "19494:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19539:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19539:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19550:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19550:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19535:3:10"
																		},
																		"nativeSrc": "19535:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19535:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "19555:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19555:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19528:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19528:6:10"
																},
																"nativeSrc": "19528:34:10",
																"nodeType": "YulFunctionCall",
																"src": "19528:34:10"
															},
															"nativeSrc": "19528:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "19528:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19582:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19582:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19593:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19593:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19578:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19578:3:10"
																		},
																		"nativeSrc": "19578:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19578:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "19598:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19598:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19571:6:10"
																},
																"nativeSrc": "19571:34:10",
																"nodeType": "YulFunctionCall",
																"src": "19571:34:10"
															},
															"nativeSrc": "19571:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "19571:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19644:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19644:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19656:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19656:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19667:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19667:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19652:3:10"
																		},
																		"nativeSrc": "19652:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19652:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PaymentMethod",
																	"nativeSrc": "19614:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "19614:29:10"
																},
																"nativeSrc": "19614:57:10",
																"nodeType": "YulFunctionCall",
																"src": "19614:57:10"
															},
															"nativeSrc": "19614:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "19614:57:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1108__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "19247:430:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19393:9:10",
														"nodeType": "YulTypedName",
														"src": "19393:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19404:6:10",
														"nodeType": "YulTypedName",
														"src": "19404:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19412:6:10",
														"nodeType": "YulTypedName",
														"src": "19412:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19420:6:10",
														"nodeType": "YulTypedName",
														"src": "19420:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19428:6:10",
														"nodeType": "YulTypedName",
														"src": "19428:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19439:4:10",
														"nodeType": "YulTypedName",
														"src": "19439:4:10",
														"type": ""
													}
												],
												"src": "19247:430:10"
											},
											{
												"body": {
													"nativeSrc": "19856:175:10",
													"nodeType": "YulBlock",
													"src": "19856:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19873:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19873:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19884:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19884:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19866:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19866:6:10"
																},
																"nativeSrc": "19866:21:10",
																"nodeType": "YulFunctionCall",
																"src": "19866:21:10"
															},
															"nativeSrc": "19866:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "19866:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19907:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19907:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19918:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19918:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19903:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19903:3:10"
																		},
																		"nativeSrc": "19903:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19903:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19923:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19923:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19896:6:10"
																},
																"nativeSrc": "19896:30:10",
																"nodeType": "YulFunctionCall",
																"src": "19896:30:10"
															},
															"nativeSrc": "19896:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "19896:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19946:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19946:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19957:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19957:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19942:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19942:3:10"
																		},
																		"nativeSrc": "19942:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19942:18:10"
																	},
																	{
																		"hexValue": "62616c616e636573206d757374206e6f74206265205a65726f",
																		"kind": "string",
																		"nativeSrc": "19962:27:10",
																		"nodeType": "YulLiteral",
																		"src": "19962:27:10",
																		"type": "",
																		"value": "balances must not be Zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19935:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19935:6:10"
																},
																"nativeSrc": "19935:55:10",
																"nodeType": "YulFunctionCall",
																"src": "19935:55:10"
															},
															"nativeSrc": "19935:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "19935:55:10"
														},
														{
															"nativeSrc": "19999:26:10",
															"nodeType": "YulAssignment",
															"src": "19999:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20011:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20011:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20022:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20022:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20007:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20007:3:10"
																},
																"nativeSrc": "20007:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20007:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19999:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19999:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d053ad03a9d5a7b9f89b9a631bd1e95f9e841514710f4ade23f14a752fab0c7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19682:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19833:9:10",
														"nodeType": "YulTypedName",
														"src": "19833:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19847:4:10",
														"nodeType": "YulTypedName",
														"src": "19847:4:10",
														"type": ""
													}
												],
												"src": "19682:349:10"
											},
											{
												"body": {
													"nativeSrc": "20210:165:10",
													"nodeType": "YulBlock",
													"src": "20210:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20227:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20227:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20238:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20238:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20220:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20220:6:10"
																},
																"nativeSrc": "20220:21:10",
																"nodeType": "YulFunctionCall",
																"src": "20220:21:10"
															},
															"nativeSrc": "20220:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "20220:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20261:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20261:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20272:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20272:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20257:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20257:3:10"
																		},
																		"nativeSrc": "20257:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20257:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20277:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20277:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20250:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20250:6:10"
																},
																"nativeSrc": "20250:30:10",
																"nodeType": "YulFunctionCall",
																"src": "20250:30:10"
															},
															"nativeSrc": "20250:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "20250:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20300:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20300:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20311:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20311:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20296:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20296:3:10"
																		},
																		"nativeSrc": "20296:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20296:18:10"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "20316:17:10",
																		"nodeType": "YulLiteral",
																		"src": "20316:17:10",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20289:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20289:6:10"
																},
																"nativeSrc": "20289:45:10",
																"nodeType": "YulFunctionCall",
																"src": "20289:45:10"
															},
															"nativeSrc": "20289:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "20289:45:10"
														},
														{
															"nativeSrc": "20343:26:10",
															"nodeType": "YulAssignment",
															"src": "20343:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20355:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20355:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20366:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20366:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20351:3:10"
																},
																"nativeSrc": "20351:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20351:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20343:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20343:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20036:339:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20187:9:10",
														"nodeType": "YulTypedName",
														"src": "20187:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20201:4:10",
														"nodeType": "YulTypedName",
														"src": "20201:4:10",
														"type": ""
													}
												],
												"src": "20036:339:10"
											},
											{
												"body": {
													"nativeSrc": "20554:170:10",
													"nodeType": "YulBlock",
													"src": "20554:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20571:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20571:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20582:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20582:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20564:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20564:6:10"
																},
																"nativeSrc": "20564:21:10",
																"nodeType": "YulFunctionCall",
																"src": "20564:21:10"
															},
															"nativeSrc": "20564:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "20564:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20605:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20605:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20616:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20616:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20601:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20601:3:10"
																		},
																		"nativeSrc": "20601:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20601:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20621:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20621:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20594:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20594:6:10"
																},
																"nativeSrc": "20594:30:10",
																"nodeType": "YulFunctionCall",
																"src": "20594:30:10"
															},
															"nativeSrc": "20594:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "20594:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20644:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20644:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20655:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20655:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20640:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20640:3:10"
																		},
																		"nativeSrc": "20640:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20640:18:10"
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "20660:22:10",
																		"nodeType": "YulLiteral",
																		"src": "20660:22:10",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20633:6:10"
																},
																"nativeSrc": "20633:50:10",
																"nodeType": "YulFunctionCall",
																"src": "20633:50:10"
															},
															"nativeSrc": "20633:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "20633:50:10"
														},
														{
															"nativeSrc": "20692:26:10",
															"nodeType": "YulAssignment",
															"src": "20692:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20704:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20704:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20715:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20715:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20700:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20700:3:10"
																},
																"nativeSrc": "20700:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20700:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20692:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20692:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20380:344:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20531:9:10",
														"nodeType": "YulTypedName",
														"src": "20531:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20545:4:10",
														"nodeType": "YulTypedName",
														"src": "20545:4:10",
														"type": ""
													}
												],
												"src": "20380:344:10"
											},
											{
												"body": {
													"nativeSrc": "20903:170:10",
													"nodeType": "YulBlock",
													"src": "20903:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20920:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20920:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20931:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20931:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20913:6:10"
																},
																"nativeSrc": "20913:21:10",
																"nodeType": "YulFunctionCall",
																"src": "20913:21:10"
															},
															"nativeSrc": "20913:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "20913:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20954:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20954:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20965:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20965:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20950:3:10"
																		},
																		"nativeSrc": "20950:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20950:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20970:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20970:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20943:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20943:6:10"
																},
																"nativeSrc": "20943:30:10",
																"nodeType": "YulFunctionCall",
																"src": "20943:30:10"
															},
															"nativeSrc": "20943:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "20943:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20993:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20993:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21004:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21004:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20989:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20989:3:10"
																		},
																		"nativeSrc": "20989:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20989:18:10"
																	},
																	{
																		"hexValue": "55534443207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "21009:22:10",
																		"nodeType": "YulLiteral",
																		"src": "21009:22:10",
																		"type": "",
																		"value": "USDC transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20982:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20982:6:10"
																},
																"nativeSrc": "20982:50:10",
																"nodeType": "YulFunctionCall",
																"src": "20982:50:10"
															},
															"nativeSrc": "20982:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "20982:50:10"
														},
														{
															"nativeSrc": "21041:26:10",
															"nodeType": "YulAssignment",
															"src": "21041:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21053:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21053:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21064:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21064:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21049:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21049:3:10"
																},
																"nativeSrc": "21049:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21049:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21041:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21041:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20729:344:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20880:9:10",
														"nodeType": "YulTypedName",
														"src": "20880:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20894:4:10",
														"nodeType": "YulTypedName",
														"src": "20894:4:10",
														"type": ""
													}
												],
												"src": "20729:344:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Direct BNB transfers not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_enum_PaymentMethod(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_PaymentMethod_$1108t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_enum_PaymentMethod(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_enum$_PaymentMethod_$1108(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_enum_PaymentMethod(headStart)\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_PaymentMethod(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_PaymentMethod_$1108__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_PaymentMethod(value0, headStart)\n    }\n    function abi_decode_tuple_t_addresst_enum$_PaymentMethod_$1108(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_enum_PaymentMethod(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_icotoken_$1074__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, shl(255, 1))) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid price feed\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Unsupported payment method\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Token amount must be greater tha\")\n        mstore(add(headStart, 96), \"n zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No active sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ICO already finalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Cannot finalize: Soft cap not re\")\n        mstore(add(headStart, 96), \"ached or sale is ongoing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Start time must be greater than \")\n        mstore(add(headStart, 96), \"current time\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"End time must be greater than st\")\n        mstore(add(headStart, 96), \"art time\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"New sale must start after the la\")\n        mstore(add(headStart, 96), \"st sale ends\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Sale ongoing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Soft cap reached\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"BNB refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Stablecoin refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unsupported payment method for r\")\n        mstore(add(headStart, 96), \"efund\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_enum$_PaymentMethod_$1108__to_t_uint256_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        abi_encode_enum_PaymentMethod(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Airdrop already completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Owner cannot buy tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"No sale\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Sale already finalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Send a valid BNB amount\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Enter a valid stablecoin amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Stablecoin transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid token amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Hard cap reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_PaymentMethod_$1108__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        abi_encode_enum_PaymentMethod(value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_0d053ad03a9d5a7b9f89b9a631bd1e95f9e841514710f4ade23f14a752fab0c7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"balances must not be Zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDT transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"USDC transfer failed\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102085760003560e01c80638da5cb5b11610118578063c211e1f9116100a0578063df4e05931161006f578063df4e05931461068e578063e8e87389146106cb578063efdcdb45146106f8578063f2fde38b14610730578063fc0c546a1461075057600080fd5b8063c211e1f91461059e578063c81ffdea14610627578063d1f3b23e14610654578063d3d9d1e41461066e57600080fd5b8063960524e3116100e7578063960524e3146104c657806399131e7e146104db578063a1e89aec146104fb578063b5f522f714610511578063c1560a141461058857600080fd5b80638da5cb5b1461046757806391152c5c1461048557806391d8730a1461049a578063940c333e146104b357600080fd5b80633e413bee1161019b57806363b201171161016a57806363b20117146103f15780636c1909ed14610407578063715018a614610427578063721bc38b1461043c5780637fb120011461045257600080fd5b80633e413bee146103725780633feb5f2b146103925780634dee1dc3146103b257806362a469e9146103d157600080fd5b8063212ea247116101d7578063212ea247146102f85780632151206e1461030d57806323cc75a8146103235780632f48ab7d1461033a57600080fd5b806305834e671461025f57806306e4d36f14610292578063115afc3a146102b8578063117d260f146102d857600080fd5b3661025a5760405162461bcd60e51b815260206004820181905260248201527f44697265637420424e42207472616e7366657273206e6f7420616c6c6f77656460448201526064015b60405180910390fd5b600080fd5b34801561026b57600080fd5b5061027f61027a366004612187565b610770565b6040519081526020015b60405180910390f35b34801561029e57600080fd5b5060065460095410155b6040519015158152602001610289565b3480156102c457600080fd5b5061027f6102d33660046121b1565b61092a565b3480156102e457600080fd5b5061027f6102f3366004612187565b610a8f565b34801561030457600080fd5b5060085461027f565b34801561031957600080fd5b5061027f60065481565b34801561032f57600080fd5b50610338610cc5565b005b34801561034657600080fd5b50600d5461035a906001600160a01b031681565b6040516001600160a01b039091168152602001610289565b34801561037e57600080fd5b50600e5461035a906001600160a01b031681565b34801561039e57600080fd5b5061035a6103ad3660046121d3565b610dbe565b3480156103be57600080fd5b50600b546102a890610100900460ff1681565b3480156103dd57600080fd5b5060035461035a906001600160a01b031681565b3480156103fd57600080fd5b5061027f600a5481565b34801561041357600080fd5b506103386104223660046121ec565b610de8565b34801561043357600080fd5b50610338611010565b34801561044857600080fd5b5061027f60095481565b34801561045e57600080fd5b50610338611022565b34801561047357600080fd5b506000546001600160a01b031661035a565b34801561049157600080fd5b506103386114a2565b3480156104a657600080fd5b50600754600954146102a8565b6103386104c1366004612187565b6116cd565b3480156104d257600080fd5b50600c5461027f565b3480156104e757600080fd5b5060025461035a906001600160a01b031681565b34801561050757600080fd5b5061027f60085481565b34801561051d57600080fd5b5061055e61052c3660046121d3565b600f60205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a001610289565b34801561059457600080fd5b5061027f60075481565b3480156105aa57600080fd5b506106126105b93660046121d3565b506008546000908152600f6020908152604091829020825160a081018452815480825260018301549382018490526002830154948201949094526003820154606082015260049091015460ff1615156080909101529091565b60408051928352602083019190915201610289565b34801561063357600080fd5b5061027f61064236600461222f565b60106020526000908152604090205481565b34801561066057600080fd5b50600b546102a89060ff1681565b34801561067a57600080fd5b5060045461035a906001600160a01b031681565b34801561069a57600080fd5b506106be6106a936600461222f565b60136020526000908152604090205460ff1681565b6040516102899190612282565b3480156106d757600080fd5b5061027f6106e636600461222f565b60116020526000908152604090205481565b34801561070457600080fd5b5061027f610713366004612290565b601460209081526000928352604080842090915290825290205481565b34801561073c57600080fd5b5061033861074b36600461222f565b611cfc565b34801561075c57600080fd5b5060055461035a906001600160a01b031681565b6000806402540be4006107828561092a565b61078c91906122d9565b9050600081136107d35760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610251565b60006107de60085490565b6000818152600f6020526040812060028101549293509190808860028111156108095761080961224a565b0361083257670de0b6b3a76400006108218887612309565b61082b9190612320565b90506108fc565b60028860028111156108465761084661224a565b1480610863575060018860028111156108615761086161224a565b145b156108b45760066000610877826012612342565b61088290600a61243c565b61088c908a612309565b9050670de0b6b3a76400006108a18289612309565b6108ab9190612320565b925050506108fc565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564207061796d656e74206d6574686f640000000000006044820152606401610251565b600082610911670de0b6b3a764000084612309565b61091b9190612320565b96505050505050505b92915050565b60008082600281111561093f5761093f61224a565b036109be5760025460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b29190612462565b50919695505050505050565b60018260028111156109d2576109d261224a565b03610a215760035460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561098e573d6000803e3d6000fd5b6002826002811115610a3557610a3561224a565b036108b4576000600460009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561098e573d6000803e3d6000fd5b6000808211610aef5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608401610251565b60006402540be400610b008561092a565b610b0a91906122d9565b905060008113610b515760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606401610251565b6000610b5c60085490565b905080600003610b9f5760405162461bcd60e51b815260206004820152600e60248201526d4e6f206163746976652073616c6560901b6044820152606401610251565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c91906124b4565b6000838152600f6020526040812060028101549293509190670de0b6b3a7640000610c37838a612309565b610c419190612320565b90506000808a6002811115610c5857610c5861224a565b03610c815786610c70670de0b6b3a764000084612309565b610c7a9190612320565b905061091b565b60018a6002811115610c9557610c9561224a565b1480610cb2575060028a6002811115610cb057610cb061224a565b145b156108b45786610c7083620f4240612309565b610ccd611d3a565b610cd5611d64565b600b5460ff1615610cf85760405162461bcd60e51b8152600401610251906124cd565b6006546009541015610d725760405162461bcd60e51b815260206004820152603860248201527f43616e6e6f742066696e616c697a653a20536f667420636170206e6f7420726560448201527f6163686564206f722073616c65206973206f6e676f696e6700000000000000006064820152608401610251565b600b805460ff19166001179055610d87611d91565b600a546040517f9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a90600090a2610dbc60018055565b565b600c8181548110610dce57600080fd5b6000918252602090912001546001600160a01b0316905081565b610df0611d64565b600b5460ff1615610e135760405162461bcd60e51b8152600401610251906124cd565b428311610e775760405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d65206d7573742062652067726561746572207468616e2060448201526b63757272656e742074696d6560a01b6064820152608401610251565b828211610ed75760405162461bcd60e51b815260206004820152602860248201527f456e642074696d65206d7573742062652067726561746572207468616e2073746044820152676172742074696d6560c01b6064820152608401610251565b6008546000908152600f60205260409020600101548311610f4f5760405162461bcd60e51b815260206004820152602c60248201527f4e65772073616c65206d75737420737461727420616674657220746865206c6160448201526b73742073616c6520656e647360a01b6064820152608401610251565b60088054906000610f5f836124fc565b90915550506040805160a08101825284815260208082018581528284018581526000606080860182815260808701838152600880548552600f8852938990209751885594516001880155925160028701559151600386015591516004909401805460ff1916941515949094179093555483518781529182018690529281018490527f63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba910160405180910390a2505050565b611018611d64565b610dbc6000612123565b61102a611d3a565b611032611d64565b600b5460ff16156110555760405162461bcd60e51b8152600401610251906124cd565b6008546000908152600f602052604090206001015442116110a75760405162461bcd60e51b815260206004820152600c60248201526b53616c65206f6e676f696e6760a01b6044820152606401610251565b600654600954106110ed5760405162461bcd60e51b815260206004820152601060248201526f14dbd99d0818d85c081c995858da195960821b6044820152606401610251565b600c5460005b8181101561148a576000600c828154811061111057611110612515565b60009182526020822001546001600160a01b031691505b60038160ff1610156114805760008160ff16600281111561114a5761114a61224a565b6001600160a01b038416600090815260146020526040812091925090818360028111156111795761117961224a565b600281111561118a5761118a61224a565b81526020019081526020016000205490506000811115611476576001600160a01b0384166000908152601460205260408120818460028111156111cf576111cf61224a565b60028111156111e0576111e061224a565b815260208101919091526040016000908120919091558260028111156112085761120861224a565b036112aa576000846001600160a01b03168260405160006040518083038185875af1925050503d806000811461125a576040519150601f19603f3d011682016040523d82523d6000602084013e61125f565b606091505b50509050806112a45760405162461bcd60e51b8152602060048201526011602482015270109390881c99599d5b990819985a5b1959607a1b6044820152606401610251565b50611432565b60018260028111156112be576112be61224a565b14806112db575060028260028111156112d9576112d961224a565b145b156113dc57600060018360028111156112f6576112f661224a565b1461130c57600e546001600160a01b0316611319565b600d546001600160a01b03165b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018590529192509082169063a9059cbb906044016020604051808303816000875af115801561136c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611390919061252b565b6112a45760405162461bcd60e51b815260206004820152601860248201527f537461626c65636f696e20726566756e64206661696c656400000000000000006044820152606401610251565b60405162461bcd60e51b815260206004820152602560248201527f556e737570706f72746564207061796d656e74206d6574686f6420666f72207260448201526419599d5b9960da1b6064820152608401610251565b836001600160a01b03167f03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7828460405161146d92919061254d565b60405180910390a25b5050600101611127565b50506001016110f3565b5050600b805460ff19166001179055610dbc60018055565b6114aa611d3a565b6114b2611d64565b600b5460ff16156114d55760405162461bcd60e51b8152600401610251906124cd565b600b54610100900460ff161561152d5760405162461bcd60e51b815260206004820152601960248201527f41697264726f7020616c726561647920636f6d706c65746564000000000000006044820152606401610251565b600c5460005b818110156116b3576000600c828154811061155057611550612515565b60009182526020808320909101546001600160a01b0316808352601190915260409091205490915080156116a9576005546000906001600160a01b03166323b872dd6115a46000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529086166024820152604481018590526064016020604051808303816000875af11580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d919061252b565b9050806116645760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610251565b826001600160a01b03167f9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b8360405161169f91815260200190565b60405180910390a2505b5050600101611533565b5050600b805461ff001916610100179055610dbc60018055565b600b5460ff16156116f05760405162461bcd60e51b8152600401610251906124cd565b6000546001600160a01b0316330361174a5760405162461bcd60e51b815260206004820152601760248201527f4f776e65722063616e6e6f742062757920746f6b656e730000000000000000006044820152606401610251565b6008546000036117865760405162461bcd60e51b81526020600482015260076024820152664e6f2073616c6560c81b6044820152606401610251565b6008546000908152600f602052604090206004015460ff166117e35760405162461bcd60e51b815260206004820152601660248201527514d85b1948185b1c9958591e48199a5b985b1a5e995960521b6044820152606401610251565b6000808360028111156117f8576117f861224a565b036118b7576000341161184d5760405162461bcd60e51b815260206004820152601760248201527f53656e6420612076616c696420424e4220616d6f756e740000000000000000006044820152606401610251565b6118578334610770565b33600090815260146020526040812091925034919085600281111561187e5761187e61224a565b600281111561188f5761188f61224a565b815260200190815260200160002060008282546118ac9190612561565b90915550611aa79050565b60018360028111156118cb576118cb61224a565b14806118e8575060028360028111156118e6576118e661224a565b145b156108b4576000821161193d5760405162461bcd60e51b815260206004820152601f60248201527f456e74657220612076616c696420737461626c65636f696e20616d6f756e74006044820152606401610251565b600060018460028111156119535761195361224a565b1461196957600e546001600160a01b0316611976565b600d546001600160a01b03165b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af11580156119cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f0919061252b565b611a3c5760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c65640000000000006044820152606401610251565b611a468484610770565b336000908152601460205260408120919350849190866002811115611a6d57611a6d61224a565b6002811115611a7e57611a7e61224a565b81526020019081526020016000206000828254611a9b9190612561565b90915550611aa7915050565b60008111611aee5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b6044820152606401610251565b6008546000908152600f6020526040812060020154670de0b6b3a764000090611b179084612309565b611b219190612320565b905060075481600954611b349190612561565b1115611b755760405162461bcd60e51b815260206004820152601060248201526f12185c990818d85c081c995858da195960821b6044820152606401610251565b3360009081526010602052604081208054839290611b94908490612561565b925050819055508060096000828254611bad9190612561565b90915550506008546000908152600f602052604081206003018054849290611bd6908490612561565b9250508190555081600a6000828254611bef9190612561565b9091555050336000908152601160205260408120549003611c4d57600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b031916331790555b3360009081526011602052604081208054849290611c6c908490612561565b9091555050336000908152601360205260409020805485919060ff19166001836002811115611c9d57611c9d61224a565b02179055506008546000818152600f60205260409081902060020154905133917fdbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e891611cee91879189908b90612574565b60405180910390a350505050565b611d04611d64565b6001600160a01b038116611d2e57604051631e4fbdf760e01b815260006004820152602401610251565b611d3781612123565b50565b600260015403611d5d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000546001600160a01b03163314610dbc5760405163118cdaa760e01b8152336004820152602401610251565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfe91906124b4565b600e546040516370a0823160e01b815230600482015291925047916000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7091906124b4565b9050600082118015611e825750600083115b8015611e8e5750600081115b611eda5760405162461bcd60e51b815260206004820152601960248201527f62616c616e636573206d757374206e6f74206265205a65726f000000000000006044820152606401610251565b600080546040516001600160a01b039091169084908381818185875af1925050503d8060008114611f27576040519150601f19603f3d011682016040523d82523d6000602084013e611f2c565b606091505b5050905080611f6f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610251565b600d546001600160a01b031663a9059cbb611f926000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af1158015611fdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612003919061252b565b6120465760405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b6044820152606401610251565b600e546001600160a01b031663a9059cbb6120696000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af11580156120b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120da919061252b565b61211d5760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610251565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356003811061218257600080fd5b919050565b6000806040838503121561219a57600080fd5b6121a383612173565b946020939093013593505050565b6000602082840312156121c357600080fd5b6121cc82612173565b9392505050565b6000602082840312156121e557600080fd5b5035919050565b60008060006060848603121561220157600080fd5b505081359360208301359350604090920135919050565b80356001600160a01b038116811461218257600080fd5b60006020828403121561224157600080fd5b6121cc82612218565b634e487b7160e01b600052602160045260246000fd5b6003811061227e57634e487b7160e01b600052602160045260246000fd5b9052565b602081016109248284612260565b600080604083850312156122a357600080fd5b6122ac83612218565b91506122ba60208401612173565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b841416156122f5576122f56122c3565b8181058314821517610924576109246122c3565b8082028115828204841417610924576109246122c3565b60008261233d57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610924576109246122c3565b6001815b600184111561239057808504811115612374576123746122c3565b600184161561238257908102905b60019390931c928002612359565b935093915050565b6000826123a757506001610924565b816123b457506000610924565b81600181146123ca57600281146123d4576123f0565b6001915050610924565b60ff8411156123e5576123e56122c3565b50506001821b610924565b5060208310610133831016604e8410600b8410161715612413575081810a610924565b6124206000198484612355565b8060001904821115612434576124346122c3565b029392505050565b60006121cc8383612398565b805169ffffffffffffffffffff8116811461218257600080fd5b600080600080600060a0868803121561247a57600080fd5b61248386612448565b602087015160408801516060890151929750909550935091506124a860808701612448565b90509295509295909350565b6000602082840312156124c657600080fd5b5051919050565b6020808252601590820152741250d3c8185b1c9958591e48199a5b985b1a5e9959605a1b604082015260600190565b60006001820161250e5761250e6122c3565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561253d57600080fd5b815180151581146121cc57600080fd5b828152604081016121cc6020830184612260565b80820180821115610924576109246122c3565b8481526020810184905260408101839052608081016125966060830184612260565b9594505050505056fea264697066735822122097fdccc1a6ae84938e4f33af1e10e8f4f1b5500b38e2900d7a9818a41fe1349164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x208 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xC211E1F9 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDF4E0593 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDF4E0593 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0xE8E87389 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xEFDCDB45 EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC211E1F9 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xC81FFDEA EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0xD1F3B23E EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0xD3D9D1E4 EQ PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x960524E3 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x960524E3 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x99131E7E EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA1E89AEC EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xB5F522F7 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xC1560A14 EQ PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x91152C5C EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x91D8730A EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x940C333E EQ PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x6C1909ED EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x721BC38B EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x7FB12001 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x3FEB5F2B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x4DEE1DC3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x62A469E9 EQ PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x212EA247 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x212EA247 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x2151206E EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x23CC75A8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5834E67 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x6E4D36F EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x115AFC3A EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x117D260F EQ PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD LT ISZERO JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x27F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0xCC5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x1010 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x1022 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x14A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD EQ PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x16CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x27F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55E PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x612 PUSH2 0x5B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x289 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x642 CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2A8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BE PUSH2 0x6A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x2282 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x713 CALLDATASIZE PUSH1 0x4 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH2 0x74B CALLDATASIZE PUSH1 0x4 PUSH2 0x222F JUMP JUMPDEST PUSH2 0x1CFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x35A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH5 0x2540BE400 PUSH2 0x782 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x832 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x821 DUP9 DUP8 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x2 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x846 JUMPI PUSH2 0x846 PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0x863 JUMPI POP PUSH1 0x1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x861 JUMPI PUSH2 0x861 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x6 PUSH1 0x0 PUSH2 0x877 DUP3 PUSH1 0x12 PUSH2 0x2342 JUMP JUMPDEST PUSH2 0x882 SWAP1 PUSH1 0xA PUSH2 0x243C JUMP JUMPDEST PUSH2 0x88C SWAP1 DUP11 PUSH2 0x2309 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x8A1 DUP3 DUP10 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F64000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x911 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93F PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x9BE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x2462 JUMP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9D2 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0xA21 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA35 JUMPI PUSH2 0xA35 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x8B4 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH5 0x2540BE400 PUSH2 0xB00 DUP6 PUSH2 0x92A JUMP JUMPDEST PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F206163746976652073616C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0C SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xC37 DUP4 DUP11 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC58 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0xC81 JUMPI DUP7 PUSH2 0xC70 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC95 PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0xCB2 JUMPI POP PUSH1 0x2 DUP11 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCB0 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x8B4 JUMPI DUP7 PUSH2 0xC70 DUP4 PUSH3 0xF4240 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0xCD5 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742066696E616C697A653A20536F667420636170206E6F74207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163686564206F722073616C65206973206F6E676F696E670000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xD87 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0x9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xDBC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xDF0 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x63757272656E742074696D65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST DUP3 DUP3 GT PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652067726561746572207468616E207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6172742074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 GT PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772073616C65206D75737420737461727420616674657220746865206C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x73742073616C6520656E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xF5F DUP4 PUSH2 0x24FC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD DUP6 MSTORE PUSH1 0xF DUP9 MSTORE SWAP4 DUP10 SWAP1 KECCAK256 SWAP8 MLOAD DUP9 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP9 ADD SSTORE SWAP3 MLOAD PUSH1 0x2 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1018 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xDBC PUSH1 0x0 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x102A PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x1032 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x53616C65206F6E676F696E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD LT PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14DBD99D0818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1110 JUMPI PUSH2 0x1110 PUSH2 0x2515 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x114A JUMPI PUSH2 0x114A PUSH2 0x224A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1179 JUMPI PUSH2 0x1179 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x118A JUMPI PUSH2 0x118A PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11CF JUMPI PUSH2 0x11CF PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11E0 JUMPI PUSH2 0x11E0 PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x1208 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x12AA JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x125F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109390881C99599D5B990819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST POP PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BE PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0x12DB JUMPI POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D9 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F6 PUSH2 0x224A JUMP JUMPDEST EQ PUSH2 0x130C JUMPI PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1319 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E20726566756E64206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564207061796D656E74206D6574686F6420666F722072 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x19599D5B99 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x146D SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1127 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x10F3 JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDBC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x14AA PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x14B2 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616C726561647920636F6D706C6574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1550 JUMPI PUSH2 0x1550 PUSH2 0x2515 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0x15A4 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x161D SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B DUP4 PUSH1 0x40 MLOAD PUSH2 0x169F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1533 JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH2 0xDBC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x174A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x1786 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2073616C65 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D85B1948185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F8 PUSH2 0x224A JUMP JUMPDEST SUB PUSH2 0x18B7 JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0x184D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E6420612076616C696420424E4220616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1857 DUP4 CALLVALUE PUSH2 0x770 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP CALLVALUE SWAP2 SWAP1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x187E JUMPI PUSH2 0x187E PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x188F JUMPI PUSH2 0x188F PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18AC SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AA7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18CB JUMPI PUSH2 0x18CB PUSH2 0x224A JUMP JUMPDEST EQ DUP1 PUSH2 0x18E8 JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E6 PUSH2 0x224A JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP3 GT PUSH2 0x193D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420737461626C65636F696E20616D6F756E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1953 PUSH2 0x224A JUMP JUMPDEST EQ PUSH2 0x1969 JUMPI PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1976 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19F0 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x1A3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537461626C65636F696E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1A46 DUP5 DUP5 PUSH2 0x770 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP4 POP DUP5 SWAP2 SWAP1 DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6D PUSH2 0x224A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A7E JUMPI PUSH2 0x1A7E PUSH2 0x224A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A9B SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AA7 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1AEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1B17 SWAP1 DUP5 PUSH2 0x2309 JUMP JUMPDEST PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH1 0x9 SLOAD PUSH2 0x1B34 SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST GT ISZERO PUSH2 0x1B75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x12185C990818D85C081C995858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1B94 SWAP1 DUP5 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BAD SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1BD6 SWAP1 DUP5 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BEF SWAP2 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1C4D JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1C6C SWAP1 DUP5 SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9D PUSH2 0x224A JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD CALLER SWAP2 PUSH32 0xDBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8 SWAP2 PUSH2 0x1CEE SWAP2 DUP8 SWAP2 DUP10 SWAP1 DUP12 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D04 PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D2E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1D37 DUP2 PUSH2 0x2123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1D5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP SELFBALANCE SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E70 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1E82 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x1E8E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1EDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E636573206D757374206E6F74206265205A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F27 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1F92 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2003 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x2046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2069 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20DA SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH2 0x211D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D110C81D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A3 DUP4 PUSH2 0x2173 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21CC DUP3 PUSH2 0x2173 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21CC DUP3 PUSH2 0x2218 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x227E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x924 DUP3 DUP5 PUSH2 0x2260 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22AC DUP4 PUSH2 0x2218 JUMP JUMPDEST SWAP2 POP PUSH2 0x22BA PUSH1 0x20 DUP5 ADD PUSH2 0x2173 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x22F5 PUSH2 0x22C3 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x233D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x2390 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x2374 JUMPI PUSH2 0x2374 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x2382 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x2359 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23A7 JUMPI POP PUSH1 0x1 PUSH2 0x924 JUMP JUMPDEST DUP2 PUSH2 0x23B4 JUMPI POP PUSH1 0x0 PUSH2 0x924 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x23CA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x23D4 JUMPI PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x924 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x23E5 JUMPI PUSH2 0x23E5 PUSH2 0x22C3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x924 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2413 JUMPI POP DUP2 DUP2 EXP PUSH2 0x924 JUMP JUMPDEST PUSH2 0x2420 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x2355 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2434 PUSH2 0x22C3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC DUP4 DUP4 PUSH2 0x2398 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x247A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2483 DUP7 PUSH2 0x2448 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x24A8 PUSH1 0x80 DUP8 ADD PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1250D3C8185B1C9958591E48199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x250E JUMPI PUSH2 0x250E PUSH2 0x22C3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x21CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x21CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x22C3 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x2596 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 REVERT 0xCC 0xC1 0xA6 0xAE DUP5 SWAP4 DUP15 0x4F CALLER 0xAF 0x1E LT 0xE8 DELEGATECALL CALL 0xB5 POP SIGNEXTEND CODESIZE 0xE2 SWAP1 0xD PUSH27 0x9818A41FE1349164736F6C634300081A0033000000000000000000 ",
							"sourceMap": "270:13221:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12587:42;;-1:-1:-1;;;12587:42:9;;216:2:10;12587:42:9;;;198:21:10;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;12587:42:9;;;;;;;;270:13221;;;;4788:1147;;;;;;;;;;-1:-1:-1;4788:1147:9;;;;;:::i;:::-;;:::i;:::-;;;1014:25:10;;;1002:2;987:18;4788:1147:9;;;;;;;;13092:117;;;;;;;;;;-1:-1:-1;13189:12:9;;13166:19;;:35;;13092:117;;;1215:14:10;;1208:22;1190:41;;1178:2;1163:18;13092:117:9;1050:187:10;3061:633:9;;;;;;;;;;-1:-1:-1;3061:633:9;;;;;:::i;:::-;;:::i;5938:1127::-;;;;;;;;;;-1:-1:-1;5938:1127:9;;;;;:::i;:::-;;:::i;12639:91::-;;;;;;;;;;-1:-1:-1;12714:9:9;;12639:91;;776:27;;;;;;;;;;;;;;;;9255:326;;;;;;;;;;;;;:::i;:::-;;1203:19;;;;;;;;;;-1:-1:-1;1203:19:9;;;;-1:-1:-1;;;;;1203:19:9;;;;;;-1:-1:-1;;;;;1806:32:10;;;1788:51;;1776:2;1761:18;1203:19:9;1642:203:10;1228:19:9;;;;;;;;;;-1:-1:-1;1228:19:9;;;;-1:-1:-1;;;;;1228:19:9;;;1171:26;;;;;;;;;;-1:-1:-1;1171:26:9;;;;;:::i;:::-;;:::i;1072:38::-;;;;;;;;;;-1:-1:-1;1072:38:9;;;;;;;;;;;394:42;;;;;;;;;;-1:-1:-1;394:42:9;;;;-1:-1:-1;;;;;394:42:9;;;912:30;;;;;;;;;;;;;;;;3932:850;;;;;;;;;;-1:-1:-1;3932:850:9;;;;;:::i;:::-;;:::i;2293:101:1:-;;;;;;;;;;;;;:::i;872:34:9:-;;;;;;;;;;;;;;;;11010:1542;;;;;;;;;;;;;:::i;1638:85:1:-;;;;;;;;;;-1:-1:-1;1684:7:1;1710:6;-1:-1:-1;;;;;1710:6:1;1638:85;;10257:747:9;;;;;;;;;;;;;:::i;13215:117::-;;;;;;;;;;-1:-1:-1;13312:12:9;;13289:19;;:35;13215:117;;7072:2177;;;;;;:::i;:::-;;:::i;13338:151::-;;;;;;;;;;-1:-1:-1;13436:9:9;:16;13338:151;;347:41;;;;;;;;;;-1:-1:-1;347:41:9;;;;-1:-1:-1;;;;;347:41:9;;;842:24;;;;;;;;;;;;;;;;1270:37;;;;;;;;;;-1:-1:-1;1270:37:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3041:25:10;;;3097:2;3082:18;;3075:34;;;;3125:18;;;3118:34;;;;3183:2;3168:18;;3161:34;3239:14;3232:22;3226:3;3211:19;;3204:51;3028:3;3013:19;1270:37:9;2788:473:10;809:27:9;;;;;;;;;;;;;;;;12854:232;;;;;;;;;;-1:-1:-1;12854:232:9;;;;;:::i;:::-;-1:-1:-1;13022:9:9;;12945:18;13016:16;;;:5;:16;;;;;;;;;12997:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12854:232;;;;;3440:25:10;;;3496:2;3481:18;;3474:34;;;;3413:18;12854:232:9;3266:248:10;1313:53:9;;;;;;;;;;-1:-1:-1;1313:53:9;;;;;:::i;:::-;;;;;;;;;;;;;;1032:34;;;;;;;;;;-1:-1:-1;1032:34:9;;;;;;;;442:42;;;;;;;;;;-1:-1:-1;442:42:9;;;;-1:-1:-1;;;;;442:42:9;;;1501:65;;;;;;;;;;-1:-1:-1;1501:65:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;1372:57::-;;;;;;;;;;-1:-1:-1;1372:57:9;;;;;:::i;:::-;;;;;;;;;;;;;;1573:77;;;;;;;;;;-1:-1:-1;1573:77:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2543:215:1;;;;;;;;;;-1:-1:-1;2543:215:1;;;;;:::i;:::-;;:::i;749:21:9:-;;;;;;;;;;-1:-1:-1;749:21:9;;;;-1:-1:-1;;;;;749:21:9;;;4788:1147;4916:7;4935:12;980:4;4950:28;4964:13;4950;:28::i;:::-;:49;;;;:::i;:::-;4935:64;;5025:1;5017:5;:9;5009:40;;;;-1:-1:-1;;;5009:40:9;;5582:2:10;5009:40:9;;;5564:21:10;5621:2;5601:18;;;5594:30;-1:-1:-1;;;5640:18:10;;;5633:48;5698:18;;5009:40:9;5380:342:10;5009:40:9;5060:21;5084:18;12714:9;;;12639:91;5084:18;5112:17;5132:20;;;:5;:20;;;;;5189:18;;;;5060:42;;-1:-1:-1;5132:20:9;5189:18;5112:17;5291:13;:34;;;;;;;;:::i;:::-;;5287:521;;1022:4;5363:30;5380:13;5371:5;5363:30;:::i;:::-;5362:56;;;;:::i;:::-;5341:77;;5287:521;;;5458:18;5441:13;:35;;;;;;;;:::i;:::-;;:74;;;-1:-1:-1;5497:18:9;5480:13;:35;;;;;;;;:::i;:::-;;5441:74;5437:371;;;5556:1;5527:26;5617:23;5556:1;5617:2;:23;:::i;:::-;5612:29;;:2;:29;:::i;:::-;5595:47;;:13;:47;:::i;:::-;5568:74;-1:-1:-1;1022:4:9;5675:33;5568:74;5683:5;5675:33;:::i;:::-;5674:59;;;;:::i;:::-;5653:80;;5517:228;;5437:371;;;5761:36;;-1:-1:-1;;;5761:36:9;;7880:2:10;5761:36:9;;;7862:21:10;7919:2;7899:18;;;7892:30;7958:28;7938:18;;;7931:56;8004:18;;5761:36:9;7678:350:10;5437:371:9;5818:19;5885:15;5840:42;1022:4;5840:18;:42;:::i;:::-;5839:61;;;;:::i;:::-;5818:82;-1:-1:-1;;;;;;;4788:1147:9;;;;;:::o;3061:633::-;3158:6;;3184:13;:34;;;;;;;;:::i;:::-;;3180:146;;3259:12;;:30;;;-1:-1:-1;;;3259:30:9;;;;3237:12;;-1:-1:-1;;;;;3259:12:9;;:28;;:30;;;;;;;;;;;;;;:12;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3234:55:9;;3061:633;-1:-1:-1;;;;;;3061:633:9:o;3180:146::-;3357:18;3340:13;:35;;;;;;;;:::i;:::-;;3336:148;;3416:13;;:31;;;-1:-1:-1;;;3416:31:9;;;;3394:12;;-1:-1:-1;;;;;3416:13:9;;:29;;:31;;;;;;;;;;;;;;:13;:31;;;;;;;;;;;;;;3336:148;3515:18;3498:13;:35;;;;;;;;:::i;:::-;;3494:148;;3552:12;3574:13;;;;;;;;;-1:-1:-1;;;;;3574:13:9;-1:-1:-1;;;;;3574:29:9;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5938:1127;6041:7;6078:1;6064:11;:15;6056:66;;;;-1:-1:-1;;;6056:66:9;;8995:2:10;6056:66:9;;;8977:21:10;9034:2;9014:18;;;9007:30;9073:34;9053:18;;;9046:62;-1:-1:-1;;;9124:18:10;;;9117:36;9170:19;;6056:66:9;8793:402:10;6056:66:9;6129:12;980:4;6144:28;6158:13;6144;:28::i;:::-;:51;;;;:::i;:::-;6129:66;;6245:1;6237:5;:9;6229:40;;;;-1:-1:-1;;;6229:40:9;;5582:2:10;6229:40:9;;;5564:21:10;5621:2;5601:18;;;5594:30;-1:-1:-1;;;5640:18:10;;;5633:48;5698:18;;6229:40:9;5380:342:10;6229:40:9;6276:21;6300:18;12714:9;;;12639:91;6300:18;6276:42;;6332:13;6349:1;6332:18;6324:45;;;;-1:-1:-1;;;6324:45:9;;9402:2:10;6324:45:9;;;9384:21:10;9441:2;9421:18;;;9414:30;-1:-1:-1;;;9460:18:10;;;9453:44;9514:18;;6324:45:9;9200:338:10;6324:45:9;6404:4;;6397:37;;-1:-1:-1;;;6397:37:9;;6428:4;6397:37;;;1788:51:10;6375:19:9;;-1:-1:-1;;;;;6404:4:9;;6397:22;;1761:18:10;;6397:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6441:17;6461:20;;;:5;:20;;;;;6513:18;;;;6375:59;;-1:-1:-1;6461:20:9;6513:18;1022:4;6607:29;6513:18;6607:11;:29;:::i;:::-;6606:46;;;;:::i;:::-;6578:74;-1:-1:-1;6659:21:9;;6690:13;:34;;;;;;;;:::i;:::-;;6686:350;;6797:5;6753:32;1022:4;6753:17;:32;:::i;:::-;6752:51;;;;:::i;:::-;6736:67;;6686:350;;;6837:18;6820:13;:35;;;;;;;;:::i;:::-;;:74;;;-1:-1:-1;6876:18:9;6859:13;:35;;;;;;;;:::i;:::-;;6820:74;6816:220;;;6964:5;6923:29;:17;6944:7;6923:29;:::i;9255:326::-;2500:21:7;:19;:21::i;:::-;1531:13:1::1;:11;:13::i;:::-;2997:14:9::2;::::0;::::2;;2996:15;2988:49;;;;-1:-1:-1::0;;;2988:49:9::2;;;;;;;:::i;:::-;9378:12:::3;;9355:19;;:35;;9334:138;;;::::0;-1:-1:-1;;;9334:138:9;;10330:2:10;9334:138:9::3;::::0;::::3;10312:21:10::0;10369:2;10349:18;;;10342:30;10408:34;10388:18;;;10381:62;10479:26;10459:18;;;10452:54;10523:19;;9334:138:9::3;10128:420:10::0;9334:138:9::3;9479:14;:21:::0;;-1:-1:-1;;9479:21:9::3;9496:4;9479:21;::::0;;9510:23:::3;:21;:23::i;:::-;9561:15;::::0;9548:29:::3;::::0;::::3;::::0;;;::::3;2542:20:7::0;1857:1;3068:21;;2888:208;2542:20;9255:326:9:o;1171:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1171:26:9;;-1:-1:-1;1171:26:9;:::o;3932:850::-;1531:13:1;:11;:13::i;:::-;2997:14:9::1;::::0;::::1;;2996:15;2988:49;;;;-1:-1:-1::0;;;2988:49:9::1;;;;;;;:::i;:::-;4123:15:::2;4110:10;:28;4089:119;;;::::0;-1:-1:-1;;;4089:119:9;;10755:2:10;4089:119:9::2;::::0;::::2;10737:21:10::0;10794:2;10774:18;;;10767:30;10833:34;10813:18;;;10806:62;-1:-1:-1;;;10884:18:10;;;10877:42;10936:19;;4089:119:9::2;10553:408:10::0;4089:119:9::2;4250:10;4239:8;:21;4218:108;;;::::0;-1:-1:-1;;;4218:108:9;;11168:2:10;4218:108:9::2;::::0;::::2;11150:21:10::0;11207:2;11187:18;;;11180:30;11246:34;11226:18;;;11219:62;-1:-1:-1;;;11297:18:10;;;11290:38;11345:19;;4218:108:9::2;10966:404:10::0;4218:108:9::2;12823:9:::0;;12791:7;12817:16;;;:5;:16;;;;;:24;;;4357:10:::2;:35;4336:126;;;::::0;-1:-1:-1;;;4336:126:9;;11577:2:10;4336:126:9::2;::::0;::::2;11559:21:10::0;11616:2;11596:18;;;11589:30;11655:34;11635:18;;;11628:62;-1:-1:-1;;;11706:18:10;;;11699:42;11758:19;;4336:126:9::2;11375:408:10::0;4336:126:9::2;4473:9;:11:::0;;;:9:::2;:11;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;4513:184:9::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;-1:-1:-1;4513:184:9;;;;;;;;;;;;;4500:9:::2;::::0;;4494:16;;:5:::2;:16:::0;;;;;;:203;;;;;;4513:184;4494:203;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;4494:203:9::2;::::0;::::2;;::::0;;;::::2;::::0;;;4727:9;4712:63;;12130:25:10;;;12171:18;;;12164:34;;;12214:18;;;12207:34;;;4712:63:9::2;::::0;12103:18:10;4712:63:9::2;;;;;;;3932:850:::0;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;11010:1542:9:-:0;2500:21:7;:19;:21::i;:::-;1531:13:1::1;:11;:13::i;:::-;2997:14:9::2;::::0;::::2;;2996:15;2988:49;;;;-1:-1:-1::0;;;2988:49:9::2;;;;;;;:::i;:::-;12823:9:::0;;12791:7;12817:16;;;:5;:16;;;;;:24;;;11099:15:::3;:40;11091:65;;;::::0;-1:-1:-1;;;11091:65:9;;12454:2:10;11091:65:9::3;::::0;::::3;12436:21:10::0;12493:2;12473:18;;;12466:30;-1:-1:-1;;;12512:18:10;;;12505:42;12564:18;;11091:65:9::3;12252:336:10::0;11091:65:9::3;11192:12;;11170:19;;:34;11162:64;;;::::0;-1:-1:-1;;;11162:64:9;;12795:2:10;11162:64:9::3;::::0;::::3;12777:21:10::0;12834:2;12814:18;;;12807:30;-1:-1:-1;;;12853:18:10;;;12846:46;12909:18;;11162:64:9::3;12593:340:10::0;11162:64:9::3;11258:9;:16:::0;11233:22:::3;11280:1243;11304:14;11300:1;:18;11280:1243;;;11335:16;11354:9;11364:1;11354:12;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;::::3;::::0;-1:-1:-1;;;;;11354:12:9::3;::::0;-1:-1:-1;11433:1084:9::3;11455:1;11451;:5;;;11433:1084;;;11478:27;11522:1;11508:16;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11555:26:9;::::3;11538:14;11555:26:::0;;;:16:::3;:26;::::0;;;;11478:46;;-1:-1:-1;11538:14:9;;11478:46;11555:41:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11538:58;;11624:1;11615:6;:10;11611:896;;;-1:-1:-1::0;;;;;11645:26:9;::::3;11689:1;11645:26:::0;;;:16:::3;:26;::::0;;;;11689:1;11672:13;11645:41:::3;::::0;::::3;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::3;::::0;::::3;::::0;;;;;;-1:-1:-1;11645:41:9;;;:45;;;;11712:13:::3;:34;;;;;;;;:::i;:::-;::::0;11708:714:::3;;11771:9;11794:8;-1:-1:-1::0;;;;;11786:22:9::3;11816:6;11786:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11770:57;;;11857:4;11849:34;;;::::0;-1:-1:-1;;;11849:34:9;;13482:2:10;11849:34:9::3;::::0;::::3;13464:21:10::0;13521:2;13501:18;;;13494:30;-1:-1:-1;;;13540:18:10;;;13533:47;13597:18;;11849:34:9::3;13280:341:10::0;11849:34:9::3;11748:154;11708:714;;;11929:18;11912:13;:35;;;;;;;;:::i;:::-;;:74;;;-1:-1:-1::0;11968:18:9::3;11951:13;:35;;;;;;;;:::i;:::-;;11912:74;11908:514;;;12010:17;12047:18;12030:13;:35;;;;;;;;:::i;:::-;;:113;;12138:4;::::0;-1:-1:-1;;;;;12138:4:9::3;12030:113;;;12099:4;::::0;-1:-1:-1;;;;;12099:4:9::3;12030:113;12198:37;::::0;-1:-1:-1;;;12198:37:9;;-1:-1:-1;;;;;13818:32:10;;;12198:37:9::3;::::0;::::3;13800:51:10::0;13867:18;;;13860:34;;;12010:133:9;;-1:-1:-1;12198:19:9;;::::3;::::0;::::3;::::0;13773:18:10;;12198:37:9::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12165:144;;;::::0;-1:-1:-1;;;12165:144:9;;14389:2:10;12165:144:9::3;::::0;::::3;14371:21:10::0;14428:2;14408:18;;;14401:30;14467:26;14447:18;;;14440:54;14511:18;;12165:144:9::3;14187:348:10::0;11908:514:9::3;12356:47;::::0;-1:-1:-1;;;12356:47:9;;14742:2:10;12356:47:9::3;::::0;::::3;14724:21:10::0;14781:2;14761:18;;;14754:30;14820:34;14800:18;;;14793:62;-1:-1:-1;;;14871:18:10;;;14864:35;14916:19;;12356:47:9::3;14540:401:10::0;11908:514:9::3;12460:8;-1:-1:-1::0;;;;;12444:48:9::3;;12470:6;12478:13;12444:48;;;;;;;:::i;:::-;;;;;;;;11611:896;-1:-1:-1::0;;11458:3:9::3;;11433:1084;;;-1:-1:-1::0;;11320:3:9::3;;11280:1243;;;-1:-1:-1::0;;12528:14:9::3;:21:::0;;-1:-1:-1;;12528:21:9::3;12545:4;12528:21;::::0;;2542:20:7;1857:1;3068:21;;2888:208;10257:747:9;2500:21:7;:19;:21::i;:::-;1531:13:1::1;:11;:13::i;:::-;2997:14:9::2;::::0;::::2;;2996:15;2988:49;;;;-1:-1:-1::0;;;2988:49:9::2;;;;;;;:::i;:::-;10345:18:::3;::::0;::::3;::::0;::::3;;;10344:19;10336:57;;;::::0;-1:-1:-1;;;10336:57:9;;15440:2:10;10336:57:9::3;::::0;::::3;15422:21:10::0;15479:2;15459:18;;;15452:30;15518:27;15498:18;;;15491:55;15563:18;;10336:57:9::3;15238:349:10::0;10336:57:9::3;10429:9;:16:::0;10404:22:::3;10451:519;10475:14;10471:1;:18;10451:519;;;10506:16;10525:9;10535:1;10525:12;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;;::::3;::::0;-1:-1:-1;;;;;10525:12:9::3;10570:32:::0;;;:22:::3;:32:::0;;;;;;;;10525:12;;-1:-1:-1;10617:16:9;;10613:351:::3;;10732:5;::::0;10717:12:::3;::::0;-1:-1:-1;;;;;10732:5:9::3;:18;10751:7;1684::1::0;1710:6;-1:-1:-1;;;;;1710:6:1;;1638:85;10751:7:9::3;10732:51;::::0;-1:-1:-1;;;;;;10732:51:9::3;::::0;;;;;;-1:-1:-1;;;;;15812:32:10;;;10732:51:9::3;::::0;::::3;15794::10::0;15881:32;;;15861:18;;;15854:60;15930:18;;;15923:34;;;15767:18;;10732:51:9::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10717:66;;10805:7;10797:41;;;::::0;-1:-1:-1;;;10797:41:9;;16170:2:10;10797:41:9::3;::::0;::::3;16152:21:10::0;16209:2;16189:18;;;16182:30;-1:-1:-1;;;16228:18:10;;;16221:51;16289:18;;10797:41:9::3;15968:345:10::0;10797:41:9::3;10930:8;-1:-1:-1::0;;;;;10914:39:9::3;;10940:12;10914:39;;;;1014:25:10::0;;1002:2;987:18;;868:177;10914:39:9::3;;;;;;;;10635:329;10613:351;-1:-1:-1::0;;10491:3:9::3;;10451:519;;;-1:-1:-1::0;;10976:18:9::3;:25:::0;;-1:-1:-1;;10976:25:9::3;;;::::0;;2542:20:7;1857:1;3068:21;;2888:208;7072:2177:9;2997:14;;;;2996:15;2988:49;;;;-1:-1:-1;;;2988:49:9;;;;;;;:::i;:::-;1684:7:1;1710:6;-1:-1:-1;;;;;1710:6:1;7190:10:9::1;:21:::0;7182:57:::1;;;::::0;-1:-1:-1;;;7182:57:9;;16520:2:10;7182:57:9::1;::::0;::::1;16502:21:10::0;16559:2;16539:18;;;16532:30;16598:25;16578:18;;;16571:53;16641:18;;7182:57:9::1;16318:347:10::0;7182:57:9::1;7253:9;;7266:1;7253:14:::0;7245:34:::1;;;::::0;-1:-1:-1;;;7245:34:9;;16872:2:10;7245:34:9::1;::::0;::::1;16854:21:10::0;16911:1;16891:18;;;16884:29;-1:-1:-1;;;16929:18:10;;;16922:37;16976:18;;7245:34:9::1;16670:330:10::0;7245:34:9::1;7299:9;::::0;7293:16:::1;::::0;;;:5:::1;:16;::::0;;;;:28:::1;;::::0;::::1;;7285:63;;;::::0;-1:-1:-1;;;7285:63:9;;17207:2:10;7285:63:9::1;::::0;::::1;17189:21:10::0;17246:2;17226:18;;;17219:30;-1:-1:-1;;;17265:18:10;;;17258:52;17327:18;;7285:63:9::1;17005:346:10::0;7285:63:9::1;7354:19;::::0;7383:13:::1;:34;;;;;;;;:::i;:::-;::::0;7379:990:::1;;7499:1;7487:9;:13;7479:49;;;::::0;-1:-1:-1;;;7479:49:9;;17558:2:10;7479:49:9::1;::::0;::::1;17540:21:10::0;17597:2;17577:18;;;17570:30;17636:25;17616:18;;;17609:53;17679:18;;7479:49:9::1;17356:347:10::0;7479:49:9::1;7552:46;7573:13;7588:9;7552:20;:46::i;:::-;7625:10;7608:28;::::0;;;:16:::1;:28;::::0;;;;7538:60;;-1:-1:-1;7655:9:9::1;::::0;7608:28;7637:13;7608:43:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7379:990:9::1;::::0;-1:-1:-1;7379:990:9::1;;7707:18;7690:13;:35;;;;;;;;:::i;:::-;;:82;;;-1:-1:-1::0;7754:18:9::1;7737:13;:35;;;;;;;;:::i;:::-;;7690:82;7677:692;;;7851:1;7835:13;:17;7827:61;;;::::0;-1:-1:-1;;;7827:61:9;;18040:2:10;7827:61:9::1;::::0;::::1;18022:21:10::0;18079:2;18059:18;;;18052:30;18118:33;18098:18;;;18091:61;18169:18;;7827:61:9::1;17838:355:10::0;7827:61:9::1;7898:17;7944:18;7927:13;:35;;;;;;;;:::i;:::-;;:64;;7986:4;::::0;-1:-1:-1;;;;;7986:4:9::1;7927:64;;;7972:4;::::0;-1:-1:-1;;;;;7972:4:9::1;7927:64;8009:63;::::0;-1:-1:-1;;;8009:63:9;;8033:10:::1;8009:63;::::0;::::1;15794:51:10::0;8052:4:9::1;15861:18:10::0;;;15854:60;15930:18;;;15923:34;;;7898:93:9;;-1:-1:-1;;;;;;8009:23:9;::::1;::::0;::::1;::::0;15767:18:10;;8009:63:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8001:101;;;::::0;-1:-1:-1;;;8001:101:9;;18400:2:10;8001:101:9::1;::::0;::::1;18382:21:10::0;18439:2;18419:18;;;18412:30;18478:28;18458:18;;;18451:56;18524:18;;8001:101:9::1;18198:350:10::0;8001:101:9::1;8183:50;8204:13;8219;8183:20;:50::i;:::-;8260:10;8243:28;::::0;;;:16:::1;:28;::::0;;;;8169:64;;-1:-1:-1;8290:13:9;;8243:28;8272:13;8243:43:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7677:692:9::1;::::0;-1:-1:-1;;7677:692:9::1;;8396:1;8382:11;:15;8374:48;;;::::0;-1:-1:-1;;;8374:48:9;;18755:2:10;8374:48:9::1;::::0;::::1;18737:21:10::0;18794:2;18774:18;;;18767:30;-1:-1:-1;;;18813:18:10;;;18806:50;18873:18;;8374:48:9::1;18553:344:10::0;8374:48:9::1;8529:9;::::0;8484:22:::1;8523:16:::0;;;:5:::1;:16;::::0;;;;:30:::1;;::::0;1022:4:::1;::::0;8509:44:::1;::::0;:11;:44:::1;:::i;:::-;:59;;;;:::i;:::-;8484:84;;8632:12;;8614:14;8592:19;;:36;;;;:::i;:::-;:52;;8575:103;;;::::0;-1:-1:-1;;;8575:103:9;;19104:2:10;8575:103:9::1;::::0;::::1;19086:21:10::0;19143:2;19123:18;;;19116:30;-1:-1:-1;;;19162:18:10;;;19155:46;19218:18;;8575:103:9::1;18902:340:10::0;8575:103:9::1;8704:10;8685:30;::::0;;;:18:::1;:30;::::0;;;;:48;;8719:14;;8685:30;:48:::1;::::0;8719:14;;8685:48:::1;:::i;:::-;;;;;;;;8762:14;8739:19;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8788:9:9::1;::::0;8782:16:::1;::::0;;;:5:::1;:16;::::0;;;;:27:::1;;:42:::0;;8813:11;;8782:16;:42:::1;::::0;8813:11;;8782:42:::1;:::i;:::-;;;;;;;;8849:11;8830:15;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8894:10:9::1;8871:34;::::0;;;:22:::1;:34;::::0;;;;;:39;;8867:88:::1;;8922:9;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;8922:26:9;;;;;::::1;::::0;;-1:-1:-1;;;;;;8922:26:9::1;8937:10;8922:26;::::0;;8867:88:::1;8983:10;8960:34;::::0;;;:22:::1;:34;::::0;;;;:49;;8998:11;;8960:34;:49:::1;::::0;8998:11;;8960:49:::1;:::i;:::-;::::0;;;-1:-1:-1;;9040:10:9::1;9015:36;::::0;;;:24:::1;:36;::::0;;;;:52;;9054:13;;9015:36;-1:-1:-1;;9015:52:9::1;::::0;9054:13;9015:52:::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;9124:9:9::1;::::0;9164:16:::1;::::0;;;:5:::1;:16;::::0;;;;;;:30:::1;;::::0;9079:167;;9104:10:::1;::::0;9079:167:::1;::::0;::::1;::::0;9143:11;;9204:13;;9227;;9079:167:::1;:::i;:::-;;;;;;;;7176:2073;;7072:2177:::0;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;1788:51:10::0;1761:18;;2672:31:1::1;1642:203:10::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:7;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1796:162:1:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;735:10:6;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:6;1901:40:1;;;1788:51:10;1761:18;;1901:40:1;1642:203:10;9587:664:9;9663:4;;9656:37;;-1:-1:-1;;;9656:37:9;;9687:4;9656:37;;;1788:51:10;9634:19:9;;-1:-1:-1;;;;;9663:4:9;;9656:22;;1761:18:10;;9656:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9779:4;;9772:37;;-1:-1:-1;;;9772:37:9;;9803:4;9772:37;;;1788:51:10;9634:59:9;;-1:-1:-1;9723:21:9;;9699;;-1:-1:-1;;;;;9779:4:9;;9772:22;;1761:18:10;;9772:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9750:59;;9838:1;9823:13;:16;:33;;;;;9855:1;9843:11;:13;9823:33;:52;;;;;9874:1;9860:11;:15;9823:52;9815:90;;;;-1:-1:-1;;;9815:90:9;;19884:2:10;9815:90:9;;;19866:21:10;19923:2;19903:18;;;19896:30;19962:27;19942:18;;;19935:55;20007:18;;9815:90:9;19682:349:10;9815:90:9;9926:12;1710:6:1;;9944:47:9;;-1:-1:-1;;;;;1710:6:1;;;;9973:13:9;;9926:12;9944:47;9926:12;9944:47;9973:13;1710:6:1;9944:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9925:66;;;10009:7;10001:35;;;;-1:-1:-1;;;10001:35:9;;20238:2:10;10001:35:9;;;20220:21:10;20277:2;20257:18;;;20250:30;-1:-1:-1;;;20296:18:10;;;20289:45;20351:18;;10001:35:9;20036:339:10;10001:35:9;10080:4;;-1:-1:-1;;;;;10080:4:9;10073:21;10095:7;1684::1;1710:6;-1:-1:-1;;;;;1710:6:1;;1638:85;10095:7:9;10073:43;;-1:-1:-1;;;;;;10073:43:9;;;;;;;-1:-1:-1;;;;;13818:32:10;;;10073:43:9;;;13800:51:10;13867:18;;;13860:34;;;13773:18;;10073:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10065:76;;;;-1:-1:-1;;;10065:76:9;;20582:2:10;10065:76:9;;;20564:21:10;20621:2;20601:18;;;20594:30;-1:-1:-1;;;20640:18:10;;;20633:50;20700:18;;10065:76:9;20380:344:10;10065:76:9;10182:4;;-1:-1:-1;;;;;10182:4:9;10175:21;10197:7;1684::1;1710:6;-1:-1:-1;;;;;1710:6:1;;1638:85;10197:7:9;10175:43;;-1:-1:-1;;;;;;10175:43:9;;;;;;;-1:-1:-1;;;;;13818:32:10;;;10175:43:9;;;13800:51:10;13867:18;;;13860:34;;;13773:18;;10175:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10167:76;;;;-1:-1:-1;;;10167:76:9;;20931:2:10;10167:76:9;;;20913:21:10;20970:2;20950:18;;;20943:30;-1:-1:-1;;;20989:18:10;;;20982:50;21049:18;;10167:76:9;20729:344:10;10167:76:9;9628:623;;;;9587:664::o;2912:187:1:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;375:154:10:-;454:20;;503:1;493:12;;483:40;;519:1;516;509:12;483:40;375:154;;;:::o;534:329::-;620:6;628;681:2;669:9;660:7;656:23;652:32;649:52;;;697:1;694;687:12;649:52;720:40;750:9;720:40;:::i;:::-;710:50;829:2;814:18;;;;801:32;;-1:-1:-1;;;534:329:10:o;1242:215::-;1319:6;1372:2;1360:9;1351:7;1347:23;1343:32;1340:52;;;1388:1;1385;1378:12;1340:52;1411:40;1441:9;1411:40;:::i;:::-;1401:50;1242:215;-1:-1:-1;;;1242:215:10:o;1850:226::-;1909:6;1962:2;1950:9;1941:7;1937:23;1933:32;1930:52;;;1978:1;1975;1968:12;1930:52;-1:-1:-1;2023:23:10;;1850:226;-1:-1:-1;1850:226:10:o;2317:466::-;2394:6;2402;2410;2463:2;2451:9;2442:7;2438:23;2434:32;2431:52;;;2479:1;2476;2469:12;2431:52;-1:-1:-1;;2524:23:10;;;2644:2;2629:18;;2616:32;;-1:-1:-1;2747:2:10;2732:18;;;2719:32;;2317:466;-1:-1:-1;2317:466:10:o;3519:173::-;3587:20;;-1:-1:-1;;;;;3636:31:10;;3626:42;;3616:70;;3682:1;3679;3672:12;3697:186;3756:6;3809:2;3797:9;3788:7;3784:23;3780:32;3777:52;;;3825:1;3822;3815:12;3777:52;3848:29;3867:9;3848:29;:::i;3888:127::-;3949:10;3944:3;3940:20;3937:1;3930:31;3980:4;3977:1;3970:15;4004:4;4001:1;3994:15;4020:241;4105:1;4098:5;4095:12;4085:143;;4150:10;4145:3;4141:20;4138:1;4131:31;4185:4;4182:1;4175:15;4213:4;4210:1;4203:15;4085:143;4237:18;;4020:241::o;4266:216::-;4416:2;4401:18;;4428:48;4405:9;4458:6;4428:48;:::i;4487:289::-;4573:6;4581;4634:2;4622:9;4613:7;4609:23;4605:32;4602:52;;;4650:1;4647;4640:12;4602:52;4673:29;4692:9;4673:29;:::i;:::-;4663:39;;4721:49;4766:2;4755:9;4751:18;4721:49;:::i;:::-;4711:59;;4487:289;;;;;:::o;5006:127::-;5067:10;5062:3;5058:20;5055:1;5048:31;5098:4;5095:1;5088:15;5122:4;5119:1;5112:15;5138:237;5210:9;;;5177:7;5235:9;;-1:-1:-1;;;5246:18:10;;5231:34;5228:60;;;5268:18;;:::i;:::-;5341:1;5332:7;5327:16;5324:1;5321:23;5317:1;5310:9;5307:38;5297:72;;5349:18;;:::i;5727:168::-;5800:9;;;5831;;5848:15;;;5842:22;;5828:37;5818:71;;5869:18;;:::i;5900:217::-;5940:1;5966;5956:132;;6010:10;6005:3;6001:20;5998:1;5991:31;6045:4;6042:1;6035:15;6073:4;6070:1;6063:15;5956:132;-1:-1:-1;6102:9:10;;5900:217::o;6122:128::-;6189:9;;;6210:11;;;6207:37;;;6224:18;;:::i;6255:375::-;6343:1;6361:5;6375:249;6396:1;6386:8;6383:15;6375:249;;;6446:4;6441:3;6437:14;6431:4;6428:24;6425:50;;;6455:18;;:::i;:::-;6505:1;6495:8;6491:16;6488:49;;;6519:16;;;;6488:49;6602:1;6598:16;;;;;6558:15;;6375:249;;;6255:375;;;;;;:::o;6635:902::-;6684:5;6714:8;6704:80;;-1:-1:-1;6755:1:10;6769:5;;6704:80;6803:4;6793:76;;-1:-1:-1;6840:1:10;6854:5;;6793:76;6885:4;6903:1;6898:59;;;;6971:1;6966:174;;;;6878:262;;6898:59;6928:1;6919:10;;6942:5;;;6966:174;7003:3;6993:8;6990:17;6987:43;;;7010:18;;:::i;:::-;-1:-1:-1;;7066:1:10;7052:16;;7125:5;;6878:262;;7224:2;7214:8;7211:16;7205:3;7199:4;7196:13;7192:36;7186:2;7176:8;7173:16;7168:2;7162:4;7159:12;7155:35;7152:77;7149:203;;;-1:-1:-1;7261:19:10;;;7337:5;;7149:203;7384:42;-1:-1:-1;;7409:8:10;7403:4;7384:42;:::i;:::-;7462:6;7458:1;7454:6;7450:19;7441:7;7438:32;7435:58;;;7473:18;;:::i;:::-;7511:20;;6635:902;-1:-1:-1;;;6635:902:10:o;7542:131::-;7602:5;7631:36;7658:8;7652:4;7631:36;:::i;8033:179::-;8111:13;;8164:22;8153:34;;8143:45;;8133:73;;8202:1;8199;8192:12;8217:571;8320:6;8328;8336;8344;8352;8405:3;8393:9;8384:7;8380:23;8376:33;8373:53;;;8422:1;8419;8412:12;8373:53;8445:39;8474:9;8445:39;:::i;:::-;8524:2;8509:18;;8503:25;8590:2;8575:18;;8569:25;8684:2;8669:18;;8663:25;8435:49;;-1:-1:-1;8503:25:10;;-1:-1:-1;8569:25:10;-1:-1:-1;8663:25:10;-1:-1:-1;8733:49:10;8777:3;8762:19;;8733:49;:::i;:::-;8723:59;;8217:571;;;;;;;;:::o;9543:230::-;9613:6;9666:2;9654:9;9645:7;9641:23;9637:32;9634:52;;;9682:1;9679;9672:12;9634:52;-1:-1:-1;9727:16:10;;9543:230;-1:-1:-1;9543:230:10:o;9778:345::-;9980:2;9962:21;;;10019:2;9999:18;;;9992:30;-1:-1:-1;;;10053:2:10;10038:18;;10031:51;10114:2;10099:18;;9778:345::o;11788:135::-;11827:3;11848:17;;;11845:43;;11868:18;;:::i;:::-;-1:-1:-1;11915:1:10;11904:13;;11788:135::o;12938:127::-;12999:10;12994:3;12990:20;12987:1;12980:31;13030:4;13027:1;13020:15;13054:4;13051:1;13044:15;13905:277;13972:6;14025:2;14013:9;14004:7;14000:23;13996:32;13993:52;;;14041:1;14038;14031:12;13993:52;14073:9;14067:16;14126:5;14119:13;14112:21;14105:5;14102:32;14092:60;;14148:1;14145;14138:12;14946:287;15136:25;;;15124:2;15109:18;;15170:57;15223:2;15208:18;;15200:6;15170:57;:::i;17708:125::-;17773:9;;;17794:10;;;17791:36;;;17807:18;;:::i;19247:430::-;19494:25;;;19550:2;19535:18;;19528:34;;;19593:2;19578:18;;19571:34;;;19481:3;19466:19;;19614:57;19667:2;19652:18;;19644:6;19614:57;:::i;:::-;19247:430;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1937000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_getPriceFeed(uint8)": "infinite",
								"airdropTokens()": "infinite",
								"buyTokens(uint8,uint256)": "infinite",
								"calculatePaymentAmount(uint8,uint256)": "infinite",
								"calculateTokenAmount(uint8,uint256)": "infinite",
								"contributionsInUSD(address)": "2575",
								"createSale(uint256,uint256,uint256)": "135254",
								"finalizeICO()": "infinite",
								"getCurrentSaleId()": "2327",
								"getHardCapReached()": "4494",
								"getInvestorCount()": "2326",
								"getSaleStartEndTime(uint256)": "13192",
								"getSoftCapReached()": "4465",
								"hardCapInUSD()": "2417",
								"initiateRefund()": "infinite",
								"investorPayments(address,uint8)": "infinite",
								"investors(uint256)": "4682",
								"isICOFinalized()": "2399",
								"isTokensAirdropped()": "2411",
								"owner()": "2377",
								"paymentMethodForInvestor(address)": "2650",
								"priceFeedBNB()": "2404",
								"priceFeedUSDC()": "2448",
								"priceFeedUSDT()": "2449",
								"renounceOwnership()": "infinite",
								"saleCount()": "2373",
								"sales(uint256)": "11105",
								"softCapInUSD()": "2352",
								"token()": "2469",
								"tokensBoughtByInvestor(address)": "2574",
								"totalFundsRaisedUSD()": "2395",
								"totalTokensSold()": "2329",
								"transferOwnership(address)": "28443",
								"usdc()": "2383",
								"usdt()": "2449"
							},
							"internal": {
								"_transferFundsToOwner()": "infinite",
								"getLatestSaleEndTime()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 270,
									"end": 13491,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1032,
									"end": 1066,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1032,
									"end": 1066,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1032,
									"end": 1066,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1072,
									"end": 1110,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1110,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1110,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2341,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2341,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2595,
									"end": 2605,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2595,
									"end": 2605,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1591,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1513,
									"end": 1531,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1513,
									"end": 1531,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2617,
									"end": 2622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "SWAP11",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2617,
									"end": 2631,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 2653,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2641,
									"end": 2669,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 2669,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 2669,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 2669,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2691,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2679,
									"end": 2707,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2707,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2707,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2707,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2721,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2717,
									"end": 2729,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2743,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2751,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2773,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2761,
									"end": 2812,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2875,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2938,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 155,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 99,
									"end": 130,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 99,
									"end": 130,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 89,
									"end": 131,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 131,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 79,
									"end": 149,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 79,
									"end": 149,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 145,
									"end": 146,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 143,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 135,
									"end": 147,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 79,
									"end": 149,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 79,
									"end": 149,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 310,
									"end": 316,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 324,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 326,
									"end": 332,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 340,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 342,
									"end": 348,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 356,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 358,
									"end": 364,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 372,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 419,
									"end": 422,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 407,
									"end": 416,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 398,
									"end": 405,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 394,
									"end": 417,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 390,
									"end": 423,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 387,
									"end": 440,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 387,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 387,
									"end": 440,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 436,
									"end": 437,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 434,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 426,
									"end": 438,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 387,
									"end": 440,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 387,
									"end": 440,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 462,
									"end": 478,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 487,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 522,
									"end": 527,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 487,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 487,
									"end": 528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 487,
									"end": 528,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 487,
									"end": 528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 597,
									"end": 599,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 600,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 582,
									"end": 600,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 576,
									"end": 601,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 547,
									"end": 552,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 547,
									"end": 552,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 610,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 576,
									"end": 601,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 610,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 610,
									"end": 653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 610,
									"end": 653,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 610,
									"end": 653,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 724,
									"end": 726,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 709,
									"end": 727,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 709,
									"end": 727,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 703,
									"end": 728,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 672,
									"end": 679,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 672,
									"end": 679,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 737,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 703,
									"end": 728,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 737,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 737,
									"end": 780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 737,
									"end": 780,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 737,
									"end": 780,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 872,
									"end": 874,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 857,
									"end": 875,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 851,
									"end": 876,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 968,
									"end": 971,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 953,
									"end": 972,
									"name": "DUP12",
									"source": 10
								},
								{
									"begin": 953,
									"end": 972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 947,
									"end": 973,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 1029,
									"end": 1048,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 1029,
									"end": 1048,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1023,
									"end": 1049,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 799,
									"end": 806,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 799,
									"end": 806,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 851,
									"end": 876,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 851,
									"end": 876,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 947,
									"end": 973,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1023,
									"end": 1049,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1058,
									"end": 1101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1175,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 1157,
									"end": 1176,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 1157,
									"end": 1176,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1177,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1120,
									"end": 1127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1120,
									"end": 1127,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1186,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1151,
									"end": 1177,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1186,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1186,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1186,
									"end": 1229,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1186,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1300,
									"end": 1303,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1285,
									"end": 1304,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 1285,
									"end": 1304,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1279,
									"end": 1305,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1248,
									"end": 1255,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1248,
									"end": 1255,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1314,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1279,
									"end": 1305,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1314,
									"end": 1357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1357,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1314,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1383,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1366,
									"end": 1383,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1366,
									"end": 1383,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1366,
									"end": 1383,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 160,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1394,
									"end": 1597,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1394,
									"end": 1597,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 13491,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097fdccc1a6ae84938e4f33af1e10e8f4f1b5500b38e2900d7a9818a41fe1349164736f6c634300081a0033",
									".code": [
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "C211E1F9"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "DF4E0593"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "DF4E0593"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "E8E87389"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "EFDCDB45"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "C211E1F9"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "C81FFDEA"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "D1F3B23E"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "D3D9D1E4"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "960524E3"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "960524E3"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "99131E7E"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "A1E89AEC"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "B5F522F7"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "C1560A14"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "91152C5C"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "91D8730A"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "940C333E"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "3E413BEE"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "63B20117"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "63B20117"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "6C1909ED"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "721BC38B"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "7FB12001"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "3E413BEE"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "3FEB5F2B"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "4DEE1DC3"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "62A469E9"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "212EA247"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "212EA247"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "2151206E"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "23CC75A8"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "2F48AB7D"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "5834E67"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "6E4D36F"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "115AFC3A"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "117D260F"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 198,
											"end": 219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 198,
											"end": 219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 294,
											"end": 328,
											"name": "PUSH",
											"source": 10,
											"value": "44697265637420424E42207472616E7366657273206E6F7420616C6C6F776564"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 267,
											"end": 329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12629,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 13491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4788,
											"end": 5935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4788,
											"end": 5935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13189,
											"end": 13201,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 13189,
											"end": 13201,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13185,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 13166,
											"end": 13185,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13201,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13201,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1229,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1230,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1231,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13092,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1050,
											"end": 1237,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3061,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3061,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5938,
											"end": 7065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5938,
											"end": 7065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 776,
											"end": 803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 776,
											"end": 803,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 776,
											"end": 803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 776,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 776,
											"end": 803,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 776,
											"end": 803,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 9255,
											"end": 9581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1838,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1247,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1171,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1171,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1110,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 394,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 394,
											"end": 436,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 394,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 394,
											"end": 436,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 394,
											"end": 436,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 394,
											"end": 436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 394,
											"end": 436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 394,
											"end": 436,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 912,
											"end": 942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 912,
											"end": 942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 912,
											"end": 942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 912,
											"end": 942,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 912,
											"end": 942,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 912,
											"end": 942,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3932,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3932,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 872,
											"end": 906,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 872,
											"end": 906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 872,
											"end": 906,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 906,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 872,
											"end": 906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 872,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 872,
											"end": 906,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 872,
											"end": 906,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11010,
											"end": 12552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 10257,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13312,
											"end": 13324,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 13312,
											"end": 13324,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13308,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 13289,
											"end": 13308,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 13215,
											"end": 13332,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7072,
											"end": 9249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 7072,
											"end": 9249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13436,
											"end": 13445,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 13436,
											"end": 13452,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 13338,
											"end": 13489,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 347,
											"end": 388,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1270,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3097,
											"end": 3099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3143,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3152,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3185,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3239,
											"end": 3253,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3254,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3226,
											"end": 3229,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3211,
											"end": 3230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3255,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3031,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2788,
											"end": 3261,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 809,
											"end": 836,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 809,
											"end": 836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 809,
											"end": 836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 836,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 809,
											"end": 836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 809,
											"end": 836,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 809,
											"end": 836,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 809,
											"end": 836,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 12854,
											"end": 13086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13022,
											"end": 13031,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 13022,
											"end": 13031,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12945,
											"end": 12963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13021,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3465,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3498,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3508,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3508,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12854,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3266,
											"end": 3514,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1313,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1366,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1066,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 442,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 442,
											"end": 484,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 442,
											"end": 484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 484,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 442,
											"end": 484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 442,
											"end": 484,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 442,
											"end": 484,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1501,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1501,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1372,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1429,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1573,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 749,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 749,
											"end": 770,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 749,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 749,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 749,
											"end": 770,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 749,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 749,
											"end": 770,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 749,
											"end": 770,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4947,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "2540BE400"
										},
										{
											"begin": 4950,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4964,
											"end": 4977,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4950,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4978,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4950,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 4950,
											"end": 4999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4950,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4999,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 4950,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4935,
											"end": 4999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5026,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5624,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9A58D94819995959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5681,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5380,
											"end": 5722,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5084,
											"end": 5102,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5084,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5132,
											"end": 5137,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5102,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5102,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5304,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5291,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5325,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5287,
											"end": 5808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5363,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5380,
											"end": 5393,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5376,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5363,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5363,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5363,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5363,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5362,
											"end": 5418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5362,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5418,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5362,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5287,
											"end": 5808,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5808,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5287,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5476,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5441,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5476,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5441,
											"end": 5515,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5480,
											"end": 5493,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5480,
											"end": 5515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5515,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5441,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5557,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5527,
											"end": 5553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5556,
											"end": 5557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5617,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5617,
											"end": 5640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5640,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5617,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5612,
											"end": 5641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5612,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5612,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5641,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5612,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5595,
											"end": 5642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5608,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5595,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5642,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5595,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5675,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5568,
											"end": 5642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5688,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5675,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5708,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5675,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5674,
											"end": 5733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5674,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5733,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5674,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7862,
											"end": 7883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 7899,
											"end": 7917,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7899,
											"end": 7917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7899,
											"end": 7917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7892,
											"end": 7922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7986,
											"name": "PUSH",
											"source": 10,
											"value": "556E737570706F72746564207061796D656E74206D6574686F64000000000000"
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 7678,
											"end": 8028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5437,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5818,
											"end": 5837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5840,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5840,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5840,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5840,
											"end": 5882,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 5840,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 5839,
											"end": 5900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5839,
											"end": 5900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5900,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 5839,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5818,
											"end": 5900,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 5935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3184,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3180,
											"end": 3326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3237,
											"end": 3249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3287,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 3259,
											"end": 3287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3259,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3234,
											"end": 3289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3289,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3694,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3180,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3375,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3340,
											"end": 3353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3340,
											"end": 3375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3375,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3336,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3336,
											"end": 3484,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3429,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3416,
											"end": 3429,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3416,
											"end": 3429,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3445,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 3416,
											"end": 3445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3429,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3447,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3336,
											"end": 3484,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3336,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3533,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3498,
											"end": 3511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3498,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3533,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3494,
											"end": 3642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3603,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3603,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3605,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5938,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6079,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8995,
											"end": 8997,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 8998,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9034,
											"end": 9036,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9007,
											"end": 9037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9107,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E20616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9046,
											"end": 9108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9124,
											"end": 9142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9170,
											"end": 9189,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9170,
											"end": 9189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8793,
											"end": 9195,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6056,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "2540BE400"
										},
										{
											"begin": 6144,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6158,
											"end": 6171,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 6144,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6172,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6144,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6144,
											"end": 6195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6144,
											"end": 6195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6195,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6144,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6129,
											"end": 6195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6237,
											"end": 6246,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5624,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9A58D94819995959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5681,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5380,
											"end": 5722,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6229,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12730,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6345,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9384,
											"end": 9405,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206163746976652073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 9200,
											"end": 9538,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6324,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6408,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6404,
											"end": 6408,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6404,
											"end": 6408,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6419,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 6397,
											"end": 6419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6397,
											"end": 6434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6397,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6441,
											"end": 6458,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6375,
											"end": 6434,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6375,
											"end": 6434,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6607,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6607,
											"end": 6618,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6607,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6607,
											"end": 6636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6607,
											"end": 6636,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6607,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6606,
											"end": 6652,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6606,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6652,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6606,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6659,
											"end": 6680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6659,
											"end": 6680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6703,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6690,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6724,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6686,
											"end": 7036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6802,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6753,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6753,
											"end": 6770,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6753,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6753,
											"end": 6785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6753,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6753,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6752,
											"end": 6803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6752,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6803,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6752,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6686,
											"end": 7036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 7036,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6686,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6820,
											"end": 6833,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6820,
											"end": 6855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6855,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6894,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 6820,
											"end": 6894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6859,
											"end": 6872,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6859,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6894,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6894,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 6820,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 7036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6816,
											"end": 7036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 6969,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6923,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6923,
											"end": 6940,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 6951,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": 6923,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6923,
											"end": 6952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 9255,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1531,
											"end": 1542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2988,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9378,
											"end": 9390,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9378,
											"end": 9390,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9355,
											"end": 9374,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9355,
											"end": 9374,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9355,
											"end": 9390,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9355,
											"end": 9390,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9334,
											"end": 9472,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9334,
											"end": 9472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10330,
											"end": 10332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9334,
											"end": 9472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10312,
											"end": 10333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 10349,
											"end": 10367,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10349,
											"end": 10367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10342,
											"end": 10372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10442,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F742066696E616C697A653A20536F667420636170206E6F74207265"
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10381,
											"end": 10443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10479,
											"end": 10505,
											"name": "PUSH",
											"source": 10,
											"value": "6163686564206F722073616C65206973206F6E676F696E670000000000000000"
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10452,
											"end": 10506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10542,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10523,
											"end": 10542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10128,
											"end": 10548,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9334,
											"end": 9472,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9493,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 9479,
											"end": 9500,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9500,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9479,
											"end": 9500,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9496,
											"end": 9500,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9479,
											"end": 9500,
											"modifierDepth": 3,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 9500,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9510,
											"end": 9531,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 9510,
											"end": 9533,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9533,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9510,
											"end": 9533,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9561,
											"end": 9576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9561,
											"end": 9576,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9577,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9577,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9C4B134DA32AAB35252391880A9F2A3C13A760D7817AE8823F2B301D3522045A"
										},
										{
											"begin": 9548,
											"end": 9577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9577,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9255,
											"end": 9581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2988,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4123,
											"end": 4138,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4120,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4138,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4208,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10757,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4089,
											"end": 4208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10758,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10796,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10867,
											"name": "PUSH",
											"source": 10,
											"value": "53746172742074696D65206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10868,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63757272656E742074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10884,
											"end": 10902,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10884,
											"end": 10902,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10919,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10955,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10936,
											"end": 10955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10553,
											"end": 10961,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4089,
											"end": 4208,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4250,
											"end": 4260,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4247,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4260,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4326,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4326,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11168,
											"end": 11170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4218,
											"end": 4326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11150,
											"end": 11171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11207,
											"end": 11209,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11180,
											"end": 11210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11246,
											"end": 11280,
											"name": "PUSH",
											"source": 10,
											"value": "456E642074696D65206D7573742062652067726561746572207468616E207374"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11219,
											"end": 11281,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6172742074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11315,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11297,
											"end": 11315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11297,
											"end": 11315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11364,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11345,
											"end": 11364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10966,
											"end": 11370,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4218,
											"end": 4326,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12823,
											"end": 12832,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12823,
											"end": 12832,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 12798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12822,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4367,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4392,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4336,
											"end": 4462,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4336,
											"end": 4462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4462,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11577,
											"end": 11579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4336,
											"end": 4462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11559,
											"end": 11580,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11618,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 11596,
											"end": 11614,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11596,
											"end": 11614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11596,
											"end": 11614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11589,
											"end": 11619,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11655,
											"end": 11689,
											"name": "PUSH",
											"source": 10,
											"value": "4E65772073616C65206D75737420737461727420616674657220746865206C61"
										},
										{
											"begin": 11635,
											"end": 11653,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11635,
											"end": 11653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11635,
											"end": 11653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11628,
											"end": 11690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73742073616C6520656E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11706,
											"end": 11724,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11706,
											"end": 11724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11706,
											"end": 11724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11699,
											"end": 11741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11777,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11758,
											"end": 11777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 11375,
											"end": 11783,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4336,
											"end": 4462,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4482,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4484,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4484,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4473,
											"end": 4484,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4484,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 4473,
											"end": 4484,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4513,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4697,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4736,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4775,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12130,
											"end": 12155,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12130,
											"end": 12155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12130,
											"end": 12155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12164,
											"end": 12198,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12164,
											"end": 12198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12164,
											"end": 12198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12241,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "63B43FA153147ADE1DE28ED76841CDBC34E510ED94DD1FF5A88E278B0B1AD9BA"
										},
										{
											"begin": 4712,
											"end": 4775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12103,
											"end": 12121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4775,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 4782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11010,
											"end": 12552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 1531,
											"end": 1542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2988,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12823,
											"end": 12832,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12823,
											"end": 12832,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 12798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12822,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12833,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11099,
											"end": 11114,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 11099,
											"end": 11139,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11091,
											"end": 11156,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11091,
											"end": 11156,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11091,
											"end": 11156,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11091,
											"end": 11156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12436,
											"end": 12457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12493,
											"end": 12495,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206F6E676F696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12512,
											"end": 12530,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12512,
											"end": 12530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12512,
											"end": 12530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12505,
											"end": 12547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12564,
											"end": 12582,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12564,
											"end": 12582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 12252,
											"end": 12588,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 11091,
											"end": 11156,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11204,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11192,
											"end": 11204,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11189,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 11170,
											"end": 11189,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11204,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11162,
											"end": 11226,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11162,
											"end": 11226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12795,
											"end": 12797,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11162,
											"end": 11226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12834,
											"end": 12836,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 12814,
											"end": 12832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12814,
											"end": 12832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 12832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12837,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DBD99D0818D85C081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12846,
											"end": 12892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 12593,
											"end": 12933,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 11162,
											"end": 11226,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11267,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11258,
											"end": 11274,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11233,
											"end": 11255,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11304,
											"end": 11318,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11301,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11318,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11351,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11363,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11364,
											"end": 11365,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11354,
											"end": 11366,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11366,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11455,
											"end": 11456,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11451,
											"end": 11452,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11456,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11451,
											"end": 11456,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11456,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11505,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11522,
											"end": 11523,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11508,
											"end": 11524,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11508,
											"end": 11524,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11581,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11552,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11571,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11555,
											"end": 11581,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11581,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11524,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11538,
											"end": 11552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11555,
											"end": 11596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11555,
											"end": 11596,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11555,
											"end": 11596,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11555,
											"end": 11596,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11596,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11596,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 11625,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11621,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11615,
											"end": 11625,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11611,
											"end": 12507,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11611,
											"end": 12507,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11611,
											"end": 12507,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11671,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11689,
											"end": 11690,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11661,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11645,
											"end": 11671,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11671,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11689,
											"end": 11690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11685,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11645,
											"end": 11686,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11645,
											"end": 11686,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11686,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11690,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11725,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11712,
											"end": 11746,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11712,
											"end": 11746,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11708,
											"end": 12422,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11708,
											"end": 12422,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11771,
											"end": 11780,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11802,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11786,
											"end": 11808,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11822,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11770,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11770,
											"end": 11827,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11770,
											"end": 11827,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11857,
											"end": 11861,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11849,
											"end": 11883,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11849,
											"end": 11883,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 13484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11849,
											"end": 11883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13521,
											"end": 13523,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13494,
											"end": 13524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109390881C99599D5B990819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13580,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 13280,
											"end": 13621,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 11849,
											"end": 11883,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11748,
											"end": 11902,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11708,
											"end": 12422,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 11708,
											"end": 12422,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11708,
											"end": 12422,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11708,
											"end": 12422,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11929,
											"end": 11947,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11912,
											"end": 11925,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11912,
											"end": 11947,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11947,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11986,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11986,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 11912,
											"end": 11986,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11968,
											"end": 11986,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11951,
											"end": 11964,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11951,
											"end": 11986,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11986,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 11986,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 11912,
											"end": 11986,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11908,
											"end": 12422,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11908,
											"end": 12422,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 11908,
											"end": 12422,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12010,
											"end": 12027,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12065,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12030,
											"end": 12043,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 12030,
											"end": 12065,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12065,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12138,
											"end": 12142,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12138,
											"end": 12142,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12099,
											"end": 12103,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 12099,
											"end": 12103,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12099,
											"end": 12103,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12030,
											"end": 12143,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13800,
											"end": 13851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12010,
											"end": 12143,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12010,
											"end": 12143,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12198,
											"end": 12217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12217,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12217,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 12198,
											"end": 12217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13773,
											"end": 13791,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13773,
											"end": 13791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12198,
											"end": 12235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 12198,
											"end": 12235,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 12198,
											"end": 12235,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12165,
											"end": 12309,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12165,
											"end": 12309,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12165,
											"end": 12309,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12165,
											"end": 12309,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12165,
											"end": 12309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12165,
											"end": 12309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14391,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12165,
											"end": 12309,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12165,
											"end": 12309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12165,
											"end": 12309,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14371,
											"end": 14392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14430,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 14408,
											"end": 14426,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14408,
											"end": 14426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14408,
											"end": 14426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14467,
											"end": 14493,
											"name": "PUSH",
											"source": 10,
											"value": "537461626C65636F696E20726566756E64206661696C65640000000000000000"
										},
										{
											"begin": 14447,
											"end": 14465,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14447,
											"end": 14465,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14447,
											"end": 14465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14440,
											"end": 14494,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14529,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14511,
											"end": 14529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12309,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 14187,
											"end": 14535,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11908,
											"end": 12422,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 11908,
											"end": 12422,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12356,
											"end": 12403,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12356,
											"end": 12403,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12356,
											"end": 12403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12356,
											"end": 12403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12356,
											"end": 12403,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12356,
											"end": 12403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12356,
											"end": 12403,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14781,
											"end": 14783,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14754,
											"end": 14784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14820,
											"end": 14854,
											"name": "PUSH",
											"source": 10,
											"value": "556E737570706F72746564207061796D656E74206D6574686F6420666F722072"
										},
										{
											"begin": 14800,
											"end": 14818,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14800,
											"end": 14818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14800,
											"end": 14818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14793,
											"end": 14855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19599D5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14871,
											"end": 14889,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14871,
											"end": 14889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14871,
											"end": 14889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14864,
											"end": 14899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14916,
											"end": 14935,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14916,
											"end": 14935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12356,
											"end": 12403,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 14540,
											"end": 14941,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11908,
											"end": 12422,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 11908,
											"end": 12422,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12460,
											"end": 12468,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3829AB241648D7348F97E4F77D36451330F2276EA8EEB3428E462012F9699E7"
										},
										{
											"begin": 12470,
											"end": 12476,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12478,
											"end": 12491,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 12444,
											"end": 12492,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12492,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 11611,
											"end": 12507,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11611,
											"end": 12507,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11458,
											"end": 11461,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11458,
											"end": 11461,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11433,
											"end": 12517,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11320,
											"end": 11323,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11320,
											"end": 11323,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11280,
											"end": 12523,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12528,
											"end": 12542,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 12528,
											"end": 12549,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12549,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12528,
											"end": 12549,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12549,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12528,
											"end": 12549,
											"modifierDepth": 3,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12528,
											"end": 12549,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 10257,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 1531,
											"end": 1542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 1531,
											"end": 1544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2997,
											"end": 3011,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2988,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2988,
											"end": 3037,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10363,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 10345,
											"end": 10363,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10363,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10345,
											"end": 10363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10363,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10345,
											"end": 10363,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10345,
											"end": 10363,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10363,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10336,
											"end": 10393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10336,
											"end": 10393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15440,
											"end": 15442,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10336,
											"end": 10393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15422,
											"end": 15443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15479,
											"end": 15481,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 15459,
											"end": 15477,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15459,
											"end": 15477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15452,
											"end": 15482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15518,
											"end": 15545,
											"name": "PUSH",
											"source": 10,
											"value": "41697264726F7020616C726561647920636F6D706C6574656400000000000000"
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15491,
											"end": 15546,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15563,
											"end": 15581,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15563,
											"end": 15581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 15238,
											"end": 15587,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 10336,
											"end": 10393,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10438,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 10429,
											"end": 10445,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10404,
											"end": 10426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10489,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10471,
											"end": 10472,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10471,
											"end": 10489,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10522,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10534,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 10535,
											"end": 10536,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10525,
											"end": 10537,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10525,
											"end": 10537,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10592,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10613,
											"end": 10964,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 10613,
											"end": 10964,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10737,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 10732,
											"end": 10737,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10717,
											"end": 10729,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10717,
											"end": 10729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10732,
											"end": 10737,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10750,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 10751,
											"end": 10758,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10758,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 10751,
											"end": 10758,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15812,
											"end": 15844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15844,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15794,
											"end": 15845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15881,
											"end": 15913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15881,
											"end": 15913,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15881,
											"end": 15913,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15957,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15785,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15767,
											"end": 15785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10732,
											"end": 10783,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 10732,
											"end": 10783,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10717,
											"end": 10783,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10717,
											"end": 10783,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10805,
											"end": 10812,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10797,
											"end": 10838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16170,
											"end": 16172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10797,
											"end": 10838,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16211,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 16189,
											"end": 16207,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16189,
											"end": 16207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16189,
											"end": 16207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16182,
											"end": 16212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16228,
											"end": 16246,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16228,
											"end": 16246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16228,
											"end": 16246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16221,
											"end": 16272,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16289,
											"end": 16307,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16289,
											"end": 16307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 15968,
											"end": 16313,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 10797,
											"end": 10838,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10930,
											"end": 10938,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9BDCD0CC5503FB9A8DD7311D9617E33108C4B7C8948CC544B16C1FD63C6F475B"
										},
										{
											"begin": 10940,
											"end": 10952,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1039,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 868,
											"end": 1045,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10914,
											"end": 10953,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 10635,
											"end": 10964,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10613,
											"end": 10964,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 10613,
											"end": 10964,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10491,
											"end": 10494,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10491,
											"end": 10494,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 10451,
											"end": 10970,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10976,
											"end": 10994,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10976,
											"end": 11001,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 11001,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10976,
											"end": 11001,
											"modifierDepth": 3,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2997,
											"end": 3011,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2988,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 2988,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7200,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7211,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7182,
											"end": 7239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7182,
											"end": 7239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16520,
											"end": 16522,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7182,
											"end": 7239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16502,
											"end": 16523,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16559,
											"end": 16561,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 16539,
											"end": 16557,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16539,
											"end": 16557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16539,
											"end": 16557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16532,
											"end": 16562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16598,
											"end": 16623,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E65722063616E6E6F742062757920746F6B656E73000000000000000000"
										},
										{
											"begin": 16578,
											"end": 16596,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16578,
											"end": 16596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16578,
											"end": 16596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16571,
											"end": 16624,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16641,
											"end": 16659,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16641,
											"end": 16659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 16318,
											"end": 16665,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 7182,
											"end": 7239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7253,
											"end": 7262,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7267,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7245,
											"end": 7279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7245,
											"end": 7279,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7245,
											"end": 7279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16872,
											"end": 16874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7245,
											"end": 7279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16854,
											"end": 16875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16912,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 16891,
											"end": 16909,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16891,
											"end": 16909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16891,
											"end": 16909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16884,
											"end": 16913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2073616C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16922,
											"end": 16959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 16670,
											"end": 17000,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 7245,
											"end": 7279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 7293,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7309,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7293,
											"end": 7309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7309,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7293,
											"end": 7321,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7321,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7293,
											"end": 7321,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7285,
											"end": 7348,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7285,
											"end": 7348,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7285,
											"end": 7348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7285,
											"end": 7348,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17189,
											"end": 17210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17246,
											"end": 17248,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 17226,
											"end": 17244,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17226,
											"end": 17244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17226,
											"end": 17244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17219,
											"end": 17249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D85B1948185B1C9958591E48199A5B985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17265,
											"end": 17283,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17265,
											"end": 17283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17265,
											"end": 17283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17258,
											"end": 17310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17327,
											"end": 17345,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17327,
											"end": 17345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 17005,
											"end": 17351,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 7285,
											"end": 7348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7354,
											"end": 7373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7383,
											"end": 7417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 7383,
											"end": 7417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7417,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7379,
											"end": 8369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 7379,
											"end": 8369,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7496,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7487,
											"end": 7500,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7479,
											"end": 7528,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7479,
											"end": 7528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17558,
											"end": 17560,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7479,
											"end": 7528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17540,
											"end": 17561,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17597,
											"end": 17599,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17636,
											"end": 17661,
											"name": "PUSH",
											"source": 10,
											"value": "53656E6420612076616C696420424E4220616D6F756E74000000000000000000"
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17609,
											"end": 17662,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17679,
											"end": 17697,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17679,
											"end": 17697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 17356,
											"end": 17703,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 7479,
											"end": 7528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 7573,
											"end": 7586,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7588,
											"end": 7597,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7552,
											"end": 7598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 7552,
											"end": 7598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7625,
											"end": 7635,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7608,
											"end": 7636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7598,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7655,
											"end": 7664,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 7650,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7608,
											"end": 7651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7608,
											"end": 7651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7608,
											"end": 7651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 7608,
											"end": 7664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 7608,
											"end": 7664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7664,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 8369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 7379,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 8369,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7379,
											"end": 8369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 7379,
											"end": 8369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7690,
											"end": 7703,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7690,
											"end": 7725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7725,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 7690,
											"end": 7772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7754,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7737,
											"end": 7750,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7737,
											"end": 7772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 7772,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 7690,
											"end": 7772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 8369,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 8369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7677,
											"end": 8369,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7835,
											"end": 7852,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7827,
											"end": 7888,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7827,
											"end": 7888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18040,
											"end": 18042,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7827,
											"end": 7888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18022,
											"end": 18043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18079,
											"end": 18081,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 18059,
											"end": 18077,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18059,
											"end": 18077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18052,
											"end": 18082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18118,
											"end": 18151,
											"name": "PUSH",
											"source": 10,
											"value": "456E74657220612076616C696420737461626C65636F696E20616D6F756E7400"
										},
										{
											"begin": 18098,
											"end": 18116,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18098,
											"end": 18116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18098,
											"end": 18116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18091,
											"end": 18152,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18169,
											"end": 18187,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 18169,
											"end": 18187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 17838,
											"end": 18193,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 7827,
											"end": 7888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7927,
											"end": 7940,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7927,
											"end": 7962,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7962,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7986,
											"end": 7990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7986,
											"end": 7990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7972,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7972,
											"end": 7976,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7972,
											"end": 7976,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 7927,
											"end": 7991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8009,
											"end": 8072,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8009,
											"end": 8072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8043,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8009,
											"end": 8072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15794,
											"end": 15845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8056,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15957,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8009,
											"end": 8032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 8009,
											"end": 8032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15767,
											"end": 15785,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15767,
											"end": 15785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8072,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 8009,
											"end": 8072,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 8009,
											"end": 8072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8001,
											"end": 8102,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8001,
											"end": 8102,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8102,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18400,
											"end": 18402,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8001,
											"end": 8102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18382,
											"end": 18403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18439,
											"end": 18441,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 18419,
											"end": 18437,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18419,
											"end": 18437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18419,
											"end": 18437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18412,
											"end": 18442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18478,
											"end": 18506,
											"name": "PUSH",
											"source": 10,
											"value": "537461626C65636F696E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 18458,
											"end": 18476,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18458,
											"end": 18476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18458,
											"end": 18476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18451,
											"end": 18507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18524,
											"end": 18542,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 18524,
											"end": 18542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 18198,
											"end": 18548,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 8001,
											"end": 8102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8183,
											"end": 8233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 8204,
											"end": 8217,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8219,
											"end": 8232,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8183,
											"end": 8203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 8183,
											"end": 8233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8183,
											"end": 8233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 8183,
											"end": 8233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8270,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8243,
											"end": 8271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8233,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8233,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8290,
											"end": 8303,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8290,
											"end": 8303,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8285,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8243,
											"end": 8286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8243,
											"end": 8286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8243,
											"end": 8286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 8243,
											"end": 8303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 8243,
											"end": 8303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8243,
											"end": 8303,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 8369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 7677,
											"end": 8369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 8369,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 8369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 7677,
											"end": 8369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8396,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8397,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18755,
											"end": 18757,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 18758,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18794,
											"end": 18796,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 18774,
											"end": 18792,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18774,
											"end": 18792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18774,
											"end": 18792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18767,
											"end": 18797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D1BDAD95B88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18813,
											"end": 18831,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18813,
											"end": 18831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18813,
											"end": 18831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18806,
											"end": 18856,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 18891,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 18873,
											"end": 18891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 18553,
											"end": 18897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 8374,
											"end": 8422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8484,
											"end": 8506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 8523,
											"end": 8539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8539,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8523,
											"end": 8539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8539,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8523,
											"end": 8553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8553,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8520,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8509,
											"end": 8553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 8509,
											"end": 8553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 8509,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8509,
											"end": 8568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 8509,
											"end": 8568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8484,
											"end": 8568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8484,
											"end": 8568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8632,
											"end": 8644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8632,
											"end": 8644,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8614,
											"end": 8628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8592,
											"end": 8611,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 8592,
											"end": 8628,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 8592,
											"end": 8628,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8628,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 8592,
											"end": 8628,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8644,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8644,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8575,
											"end": 8678,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8575,
											"end": 8678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8575,
											"end": 8678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19104,
											"end": 19106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8575,
											"end": 8678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19086,
											"end": 19107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19143,
											"end": 19145,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 19123,
											"end": 19141,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19123,
											"end": 19141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19123,
											"end": 19141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19116,
											"end": 19146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12185C990818D85C081C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19155,
											"end": 19201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19218,
											"end": 19236,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 19218,
											"end": 19236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 18902,
											"end": 19242,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 8575,
											"end": 8678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8714,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 8685,
											"end": 8715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 8733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 8733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 8685,
											"end": 8733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 8733,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 8733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 8685,
											"end": 8733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8733,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8762,
											"end": 8776,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8739,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 8739,
											"end": 8776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 8739,
											"end": 8776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8788,
											"end": 8797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8788,
											"end": 8797,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 8782,
											"end": 8798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8782,
											"end": 8809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8824,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8824,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 8782,
											"end": 8824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8824,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 8782,
											"end": 8824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8782,
											"end": 8824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 8860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8830,
											"end": 8845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 8830,
											"end": 8860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 8830,
											"end": 8860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8860,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 8904,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8871,
											"end": 8905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8905,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8871,
											"end": 8910,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8867,
											"end": 8955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 8867,
											"end": 8955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "PUSH",
											"source": 9,
											"value": "DF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7"
										},
										{
											"begin": 8922,
											"end": 8948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8922,
											"end": 8948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 8947,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8948,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8867,
											"end": 8955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 8867,
											"end": 8955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8983,
											"end": 8993,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8960,
											"end": 8994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8998,
											"end": 9009,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8998,
											"end": 9009,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 8994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8998,
											"end": 9009,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8998,
											"end": 9009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 8960,
											"end": 9009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 8960,
											"end": 9009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9040,
											"end": 9050,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9015,
											"end": 9051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9054,
											"end": 9067,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9054,
											"end": 9067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9054,
											"end": 9067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9015,
											"end": 9067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9015,
											"end": 9067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9067,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9124,
											"end": 9133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9124,
											"end": 9133,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 9164,
											"end": 9180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9180,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9164,
											"end": 9194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9194,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9114,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DBCEF474A632721725D49E3F35D9DEFE0257100B01D1E4B4B135B14D6FE296E8"
										},
										{
											"begin": 9079,
											"end": 9246,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 9079,
											"end": 9246,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9154,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9217,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9227,
											"end": 9240,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 9227,
											"end": 9240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 9079,
											"end": 9246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9079,
											"end": 9246,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 9249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 9249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 9249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1642,
											"end": 1845,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9587,
											"end": 10251,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 9587,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9667,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 9663,
											"end": 9667,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9691,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9634,
											"end": 9653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9663,
											"end": 9667,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9678,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 9656,
											"end": 9678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 9656,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 9656,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9779,
											"end": 9783,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 9779,
											"end": 9783,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9803,
											"end": 9807,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9634,
											"end": 9693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9634,
											"end": 9693,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9723,
											"end": 9744,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 9723,
											"end": 9744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9699,
											"end": 9720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9779,
											"end": 9783,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9779,
											"end": 9783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9794,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 9772,
											"end": 9794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 9772,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 9772,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9750,
											"end": 9809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9750,
											"end": 9809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9838,
											"end": 9839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9823,
											"end": 9836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9839,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 9854,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9843,
											"end": 9856,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9875,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 9823,
											"end": 9875,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9860,
											"end": 9875,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9875,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 9823,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19884,
											"end": 19886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19866,
											"end": 19887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19923,
											"end": 19925,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 19903,
											"end": 19921,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19903,
											"end": 19921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19903,
											"end": 19921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19896,
											"end": 19926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19962,
											"end": 19989,
											"name": "PUSH",
											"source": 10,
											"value": "62616C616E636573206D757374206E6F74206265205A65726F00000000000000"
										},
										{
											"begin": 19942,
											"end": 19960,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19942,
											"end": 19960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19942,
											"end": 19960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19935,
											"end": 19990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20007,
											"end": 20025,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 20007,
											"end": 20025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 19682,
											"end": 20031,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 9815,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9938,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9938,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10016,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20238,
											"end": 20240,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20220,
											"end": 20241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20277,
											"end": 20279,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 20257,
											"end": 20275,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20257,
											"end": 20275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20257,
											"end": 20275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20250,
											"end": 20280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20296,
											"end": 20314,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 20296,
											"end": 20314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20296,
											"end": 20314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20289,
											"end": 20334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20351,
											"end": 20369,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 20351,
											"end": 20369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 20036,
											"end": 20375,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 10001,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10094,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "tag",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13800,
											"end": 13851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13791,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13773,
											"end": 13791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "tag",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10073,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 10073,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20582,
											"end": 20584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20564,
											"end": 20585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20621,
											"end": 20623,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 20601,
											"end": 20619,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20601,
											"end": 20619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20601,
											"end": 20619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20594,
											"end": 20624,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D115081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20633,
											"end": 20683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20700,
											"end": 20718,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 20700,
											"end": 20718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 20380,
											"end": 20724,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 10065,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10186,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 10182,
											"end": 10186,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10182,
											"end": 10186,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10196,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 10197,
											"end": 10204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10204,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 10197,
											"end": 10204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13800,
											"end": 13851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13867,
											"end": 13885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13791,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13773,
											"end": 13791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10175,
											"end": 10218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "tag",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 10175,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20931,
											"end": 20933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20970,
											"end": 20972,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 20950,
											"end": 20968,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20950,
											"end": 20968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20950,
											"end": 20968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20943,
											"end": 20973,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D110C81D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20989,
											"end": 21007,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 20989,
											"end": 21007,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20989,
											"end": 21007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20982,
											"end": 21032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21049,
											"end": 21067,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 21049,
											"end": 21067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 20729,
											"end": 21073,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 10167,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 10251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 10251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 10251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 10251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9587,
											"end": 10251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 375,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 375,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 454,
											"end": 474,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 454,
											"end": 474,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 503,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 493,
											"end": 505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 493,
											"end": 505,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 483,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 483,
											"end": 523,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 509,
											"end": 521,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 483,
											"end": 523,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 483,
											"end": 523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 375,
											"end": 529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 375,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 375,
											"end": 529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 375,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 534,
											"end": 863,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 534,
											"end": 863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 681,
											"end": 683,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 678,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 660,
											"end": 667,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 656,
											"end": 679,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 652,
											"end": 684,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 649,
											"end": 701,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 649,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 649,
											"end": 701,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 697,
											"end": 698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 695,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 687,
											"end": 699,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 649,
											"end": 701,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 649,
											"end": 701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 720,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 720,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 720,
											"end": 760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 720,
											"end": 760,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 720,
											"end": 760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 760,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 814,
											"end": 832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 801,
											"end": 833,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 801,
											"end": 833,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 534,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1457,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1242,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1347,
											"end": 1370,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1375,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 1411,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 1411,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1451,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 2076,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 1960,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1933,
											"end": 1965,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1980,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 1930,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 2076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2783,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2317,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2451,
											"end": 2460,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2461,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2466,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2483,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 2431,
											"end": 2483,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2479,
											"end": 2480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2481,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2483,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 2431,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2524,
											"end": 2547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2547,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2547,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2648,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2648,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2751,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3692,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 3519,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3587,
											"end": 3607,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3587,
											"end": 3607,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3636,
											"end": 3667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3667,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3668,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 3616,
											"end": 3686,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3684,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3883,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3697,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3811,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3795,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3807,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3780,
											"end": 3812,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3825,
											"end": 3826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3827,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 3848,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 4015,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3888,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3949,
											"end": 3959,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3940,
											"end": 3960,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 3985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4009,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4261,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 4020,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4107,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 4085,
											"end": 4228,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4160,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4141,
											"end": 4161,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4182,
											"end": 4183,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4175,
											"end": 4190,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4217,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4228,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 4085,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4237,
											"end": 4255,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4266,
											"end": 4482,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4266,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4405,
											"end": 4414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4464,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 4428,
											"end": 4476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4776,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4487,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4605,
											"end": 4637,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4654,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 4602,
											"end": 4654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4648,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4652,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4654,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 4602,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 4673,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 4721,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4770,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 4721,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4776,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4776,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5006,
											"end": 5133,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 5006,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5126,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5127,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5138,
											"end": 5375,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 5138,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5244,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5264,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5264,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5265,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 5268,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "tag",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5327,
											"end": 5343,
											"name": "SDIV",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5325,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5344,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5319,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5345,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5297,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5297,
											"end": 5369,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 5349,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5895,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5727,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5848,
											"end": 5863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5848,
											"end": 5863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5848,
											"end": 5863,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5842,
											"end": 5864,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5842,
											"end": 5864,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5828,
											"end": 5865,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5818,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5818,
											"end": 5889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 5869,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 6117,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5900,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5956,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 5956,
											"end": 6088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6020,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 6005,
											"end": 6008,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6049,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6077,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6070,
											"end": 6071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6078,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5956,
											"end": 6088,
											"name": "tag",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 5956,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6102,
											"end": 6111,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 6122,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6221,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6244,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6207,
											"end": 6244,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6224,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 6224,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6344,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6361,
											"end": 6366,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "tag",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6386,
											"end": 6394,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6451,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6452,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6475,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 6425,
											"end": 6475,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 6455,
											"end": 6473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "tag",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6506,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6495,
											"end": 6503,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6507,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6537,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 6488,
											"end": 6537,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6535,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 6488,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 6375,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 7537,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 6635,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6684,
											"end": 6689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 6704,
											"end": 6784,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6755,
											"end": 6756,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6769,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6769,
											"end": 6774,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6784,
											"name": "tag",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 6704,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6807,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 6793,
											"end": 6869,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6840,
											"end": 6841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6869,
											"name": "tag",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 6793,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6885,
											"end": 6889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6898,
											"end": 6957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 6957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 6898,
											"end": 6957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6971,
											"end": 6972,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6966,
											"end": 7140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6966,
											"end": 7140,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6966,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 6966,
											"end": 7140,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 6878,
											"end": 7140,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 6957,
											"name": "tag",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 6898,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 6929,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6919,
											"end": 6929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6919,
											"end": 6929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6966,
											"end": 7140,
											"name": "tag",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 6966,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7006,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6993,
											"end": 7001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7007,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7030,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 6987,
											"end": 7030,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 7010,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "tag",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7066,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7052,
											"end": 7068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7052,
											"end": 7068,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 7140,
											"name": "tag",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 6878,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 7140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7226,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7214,
											"end": 7222,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7211,
											"end": 7227,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7208,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7209,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7228,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7188,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 7176,
											"end": 7184,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7189,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7155,
											"end": 7190,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7229,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7352,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 7149,
											"end": 7352,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7261,
											"end": 7280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7261,
											"end": 7280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7261,
											"end": 7280,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 7337,
											"end": 7342,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7352,
											"name": "tag",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 7149,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7384,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "695"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7409,
											"end": 7417,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7403,
											"end": 7407,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7384,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 7384,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7384,
											"end": 7426,
											"name": "tag",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 7384,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7460,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7470,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7493,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "697"
										},
										{
											"begin": 7435,
											"end": 7493,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "697"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 7473,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "tag",
											"source": 10,
											"value": "697"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7531,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7531,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 7537,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 7537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7542,
											"end": 7673,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7542,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 7658,
											"end": 7666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7652,
											"end": 7656,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 7631,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8212,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 8033,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8111,
											"end": 8124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8111,
											"end": 8124,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8186,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8153,
											"end": 8187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8153,
											"end": 8187,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8188,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8133,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 8133,
											"end": 8206,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8202,
											"end": 8203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8204,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8320,
											"end": 8326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8350,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8405,
											"end": 8408,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8384,
											"end": 8391,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8420,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8424,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 8474,
											"end": 8483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 8445,
											"end": 8484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8484,
											"name": "tag",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 8445,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8526,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8503,
											"end": 8528,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8592,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8569,
											"end": 8594,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8663,
											"end": 8688,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8435,
											"end": 8484,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8435,
											"end": 8484,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8503,
											"end": 8528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8503,
											"end": 8528,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8569,
											"end": 8594,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8663,
											"end": 8688,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 8777,
											"end": 8780,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8762,
											"end": 8781,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8762,
											"end": 8781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 8733,
											"end": 8782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8782,
											"name": "tag",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 8733,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9543,
											"end": 9773,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 9543,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9613,
											"end": 9619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9654,
											"end": 9663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9652,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9641,
											"end": 9664,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9637,
											"end": 9669,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9634,
											"end": 9686,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9634,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 9634,
											"end": 9686,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9672,
											"end": 9684,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9634,
											"end": 9686,
											"name": "tag",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 9634,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 9743,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9543,
											"end": 9773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9543,
											"end": 9773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10123,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 9778,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 9982,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9962,
											"end": 9983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 9983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 9983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10019,
											"end": 10021,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9992,
											"end": 10022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1250D3C8185B1C9958591E48199A5B985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10053,
											"end": 10055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10031,
											"end": 10082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10114,
											"end": 10116,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10099,
											"end": 10117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10099,
											"end": 10117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11788,
											"end": 11923,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 11788,
											"end": 11923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 11865,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11848,
											"end": 11865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11845,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "718"
										},
										{
											"begin": 11845,
											"end": 11888,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "718"
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 11868,
											"end": 11886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "tag",
											"source": 10,
											"value": "718"
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11915,
											"end": 11916,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11904,
											"end": 11917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 11917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11788,
											"end": 11923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 13065,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 12938,
											"end": 13065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12999,
											"end": 13009,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12994,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12990,
											"end": 13010,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12987,
											"end": 12988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12980,
											"end": 13011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13030,
											"end": 13034,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 13027,
											"end": 13028,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13020,
											"end": 13035,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13054,
											"end": 13058,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13051,
											"end": 13052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13059,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13905,
											"end": 14182,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 13905,
											"end": 14182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13972,
											"end": 13978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14025,
											"end": 14027,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14013,
											"end": 14022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14011,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14023,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13996,
											"end": 14028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13993,
											"end": 14045,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13993,
											"end": 14045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "727"
										},
										{
											"begin": 13993,
											"end": 14045,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14041,
											"end": 14042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14038,
											"end": 14039,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14031,
											"end": 14043,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13993,
											"end": 14045,
											"name": "tag",
											"source": 10,
											"value": "727"
										},
										{
											"begin": 13993,
											"end": 14045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14073,
											"end": 14082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14067,
											"end": 14083,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14126,
											"end": 14131,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14119,
											"end": 14132,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14112,
											"end": 14133,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14134,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 14092,
											"end": 14152,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14148,
											"end": 14149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14145,
											"end": 14146,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14138,
											"end": 14150,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14946,
											"end": 15233,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 14946,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15136,
											"end": 15161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15136,
											"end": 15161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15136,
											"end": 15161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15124,
											"end": 15126,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15170,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 15223,
											"end": 15225,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15208,
											"end": 15226,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15208,
											"end": 15226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15200,
											"end": 15206,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15170,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 15170,
											"end": 15227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17708,
											"end": 17833,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 17708,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17773,
											"end": 17782,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17773,
											"end": 17782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17773,
											"end": 17782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17804,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17827,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 17791,
											"end": 17827,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17807,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 17807,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 17807,
											"end": 17825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19494,
											"end": 19519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19494,
											"end": 19519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19494,
											"end": 19519,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19550,
											"end": 19552,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19562,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19593,
											"end": 19595,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19578,
											"end": 19596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19578,
											"end": 19596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19605,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19481,
											"end": 19484,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 19466,
											"end": 19485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19466,
											"end": 19485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 19667,
											"end": 19669,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 19652,
											"end": 19670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19652,
											"end": 19670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19644,
											"end": 19650,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 19614,
											"end": 19671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19614,
											"end": 19671,
											"name": "tag",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 19614,
											"end": 19671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19247,
											"end": 19677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"ICO/Erc20.sol",
								"ICO/IcoOptimized.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_getPriceFeed(uint8)": "115afc3a",
							"airdropTokens()": "91152c5c",
							"buyTokens(uint8,uint256)": "940c333e",
							"calculatePaymentAmount(uint8,uint256)": "117d260f",
							"calculateTokenAmount(uint8,uint256)": "05834e67",
							"contributionsInUSD(address)": "c81ffdea",
							"createSale(uint256,uint256,uint256)": "6c1909ed",
							"finalizeICO()": "23cc75a8",
							"getCurrentSaleId()": "212ea247",
							"getHardCapReached()": "91d8730a",
							"getInvestorCount()": "960524e3",
							"getSaleStartEndTime(uint256)": "c211e1f9",
							"getSoftCapReached()": "06e4d36f",
							"hardCapInUSD()": "c1560a14",
							"initiateRefund()": "7fb12001",
							"investorPayments(address,uint8)": "efdcdb45",
							"investors(uint256)": "3feb5f2b",
							"isICOFinalized()": "d1f3b23e",
							"isTokensAirdropped()": "4dee1dc3",
							"owner()": "8da5cb5b",
							"paymentMethodForInvestor(address)": "df4e0593",
							"priceFeedBNB()": "99131e7e",
							"priceFeedUSDC()": "d3d9d1e4",
							"priceFeedUSDT()": "62a469e9",
							"renounceOwnership()": "715018a6",
							"saleCount()": "a1e89aec",
							"sales(uint256)": "b5f522f7",
							"softCapInUSD()": "2151206e",
							"token()": "fc0c546a",
							"tokensBoughtByInvestor(address)": "e8e87389",
							"totalFundsRaisedUSD()": "721bc38b",
							"totalTokensSold()": "63b20117",
							"transferOwnership(address)": "f2fde38b",
							"usdc()": "3e413bee",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract icotoken\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_softCapInUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCapInUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceFeedBNB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedUSDT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeedUSDC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalTokensSold\",\"type\":\"uint256\"}],\"name\":\"ICOFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"ImmediateFinalization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"}],\"name\":\"NewSaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"RefundInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"airdroppedAmount\",\"type\":\"uint256\"}],\"name\":\"TokenAirdropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPurchaseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"}],\"name\":\"_getPriceFeed\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"paymentMethod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributionsInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPriceUSD\",\"type\":\"uint256\"}],\"name\":\"createSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSaleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHardCapReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"investorCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleId\",\"type\":\"uint256\"}],\"name\":\"getSaleStartEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSoftCapReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCapInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"investorPayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isICOFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTokensAirdropped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"paymentMethodForInvestor\",\"outputs\":[{\"internalType\":\"enum ICO.PaymentMethod\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedBNB\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedUSDC\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedUSDT\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensSold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCapInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract icotoken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensBoughtByInvestor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFundsRaisedUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ICO/IcoOptimized.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"ICO/Erc20.sol\":{\"keccak256\":\"0xe42770ced11fcabba52fb18828608fb070140ebc0c2d4d10b445b1decf38ccbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb74a5af2335b2113b913d8781b78b3ee1c0885129c1e0fdd54c6ea240538ca\",\"dweb:/ipfs/QmPP7Nx1MNasWwnUpms3gewsoT5EkY7CaKCE7GBYhD1fjM\"]},\"ICO/IcoOptimized.sol\":{\"keccak256\":\"0xa2c889e2a60c2b0409f425f5aeccba850a89404eabd55f5fe8f99ee194b17a5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://759414896fac9a41a0494b9ffb01e39bb29f521087c13c0533f80366e6665f16\",\"dweb:/ipfs/QmVP75XvuYCrXyWpbULynFKDLDxm8vm6LEmcDt8G9Gb4iY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 990,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1087,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "priceFeedBNB",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1090,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "priceFeedUSDT",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1093,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "priceFeedUSDC",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1111,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "token",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(icotoken)1074"
							},
							{
								"astId": 1113,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "softCapInUSD",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1115,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "hardCapInUSD",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1117,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "saleCount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1119,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "totalFundsRaisedUSD",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1121,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "totalTokensSold",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1130,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "isICOFinalized",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1133,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "isTokensAirdropped",
								"offset": 1,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1136,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "investors",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1138,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "usdt",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 1140,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "usdc",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 1145,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "sales",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_struct(Sale)1104_storage)"
							},
							{
								"astId": 1149,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "contributionsInUSD",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1153,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "tokensBoughtByInvestor",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1158,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "priceFeeds",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)"
							},
							{
								"astId": 1163,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "paymentMethodForInvestor",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_enum(PaymentMethod)1108)"
							},
							{
								"astId": 1170,
								"contract": "ICO/IcoOptimized.sol:ICO",
								"label": "investorPayments",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_address,t_mapping(t_enum(PaymentMethod)1108,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(icotoken)1074": {
								"encoding": "inplace",
								"label": "contract icotoken",
								"numberOfBytes": "20"
							},
							"t_enum(PaymentMethod)1108": {
								"encoding": "inplace",
								"label": "enum ICO.PaymentMethod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract AggregatorV3Interface)",
								"numberOfBytes": "32",
								"value": "t_contract(AggregatorV3Interface)45"
							},
							"t_mapping(t_address,t_enum(PaymentMethod)1108)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum ICO.PaymentMethod)",
								"numberOfBytes": "32",
								"value": "t_enum(PaymentMethod)1108"
							},
							"t_mapping(t_address,t_mapping(t_enum(PaymentMethod)1108,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(PaymentMethod)1108,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(PaymentMethod)1108,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(PaymentMethod)1108",
								"label": "mapping(enum ICO.PaymentMethod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Sale)1104_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ICO.Sale)",
								"numberOfBytes": "32",
								"value": "t_struct(Sale)1104_storage"
							},
							"t_struct(Sale)1104_storage": {
								"encoding": "inplace",
								"label": "struct ICO.Sale",
								"members": [
									{
										"astId": 1095,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "startTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1097,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "endTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1099,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "tokenPriceUSD",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1101,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "tokensSold",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1103,
										"contract": "ICO/IcoOptimized.sol:ICO",
										"label": "isFinalized",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ICO/IcoOptimized.sol:195:5:\n    |\n195 |     uint256 usdtBalance = IERC20(usdt).balanceOf(address(this));\n    |     ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6394,
					"file": "ICO/IcoOptimized.sol",
					"start": 6375
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> ICO/IcoOptimized.sol:373:34:\n    |\n373 |     function getSaleStartEndTime(uint256 _saleId)\n    |                                  ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12898,
					"file": "ICO/IcoOptimized.sol",
					"start": 12883
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 980,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							330
						],
						"IERC20Errors": [
							235
						],
						"IERC721Errors": [
							283
						]
					},
					"id": 331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 205,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 210,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 215,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 224,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 229,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 234,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 331,
							"src": "280:1764:2",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 283,
							"linearizedBaseContracts": [
								283
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 241,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 246,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 255,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 260,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 265,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 272,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 277,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 282,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 331,
							"src": "2190:2092:2",
							"usedErrors": [
								241,
								246,
								255,
								260,
								265,
								272,
								277,
								282
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 284,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 295,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 300,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 305,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 312,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 317,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 322,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 329,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 331,
							"src": "4430:2107:2",
							"usedErrors": [
								295,
								300,
								305,
								312,
								317,
								322,
								329
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							845
						],
						"IERC20": [
							923
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 924,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 333,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 923,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 950,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 335,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 980,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 337,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 331,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 339,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 235,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 342,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1133:7:3"
									},
									"id": 343,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 344,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "1142:6:3"
									},
									"id": 345,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 346,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1150:14:3"
									},
									"id": 347,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 348,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 235,
										"src": "1166:12:3"
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 341,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 845,
							"linearizedBaseContracts": [
								845,
								235,
								949,
								923,
								979
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 352,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 350,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 351,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 358,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 354,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 355,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 356,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 361,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 362,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 364,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 374,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 382,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 845,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 388,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 387,
												"id": 389,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 845,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 397,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 365,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 396,
												"id": 398,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 845,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 405,
												"id": 407,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 403,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 845,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										872
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 415,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 361,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 414,
												"id": 416,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 845,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										880
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 426,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 428,
													"indexExpression": {
														"id": 427,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 425,
												"id": 429,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 845,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 441,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 443,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 440,
												"id": 453,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 845,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										900
									],
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 465,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 467,
														"indexExpression": {
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 469,
													"indexExpression": {
														"id": 468,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 470,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 845,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										910
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 482,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 484,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															736,
															796
														],
														"referencedDeclaration": 736,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 481,
												"id": 494,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 845,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										922
									],
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 527,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 508,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 510,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 519,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 507,
												"id": 526,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 845,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 538,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 539,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 552,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 551,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 545,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 544,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 550,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 553,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 554,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 560,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 559,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 565,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 845,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 586,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																597
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 597,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 622,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 596,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 601,
															"initialValue": {
																"baseExpression": {
																	"id": 598,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"id": 599,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 602,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 612,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 611,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 606,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 607,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 608,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 605,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 610,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 621,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 613,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 353,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 615,
																			"indexExpression": {
																				"id": 614,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 616,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 617,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 620,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 591,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 592,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 642,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 636,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 353,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 638,
																			"indexExpression": {
																				"id": 637,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 641,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 644,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 635,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 634,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 630,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 631,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 633,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 646,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 645,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 845,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 660,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 661,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 667,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 666,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 672,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 676,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 845,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 694,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 707,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 706,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 700,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 699,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 705,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 710,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 708,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 845,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 728,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															736,
															796
														],
														"referencedDeclaration": 796,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 845,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 748,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 749,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 755,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 754,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 760,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 763,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 764,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 770,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 769,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 775,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 778,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 781,
															"indexExpression": {
																"id": 779,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 782,
														"indexExpression": {
															"id": 780,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 783,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 786,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 788,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 789,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 790,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 787,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 845,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 806,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"id": 809,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 808,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 814,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 820,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 821,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 830,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 829,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 824,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 825,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 826,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 823,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 828,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 840,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 832,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 833,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 834,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 835,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 831,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				736,
																				796
																			],
																			"referencedDeclaration": 796,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 839,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 845,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 846,
							"src": "1106:9788:3",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 848,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 923,
							"linearizedBaseContracts": [
								923
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 857,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 866,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 923,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 923,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 923,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 923,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 923,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 919,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 923,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 924,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							923
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 924,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 923,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "306:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								923
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 949,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 949,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 949,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 982,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 985,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1818:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 983,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 984,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 988,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1864:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 986,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1907:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 989,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 993,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"src": "1994:37:7"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "2051:38:7",
										"statements": [
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 997,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2071:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:7"
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:7"
									},
									"scope": 1048,
									"src": "2037:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "2490:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2500:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:7"
											},
											{
												"id": 1007,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2542:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:7"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1012,
									"name": "nonReentrant",
									"nameLocation": "2475:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:7"
									},
									"src": "2466:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2614:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1015,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1016,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2713:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "2698:86:7",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "2722:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1018,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "2743:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1020,
															"nodeType": "RevertStatement",
															"src": "2736:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2858:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1024,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2868:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:7"
											}
										]
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:7"
									},
									"scope": 1048,
									"src": "2575:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "2926:170:7",
										"statements": [
											{
												"expression": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1031,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3068:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1032,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "3078:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:7"
											}
										]
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:7"
									},
									"scope": 1048,
									"src": "2888:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "3339:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3356:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1043,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1045,
												"nodeType": "Return",
												"src": "3349:25:7"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3333:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:7"
									},
									"scope": 1048,
									"src": "3275:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1049,
							"src": "1030:2353:7",
							"usedErrors": [
								993
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:7"
				},
				"id": 7
			},
			"ICO/Erc20.sol": {
				"ast": {
					"absolutePath": "ICO/Erc20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							845
						],
						"IERC20": [
							923
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							949
						],
						"icotoken": [
							1074
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1075,
							"sourceUnit": 846,
							"src": "69:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1052,
										"name": "ERC20",
										"nameLocations": [
											"151:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "151:5:8"
									},
									"id": 1053,
									"nodeType": "InheritanceSpecifier",
									"src": "151:5:8"
								}
							],
							"canonicalName": "icotoken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1074,
							"linearizedBaseContracts": [
								1074,
								845,
								235,
								949,
								923,
								979
							],
							"name": "icotoken",
							"nameLocation": "139:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "267:56:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "287:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "291:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "287:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "299:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "281:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "281:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "281:31:8"
											}
										]
									},
									"id": 1073,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1062,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1055,
													"src": "251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1063,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1057,
													"src": "258:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1064,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1061,
												"name": "ERC20",
												"nameLocations": [
													"245:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 845,
												"src": "245:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "245:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "194:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "180:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "180:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "214:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "200:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "200:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "231:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "223:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:65:8"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:0:8"
									},
									"scope": 1074,
									"src": "168:155:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1075,
							"src": "130:199:8",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								857,
								866
							]
						}
					],
					"src": "40:290:8"
				},
				"id": 8
			},
			"ICO/IcoOptimized.sol": {
				"ast": {
					"absolutePath": "ICO/IcoOptimized.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							979
						],
						"ERC20": [
							845
						],
						"ICO": [
							2343
						],
						"IERC20": [
							923
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							193
						],
						"ReentrancyGuard": [
							1048
						],
						"icotoken": [
							1074
						]
					},
					"id": 2344,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "ICO/Erc20.sol",
							"file": "./Erc20.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2344,
							"sourceUnit": 1075,
							"src": "57:21:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1078,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2344,
							"sourceUnit": 194,
							"src": "79:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2344,
							"sourceUnit": 1049,
							"src": "132:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2344,
							"sourceUnit": 46,
							"src": "192:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1081,
										"name": "Ownable",
										"nameLocations": [
											"286:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "286:7:9"
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "286:7:9"
								},
								{
									"baseName": {
										"id": 1083,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"295:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "295:15:9"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "295:15:9"
								}
							],
							"canonicalName": "ICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2343,
							"linearizedBaseContracts": [
								2343,
								1048,
								193,
								979
							],
							"name": "ICO",
							"nameLocation": "279:3:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "99131e7e",
									"id": 1087,
									"mutability": "mutable",
									"name": "priceFeedBNB",
									"nameLocation": "376:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "347:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1086,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1085,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"347:21:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "347:21:9"
										},
										"referencedDeclaration": 45,
										"src": "347:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "62a469e9",
									"id": 1090,
									"mutability": "mutable",
									"name": "priceFeedUSDT",
									"nameLocation": "423:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "394:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1089,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1088,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"394:21:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "394:21:9"
										},
										"referencedDeclaration": 45,
										"src": "394:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3d9d1e4",
									"id": 1093,
									"mutability": "mutable",
									"name": "priceFeedUSDC",
									"nameLocation": "471:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "442:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1092,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1091,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"442:21:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "442:21:9"
										},
										"referencedDeclaration": 45,
										"src": "442:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ICO.Sale",
									"id": 1104,
									"members": [
										{
											"constant": false,
											"id": 1095,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "522:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1104,
											"src": "514:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1094,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "514:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1097,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "549:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1104,
											"src": "541:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1096,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "541:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1099,
											"mutability": "mutable",
											"name": "tokenPriceUSD",
											"nameLocation": "574:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1104,
											"src": "566:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "566:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1101,
											"mutability": "mutable",
											"name": "tokensSold",
											"nameLocation": "605:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1104,
											"src": "597:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1100,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "597:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1103,
											"mutability": "mutable",
											"name": "isFinalized",
											"nameLocation": "630:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1104,
											"src": "625:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1102,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "625:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Sale",
									"nameLocation": "499:4:9",
									"nodeType": "StructDefinition",
									"scope": 2343,
									"src": "492:156:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ICO.PaymentMethod",
									"id": 1108,
									"members": [
										{
											"id": 1105,
											"name": "BNB",
											"nameLocation": "683:3:9",
											"nodeType": "EnumValue",
											"src": "683:3:9"
										},
										{
											"id": 1106,
											"name": "USDT",
											"nameLocation": "696:4:9",
											"nodeType": "EnumValue",
											"src": "696:4:9"
										},
										{
											"id": 1107,
											"name": "USDC",
											"nameLocation": "710:4:9",
											"nodeType": "EnumValue",
											"src": "710:4:9"
										}
									],
									"name": "PaymentMethod",
									"nameLocation": "659:13:9",
									"nodeType": "EnumDefinition",
									"src": "654:66:9"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1111,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "765:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "749:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_icotoken_$1074",
										"typeString": "contract icotoken"
									},
									"typeName": {
										"id": 1110,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1109,
											"name": "icotoken",
											"nameLocations": [
												"749:8:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1074,
											"src": "749:8:9"
										},
										"referencedDeclaration": 1074,
										"src": "749:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_icotoken_$1074",
											"typeString": "contract icotoken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2151206e",
									"id": 1113,
									"mutability": "mutable",
									"name": "softCapInUSD",
									"nameLocation": "791:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "776:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "776:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c1560a14",
									"id": 1115,
									"mutability": "mutable",
									"name": "hardCapInUSD",
									"nameLocation": "824:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "809:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a1e89aec",
									"id": 1117,
									"mutability": "mutable",
									"name": "saleCount",
									"nameLocation": "857:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "842:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "842:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "721bc38b",
									"id": 1119,
									"mutability": "mutable",
									"name": "totalFundsRaisedUSD",
									"nameLocation": "887:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "872:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1118,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "872:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b20117",
									"id": 1121,
									"mutability": "mutable",
									"name": "totalTokensSold",
									"nameLocation": "927:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "912:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "912:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1124,
									"mutability": "constant",
									"name": "PRECISION_10",
									"nameLocation": "965:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "948:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653130",
										"id": 1123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "980:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"value": "1e10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1127,
									"mutability": "constant",
									"name": "PRECISION_18",
									"nameLocation": "1007:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "990:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1022:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d1f3b23e",
									"id": 1130,
									"mutability": "mutable",
									"name": "isICOFinalized",
									"nameLocation": "1044:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1032:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1128,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1032:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1061:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4dee1dc3",
									"id": 1133,
									"mutability": "mutable",
									"name": "isTokensAirdropped",
									"nameLocation": "1084:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1072:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1131,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1072:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1105:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3feb5f2b",
									"id": 1136,
									"mutability": "mutable",
									"name": "investors",
									"nameLocation": "1188:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1171:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1171:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1135,
										"nodeType": "ArrayTypeName",
										"src": "1171:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1138,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "1218:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1203:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1137,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1203:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1140,
									"mutability": "mutable",
									"name": "usdc",
									"nameLocation": "1243:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1228:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1228:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5f522f7",
									"id": 1145,
									"mutability": "mutable",
									"name": "sales",
									"nameLocation": "1302:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1270:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
										"typeString": "mapping(uint256 => struct ICO.Sale)"
									},
									"typeName": {
										"id": 1144,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1141,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1278:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1270:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
											"typeString": "mapping(uint256 => struct ICO.Sale)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1143,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1142,
												"name": "Sale",
												"nameLocations": [
													"1289:4:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1104,
												"src": "1289:4:9"
											},
											"referencedDeclaration": 1104,
											"src": "1289:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
												"typeString": "struct ICO.Sale"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c81ffdea",
									"id": 1149,
									"mutability": "mutable",
									"name": "contributionsInUSD",
									"nameLocation": "1348:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1313:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1148,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1146,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1321:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1313:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1147,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1332:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e8e87389",
									"id": 1153,
									"mutability": "mutable",
									"name": "tokensBoughtByInvestor",
									"nameLocation": "1407:22:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1372:57:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1152,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1380:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1372:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1151,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1391:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1158,
									"mutability": "mutable",
									"name": "priceFeeds",
									"nameLocation": "1485:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1435:60:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
										"typeString": "mapping(address => contract AggregatorV3Interface)"
									},
									"typeName": {
										"id": 1157,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1154,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1443:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1435:41:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$",
											"typeString": "mapping(address => contract AggregatorV3Interface)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1156,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1155,
												"name": "AggregatorV3Interface",
												"nameLocations": [
													"1454:21:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1454:21:9"
											},
											"referencedDeclaration": 45,
											"src": "1454:21:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
												"typeString": "contract AggregatorV3Interface"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "df4e0593",
									"id": 1163,
									"mutability": "mutable",
									"name": "paymentMethodForInvestor",
									"nameLocation": "1542:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1501:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1108_$",
										"typeString": "mapping(address => enum ICO.PaymentMethod)"
									},
									"typeName": {
										"id": 1162,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1159,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1509:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1501:33:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1108_$",
											"typeString": "mapping(address => enum ICO.PaymentMethod)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1161,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1160,
												"name": "PaymentMethod",
												"nameLocations": [
													"1520:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1108,
												"src": "1520:13:9"
											},
											"referencedDeclaration": 1108,
											"src": "1520:13:9",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PaymentMethod_$1108",
												"typeString": "enum ICO.PaymentMethod"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "efdcdb45",
									"id": 1170,
									"mutability": "mutable",
									"name": "investorPayments",
									"nameLocation": "1634:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2343,
									"src": "1573:77:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
									},
									"typeName": {
										"id": 1169,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1164,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1581:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1573:53:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1168,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1166,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1165,
													"name": "PaymentMethod",
													"nameLocations": [
														"1600:13:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1108,
													"src": "1600:13:9"
												},
												"referencedDeclaration": 1108,
												"src": "1600:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
													"typeString": "enum ICO.PaymentMethod"
												}
											},
											"nodeType": "Mapping",
											"src": "1592:33:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$",
												"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1167,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1617:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9c4b134da32aab35252391880a9f2a3c13a760d7817ae8823f2b301d3522045a",
									"id": 1174,
									"name": "ICOFinalized",
									"nameLocation": "1677:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"indexed": true,
												"mutability": "mutable",
												"name": "totalTokensSold",
												"nameLocation": "1706:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1690:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:33:9"
									},
									"src": "1671:52:9"
								},
								{
									"anonymous": false,
									"eventSelector": "7b1c1ad0f3e04c9ef02d69280925520638d1cf076c56c4aa5bb1d0d37a949a3d",
									"id": 1178,
									"name": "ImmediateFinalization",
									"nameLocation": "1734:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "1772:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1756:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:24:9"
									},
									"src": "1728:52:9"
								},
								{
									"anonymous": false,
									"eventSelector": "03829ab241648d7348f97e4f77d36451330f2276ea8eeb3428e462012f9699e7",
									"id": 1187,
									"name": "RefundInitiated",
									"nameLocation": "1791:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "1823:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1807:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1841:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1833:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "1864:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1850:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1183,
														"name": "PaymentMethod",
														"nameLocations": [
															"1850:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1108,
														"src": "1850:13:9"
													},
													"referencedDeclaration": 1108,
													"src": "1850:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:72:9"
									},
									"src": "1785:95:9"
								},
								{
									"anonymous": false,
									"eventSelector": "9bdcd0cc5503fb9a8dd7311d9617e33108c4b7c8948cc544b16c1fd63c6f475b",
									"id": 1193,
									"name": "TokenAirdropped",
									"nameLocation": "1891:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "1923:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1907:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "airdroppedAmount",
												"nameLocation": "1941:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1933:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:52:9"
									},
									"src": "1885:74:9"
								},
								{
									"anonymous": false,
									"eventSelector": "dbcef474a632721725d49e3f35d9defe0257100b01d1e4b4b135b14d6fe296e8",
									"id": 1208,
									"name": "TokensPurchased",
									"nameLocation": "1970:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2011:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1995:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "2042:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "2026:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPurchaseAmount",
												"nameLocation": "2066:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "2058:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPriceUSD",
												"nameLocation": "2103:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "2095:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPaid",
												"nameLocation": "2134:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "2126:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "2168:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "2154:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1204,
														"name": "PaymentMethod",
														"nameLocations": [
															"2154:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1108,
														"src": "2154:13:9"
													},
													"referencedDeclaration": 1108,
													"src": "2154:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:202:9"
									},
									"src": "1964:224:9"
								},
								{
									"anonymous": false,
									"eventSelector": "63b43fa153147ade1de28ed76841cdbc34e510ed94dd1ff5a88e278b0b1ad9ba",
									"id": 1218,
									"name": "NewSaleCreated",
									"nameLocation": "2199:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "saleId",
												"nameLocation": "2239:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "2223:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2263:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "2255:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "2290:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "2282:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenPriceUSD",
												"nameLocation": "2315:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "2307:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:121:9"
									},
									"src": "2193:142:9"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "2607:338:9",
										"statements": [
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "2617:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_icotoken_$1074",
															"typeString": "contract icotoken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1243,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "2625:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_icotoken_$1074",
															"typeString": "contract icotoken"
														}
													},
													"src": "2617:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_icotoken_$1074",
														"typeString": "contract icotoken"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "2617:14:9"
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "softCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "2641:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1247,
														"name": "_softCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "2656:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2641:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "2641:28:9"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "hardCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "2679:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1251,
														"name": "_hardCapInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "2694:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2679:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "2679:28:9"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1254,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2717:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1255,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "2724:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "2717:12:9"
											},
											{
												"expression": {
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1258,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "2739:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1259,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "2746:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2739:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "2739:12:9"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "priceFeedBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "2761:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1264,
																"name": "_priceFeedBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "2798:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1263,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2776:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2776:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2761:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "2761:51:9"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1268,
														"name": "priceFeedUSDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2822:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1270,
																"name": "_priceFeedUSDT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "2860:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1269,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2838:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2838:37:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2822:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2822:53:9"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1274,
														"name": "priceFeedUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2885:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1276,
																"name": "_priceFeedUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "2923:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1275,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2901:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2901:37:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2885:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "2885:53:9"
											}
										]
									},
									"id": 1281,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1238,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2595:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2599:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2595:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1240,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1237,
												"name": "Ownable",
												"nameLocations": [
													"2587:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "2587:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2587:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2371:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2362:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_icotoken_$1074",
													"typeString": "contract icotoken"
												},
												"typeName": {
													"id": 1220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1219,
														"name": "icotoken",
														"nameLocations": [
															"2362:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "2362:8:9"
													},
													"referencedDeclaration": 1074,
													"src": "2362:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_icotoken_$1074",
														"typeString": "contract icotoken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "2395:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2387:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "2418:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2410:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2410:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_softCapInUSD",
												"nameLocation": "2441:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2433:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_hardCapInUSD",
												"nameLocation": "2472:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2464:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_priceFeedBNB",
												"nameLocation": "2503:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2495:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_priceFeedUSDT",
												"nameLocation": "2534:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2526:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "_priceFeedUSDC",
												"nameLocation": "2566:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2558:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:234:9"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:9"
									},
									"scope": 2343,
									"src": "2341:604:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "2978:77:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2996:15:9",
															"subExpression": {
																"id": 1284,
																"name": "isICOFinalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "2997:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f20616c72656164792066696e616c697a6564",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3013:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23",
																"typeString": "literal_string \"ICO already finalized\""
															},
															"value": "ICO already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d894807d07a4878944df72000c35a26fc670b7c15dedc34156876b2464e1fd23",
																"typeString": "literal_string \"ICO already finalized\""
															}
														],
														"id": 1283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2988:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "2988:49:9"
											},
											{
												"id": 1289,
												"nodeType": "PlaceholderStatement",
												"src": "3047:1:9"
											}
										]
									},
									"id": 1291,
									"name": "icoNotFinalized",
									"nameLocation": "2960:15:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:2:9"
									},
									"src": "2951:104:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "3170:524:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3184:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1300,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "3201:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3215:3:9",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "3201:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "3184:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1312,
												"nodeType": "IfStatement",
												"src": "3180:146:9",
												"trueBody": {
													"id": 1311,
													"nodeType": "Block",
													"src": "3220:106:9",
													"statements": [
														{
															"assignments": [
																null,
																1304,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1304,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "3244:5:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1311,
																	"src": "3237:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 1303,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3237:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1308,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1305,
																		"name": "priceFeedBNB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "3259:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3272:15:9",
																	"memberName": "latestRoundData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "3259:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3259:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3234:55:9"
														},
														{
															"expression": {
																"id": 1309,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "3310:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 1298,
															"id": 1310,
															"nodeType": "Return",
															"src": "3303:12:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1313,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3340:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1314,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "3357:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3371:4:9",
														"memberName": "USDT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1106,
														"src": "3357:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "3340:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "3336:148:9",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "3377:107:9",
													"statements": [
														{
															"assignments": [
																null,
																1318,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1318,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "3401:5:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1325,
																	"src": "3394:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 1317,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3394:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1322,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1319,
																		"name": "priceFeedUSDT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "3416:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3430:15:9",
																	"memberName": "latestRoundData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "3416:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3416:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3391:56:9"
														},
														{
															"expression": {
																"id": 1323,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1318,
																"src": "3468:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 1298,
															"id": 1324,
															"nodeType": "Return",
															"src": "3461:12:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3498:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1328,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "3515:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3529:4:9",
														"memberName": "USDC",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "3515:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "3498:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1340,
												"nodeType": "IfStatement",
												"src": "3494:148:9",
												"trueBody": {
													"id": 1339,
													"nodeType": "Block",
													"src": "3535:107:9",
													"statements": [
														{
															"assignments": [
																null,
																1332,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1332,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "3559:5:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1339,
																	"src": "3552:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 1331,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1336,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1333,
																		"name": "priceFeedUSDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "3574:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3588:15:9",
																	"memberName": "latestRoundData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "3574:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3574:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3549:56:9"
														},
														{
															"expression": {
																"id": 1337,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "3626:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 1298,
															"id": 1338,
															"nodeType": "Return",
															"src": "3619:12:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3658:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																"typeString": "literal_string \"Unsupported payment method\""
															},
															"value": "Unsupported payment method"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																"typeString": "literal_string \"Unsupported payment method\""
															}
														],
														"id": 1341,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "3651:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3651:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "3651:36:9"
											}
										]
									},
									"functionSelector": "115afc3a",
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPriceFeed",
									"nameLocation": "3070:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "3098:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3084:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1292,
														"name": "PaymentMethod",
														"nameLocations": [
															"3084:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1108,
														"src": "3084:13:9"
													},
													"referencedDeclaration": 1108,
													"src": "3084:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:29:9"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3158:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1296,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:8:9"
									},
									"scope": 2343,
									"src": "3061:633:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "4079:703:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1360,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "4110:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1361,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4123:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4129:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4123:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d7573742062652067726561746572207468616e2063757272656e742074696d65",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4152:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5",
																"typeString": "literal_string \"Start time must be greater than current time\""
															},
															"value": "Start time must be greater than current time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1853a89cde833d839c669d1204571d26b8c616e74d14665150a1c9f7535c8f5",
																"typeString": "literal_string \"Start time must be greater than current time\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4089:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4089:119:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "4089:119:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1368,
																"name": "_endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "4239:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1369,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "4250:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4239:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e642074696d65206d7573742062652067726561746572207468616e2073746172742074696d65",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4274:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28",
																"typeString": "literal_string \"End time must be greater than start time\""
															},
															"value": "End time must be greater than start time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed7f84a1977812752f8d634cbdcf2a56f893383408b8dd546c270e5d913f5d28",
																"typeString": "literal_string \"End time must be greater than start time\""
															}
														],
														"id": 1367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4218:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4218:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "4218:108:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1375,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "4357:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1376,
																	"name": "getLatestSaleEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "4370:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4370:22:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4357:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65772073616c65206d75737420737461727420616674657220746865206c6173742073616c6520656e6473",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4406:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73",
																"typeString": "literal_string \"New sale must start after the last sale ends\""
															},
															"value": "New sale must start after the last sale ends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_825884e5cff514634aaaba9e58516f6d797b9a08503c5bf1af68f19c16208f73",
																"typeString": "literal_string \"New sale must start after the last sale ends\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4336:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4336:126:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "4336:126:9"
											},
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4473:11:9",
													"subExpression": {
														"id": 1382,
														"name": "saleCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4473:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "4473:11:9"
											},
											{
												"expression": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1385,
															"name": "sales",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "4494:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
																"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
															}
														},
														"id": 1387,
														"indexExpression": {
															"id": 1386,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "4500:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4494:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_storage",
															"typeString": "struct ICO.Sale storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1389,
																"name": "_startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "4543:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1390,
																"name": "_endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "4576:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1391,
																"name": "_tokenPriceUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "4613:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4653:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "66616c7365",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4681:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1388,
															"name": "Sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "4513:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Sale_$1104_storage_ptr_$",
																"typeString": "type(struct ICO.Sale storage pointer)"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4532:9:9",
															"4567:7:9",
															"4598:13:9",
															"4641:10:9",
															"4668:11:9"
														],
														"names": [
															"startTime",
															"endTime",
															"tokenPriceUSD",
															"tokensSold",
															"isFinalized"
														],
														"nodeType": "FunctionCall",
														"src": "4513:184:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_memory_ptr",
															"typeString": "struct ICO.Sale memory"
														}
													},
													"src": "4494:203:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1104_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "4494:203:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1398,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "4727:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1399,
															"name": "_startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "4738:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1400,
															"name": "_endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "4750:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1401,
															"name": "_tokenPriceUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "4760:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1397,
														"name": "NewSaleCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "4712:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4712:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "EmitStatement",
												"src": "4707:68:9"
											}
										]
									},
									"functionSelector": "6c1909ed",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1355,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1354,
												"name": "onlyOwner",
												"nameLocations": [
													"4053:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "4053:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4053:9:9"
										},
										{
											"id": 1357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1356,
												"name": "icoNotFinalized",
												"nameLocations": [
													"4063:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1291,
												"src": "4063:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4063:15:9"
										}
									],
									"name": "createSale",
									"nameLocation": "3941:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "3969:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3961:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3961:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "3997:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3989:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3989:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_tokenPriceUSD",
												"nameLocation": "4023:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4015:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3951:92:9"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4079:0:9"
									},
									"scope": 2343,
									"src": "3932:850:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "4925:1010:9",
										"statements": [
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4942:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "4935:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1415,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4935:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1418,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "4964:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															],
															"id": 1417,
															"name": "_getPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4950:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1108_$returns$_t_int256_$",
																"typeString": "function (enum ICO.PaymentMethod) view returns (int256)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4950:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"id": 1422,
																"name": "PRECISION_10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "4986:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4979:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1420,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "4979:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4979:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "4950:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4935:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1427,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "5017:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5025:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5017:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066656564",
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5028:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															},
															"value": "Invalid price feed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5009:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5009:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "5009:40:9"
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "currentSaleId",
														"nameLocation": "5068:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "5060:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5060:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1435,
														"name": "getCurrentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "5084:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5084:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5060:42:9"
											},
											{
												"assignments": [
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "5125:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "5112:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 1439,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1438,
																"name": "Sale",
																"nameLocations": [
																	"5112:4:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1104,
																"src": "5112:4:9"
															},
															"referencedDeclaration": 1104,
															"src": "5112:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"baseExpression": {
														"id": 1441,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "5132:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 1443,
													"indexExpression": {
														"id": 1442,
														"name": "currentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "5138:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5132:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1104_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5112:40:9"
											},
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "tokenPriceInUSD",
														"nameLocation": "5171:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "5163:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5163:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1449,
												"initialValue": {
													"expression": {
														"id": 1447,
														"name": "sale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "5189:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
															"typeString": "struct ICO.Sale storage pointer"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5194:13:9",
													"memberName": "tokenPriceUSD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1099,
													"src": "5189:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5163:44:9"
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "paymentAmountInUSD",
														"nameLocation": "5258:18:9",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "5250:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5250:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1452,
												"nodeType": "VariableDeclarationStatement",
												"src": "5250:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "5291:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1454,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "5308:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5322:3:9",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "5308:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "5291:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1473,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "5441:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1474,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "5458:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5472:4:9",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "5458:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "5441:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1477,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "5480:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1478,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "5497:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5511:4:9",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1106,
																"src": "5497:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "5480:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5441:74:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1518,
														"nodeType": "Block",
														"src": "5751:57:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5768:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 1514,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "5761:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5761:36:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1517,
																"nodeType": "ExpressionStatement",
																"src": "5761:36:9"
															}
														]
													},
													"id": 1519,
													"nodeType": "IfStatement",
													"src": "5437:371:9",
													"trueBody": {
														"id": 1513,
														"nodeType": "Block",
														"src": "5517:228:9",
														"statements": [
															{
																"assignments": [
																	1483
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1483,
																		"mutability": "mutable",
																		"name": "stablecoinDecimals",
																		"nameLocation": "5535:18:9",
																		"nodeType": "VariableDeclaration",
																		"scope": 1513,
																		"src": "5527:26:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1482,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5527:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1485,
																"initialValue": {
																	"hexValue": "36",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5556:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5527:30:9"
															},
															{
																"assignments": [
																	1487
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1487,
																		"mutability": "mutable",
																		"name": "normalizedAmount",
																		"nameLocation": "5576:16:9",
																		"nodeType": "VariableDeclaration",
																		"scope": 1513,
																		"src": "5568:24:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1486,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5568:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1497,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1488,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "5595:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5612:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1492,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3138",
																								"id": 1490,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5617:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 1491,
																								"name": "stablecoinDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1483,
																								"src": "5622:18:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5617:23:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1493,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5616:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5612:29:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1495,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5611:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5595:47:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5568:74:9"
															},
															{
																"expression": {
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1498,
																		"name": "paymentAmountInUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "5653:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 1501,
																								"name": "price",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1416,
																								"src": "5683:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							],
																							"id": 1500,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5675:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1499,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "5675:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1502,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5675:14:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1503,
																						"name": "normalizedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1487,
																						"src": "5692:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5675:33:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1505,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5674:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1508,
																					"name": "PRECISION_18",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "5720:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5712:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1506,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5712:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5712:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5674:59:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5653:80:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1512,
																"nodeType": "ExpressionStatement",
																"src": "5653:80:9"
															}
														]
													}
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "5287:521:9",
												"trueBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "5327:104:9",
													"statements": [
														{
															"expression": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1457,
																	"name": "paymentAmountInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "5341:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1460,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1416,
																							"src": "5371:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						],
																						"id": 1459,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5363:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1458,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5363:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5363:14:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1462,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "5380:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5363:30:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1464,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5362:32:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1467,
																				"name": "PRECISION_18",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "5405:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5397:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1465,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5397:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5397:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5362:56:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5341:77:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "5341:77:9"
														}
													]
												}
											},
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "5826:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "5818:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5818:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1523,
																	"name": "paymentAmountInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "5840:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1526,
																			"name": "PRECISION_18",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "5869:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5861:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1524,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5861:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5861:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5840:42:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1529,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5839:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1530,
														"name": "tokenPriceInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "5885:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5839:61:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5818:82:9"
											},
											{
												"expression": {
													"id": 1533,
													"name": "tokenAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1522,
													"src": "5917:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1414,
												"id": 1534,
												"nodeType": "Return",
												"src": "5910:18:9"
											}
										]
									},
									"functionSelector": "05834e67",
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "4797:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "4841:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "4827:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1406,
														"name": "PaymentMethod",
														"nameLocations": [
															"4827:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1108,
														"src": "4827:13:9"
													},
													"referencedDeclaration": 1108,
													"src": "4827:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "4872:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "4864:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4817:77:9"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "4916:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4916:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4915:9:9"
									},
									"scope": 2343,
									"src": "4788:1147:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "6050:1015:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1547,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "6064:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6078:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6064:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6081:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															},
															"value": "Token amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6056:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6056:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "6056:66:9"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "6136:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "6129:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1553,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6129:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1556,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "6158:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															],
															"id": 1555,
															"name": "_getPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "6144:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1108_$returns$_t_int256_$",
																"typeString": "function (enum ICO.PaymentMethod) view returns (int256)"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6144:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"id": 1560,
																"name": "PRECISION_10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "6182:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6175:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1558,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "6175:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6175:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6144:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6129:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "6237:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6245:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6237:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066656564",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6248:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															},
															"value": "Invalid price feed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															}
														],
														"id": 1564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6229:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6229:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "6229:40:9"
											},
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "currentSaleId",
														"nameLocation": "6284:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "6276:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1571,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6276:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1573,
														"name": "getCurrentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "6300:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6276:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1577,
																"name": "currentSaleId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "6332:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6349:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6332:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206163746976652073616c65",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6352:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7",
																"typeString": "literal_string \"No active sale\""
															},
															"value": "No active sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96b145fdc05e3ce6aa7fad5e89550d457f70c47d1f8d674ad654a917590143f7",
																"typeString": "literal_string \"No active sale\""
															}
														],
														"id": 1576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6324:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6324:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "6324:45:9"
											},
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "usdtBalance",
														"nameLocation": "6383:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "6375:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6375:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1591,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6428:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2343",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2343",
																		"typeString": "contract ICO"
																	}
																],
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6420:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1589,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6420:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6420:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1586,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "6404:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1585,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "6397:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6397:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$923",
																"typeString": "contract IERC20"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6410:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 880,
														"src": "6397:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6397:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6375:59:9"
											},
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "6454:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "6441:17:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 1596,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1595,
																"name": "Sale",
																"nameLocations": [
																	"6441:4:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1104,
																"src": "6441:4:9"
															},
															"referencedDeclaration": 1104,
															"src": "6441:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"baseExpression": {
														"id": 1598,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "6461:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 1600,
													"indexExpression": {
														"id": 1599,
														"name": "currentSaleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "6467:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6461:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1104_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6441:40:9"
											},
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "tokenPriceInUSD",
														"nameLocation": "6495:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "6487:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6487:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"expression": {
														"id": 1604,
														"name": "sale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "6513:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
															"typeString": "struct ICO.Sale storage pointer"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6518:13:9",
													"memberName": "tokenPriceUSD",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1099,
													"src": "6513:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6487:44:9"
											},
											{
												"assignments": [
													1608
												],
												"declarations": [
													{
														"constant": false,
														"id": 1608,
														"mutability": "mutable",
														"name": "totalPaymentInUSD",
														"nameLocation": "6586:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "6578:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6578:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1609,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "6607:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1610,
																	"name": "tokenPriceInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "6621:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6607:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1612,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6606:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1613,
														"name": "PRECISION_18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "6640:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6606:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6578:74:9"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "paymentAmount",
														"nameLocation": "6667:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "6659:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6659:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"nodeType": "VariableDeclarationStatement",
												"src": "6659:21:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1619,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "6690:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1620,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "6707:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6721:3:9",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "6707:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "6690:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1636,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "6820:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1637,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "6837:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6851:4:9",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1106,
																"src": "6837:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "6820:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1640,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "6859:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1641,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "6876:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6890:4:9",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "6876:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "6859:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6820:74:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1665,
														"nodeType": "Block",
														"src": "6983:53:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7000:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 1661,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "6993:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6993:36:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1664,
																"nodeType": "ExpressionStatement",
																"src": "6993:36:9"
															}
														]
													},
													"id": 1666,
													"nodeType": "IfStatement",
													"src": "6816:220:9",
													"trueBody": {
														"id": 1660,
														"nodeType": "Block",
														"src": "6896:81:9",
														"statements": [
															{
																"expression": {
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1645,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "6906:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1646,
																						"name": "totalPaymentInUSD",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1608,
																						"src": "6923:17:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								},
																								"id": 1649,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1647,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6944:2:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"hexValue": "36",
																									"id": 1648,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6950:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_6_by_1",
																										"typeString": "int_const 6"
																									},
																									"value": "6"
																								},
																								"src": "6944:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000_by_1",
																									"typeString": "int_const 1000000"
																								}
																							}
																						],
																						"id": 1650,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "6943:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000_by_1",
																							"typeString": "int_const 1000000"
																						}
																					},
																					"src": "6923:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1652,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6922:31:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1655,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1554,
																					"src": "6964:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6956:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1653,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6956:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6956:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6922:48:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6906:64:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1659,
																"nodeType": "ExpressionStatement",
																"src": "6906:64:9"
															}
														]
													}
												},
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "6686:350:9",
												"trueBody": {
													"id": 1635,
													"nodeType": "Block",
													"src": "6726:84:9",
													"statements": [
														{
															"expression": {
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1623,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "6736:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1624,
																					"name": "totalPaymentInUSD",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "6753:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1625,
																					"name": "PRECISION_18",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "6773:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6753:32:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1627,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6752:34:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1630,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "6797:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6789:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1628,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6789:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6789:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6752:51:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6736:67:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1634,
															"nodeType": "ExpressionStatement",
															"src": "6736:67:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1668,
													"name": "paymentAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1617,
													"src": "7049:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1545,
												"id": 1669,
												"nodeType": "Return",
												"src": "7042:20:9"
											}
										]
									},
									"functionSelector": "117d260f",
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePaymentAmount",
									"nameLocation": "5947:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "5984:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "5970:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1537,
														"name": "PaymentMethod",
														"nameLocations": [
															"5970:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1108,
														"src": "5970:13:9"
													},
													"referencedDeclaration": 1108,
													"src": "5970:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6007:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "5999:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5999:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:50:9"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "6041:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6040:9:9"
									},
									"scope": 2343,
									"src": "5938:1127:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "7176:2073:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1682,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7190:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7194:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7190:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1684,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "7204:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7204:7:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7190:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e65722063616e6e6f742062757920746f6b656e73",
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7213:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785",
																"typeString": "literal_string \"Owner cannot buy tokens\""
															},
															"value": "Owner cannot buy tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6074d909f1c7eb2393bdf1029d0b7e2b2329445b551a02e61050a4a408023785",
																"typeString": "literal_string \"Owner cannot buy tokens\""
															}
														],
														"id": 1681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7182:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7182:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "7182:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1691,
																"name": "saleCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "7253:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7266:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7253:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073616c65",
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7269:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7",
																"typeString": "literal_string \"No sale\""
															},
															"value": "No sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745b7c27209a9df0afa3e1a0af6f3a48dc087e43ee7b30261a0fc4b9578e75a7",
																"typeString": "literal_string \"No sale\""
															}
														],
														"id": 1690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7245:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7245:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "7245:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1698,
																	"name": "sales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "7293:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
																		"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																	}
																},
																"id": 1700,
																"indexExpression": {
																	"id": 1699,
																	"name": "saleCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "7299:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7293:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1104_storage",
																	"typeString": "struct ICO.Sale storage ref"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7310:11:9",
															"memberName": "isFinalized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1103,
															"src": "7293:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c6520616c72656164792066696e616c697a6564",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7323:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7",
																"typeString": "literal_string \"Sale already finalized\""
															},
															"value": "Sale already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c62da71e519c5f2bf89b59327b7f977696c4a0042adb3aafb9f068ba780f8ac7",
																"typeString": "literal_string \"Sale already finalized\""
															}
														],
														"id": 1697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7285:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7285:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "7285:63:9"
											},
											{
												"assignments": [
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "7362:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1899,
														"src": "7354:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7354:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"nodeType": "VariableDeclarationStatement",
												"src": "7354:19:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1708,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "7383:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1709,
															"name": "PaymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "7400:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																"typeString": "type(enum ICO.PaymentMethod)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7414:3:9",
														"memberName": "BNB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "7400:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "7383:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1739,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "7690:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1740,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "7707:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7721:4:9",
																"memberName": "USDT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1106,
																"src": "7707:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "7690:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1743,
																"name": "paymentMethod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "7737:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1744,
																	"name": "PaymentMethod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "7754:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																		"typeString": "type(enum ICO.PaymentMethod)"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7768:4:9",
																"memberName": "USDC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "7754:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																	"typeString": "enum ICO.PaymentMethod"
																}
															},
															"src": "7737:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7690:82:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1805,
														"nodeType": "Block",
														"src": "8316:53:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e737570706f72746564207061796d656e74206d6574686f64",
																			"id": 1802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8333:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			},
																			"value": "Unsupported payment method"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_20a9374871eda95a21489d37b12097781d38e0ea68a5e5d037a1b2c3ea6a8c04",
																				"typeString": "literal_string \"Unsupported payment method\""
																			}
																		],
																		"id": 1801,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "8326:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8326:36:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1804,
																"nodeType": "ExpressionStatement",
																"src": "8326:36:9"
															}
														]
													},
													"id": 1806,
													"nodeType": "IfStatement",
													"src": "7677:692:9",
													"trueBody": {
														"id": 1800,
														"nodeType": "Block",
														"src": "7779:531:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1749,
																				"name": "paymentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "7835:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7851:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7835:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "456e74657220612076616c696420737461626c65636f696e20616d6f756e74",
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7854:33:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d",
																				"typeString": "literal_string \"Enter a valid stablecoin amount\""
																			},
																			"value": "Enter a valid stablecoin amount"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_f6ac058ffe09b3bbdfae8372cf9a39f7a49f0de9dc3487048e08f88e8c7cd81d",
																				"typeString": "literal_string \"Enter a valid stablecoin amount\""
																			}
																		],
																		"id": 1748,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "7827:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7827:61:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1754,
																"nodeType": "ExpressionStatement",
																"src": "7827:61:9"
															},
															{
																"assignments": [
																	1757
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1757,
																		"mutability": "mutable",
																		"name": "stablecoin",
																		"nameLocation": "7905:10:9",
																		"nodeType": "VariableDeclaration",
																		"scope": 1800,
																		"src": "7898:17:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$923",
																			"typeString": "contract IERC20"
																		},
																		"typeName": {
																			"id": 1756,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1755,
																				"name": "IERC20",
																				"nameLocations": [
																					"7898:6:9"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 923,
																				"src": "7898:6:9"
																			},
																			"referencedDeclaration": 923,
																			"src": "7898:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$923",
																				"typeString": "contract IERC20"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1769,
																"initialValue": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																			"typeString": "enum ICO.PaymentMethod"
																		},
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1758,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "7927:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1759,
																				"name": "PaymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "7944:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																					"typeString": "type(enum ICO.PaymentMethod)"
																				}
																			},
																			"id": 1760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7958:4:9",
																			"memberName": "USDT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1106,
																			"src": "7944:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"src": "7927:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"id": 1766,
																				"name": "usdc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1140,
																				"src": "7986:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1765,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 923,
																			"src": "7979:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7979:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$923",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "7927:64:9",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 1763,
																				"name": "usdt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "7972:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1762,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 923,
																			"src": "7965:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7965:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$923",
																			"typeString": "contract IERC20"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$923",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7898:93:9"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1773,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8033:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8037:6:9",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8033:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1777,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "8052:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ICO_$2343",
																								"typeString": "contract ICO"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ICO_$2343",
																								"typeString": "contract ICO"
																							}
																						],
																						"id": 1776,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8044:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1775,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "8044:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1778,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8044:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1779,
																					"name": "paymentAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "8058:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1771,
																					"name": "stablecoin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1757,
																					"src": "8009:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$923",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8020:12:9",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 922,
																				"src": "8009:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8009:63:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "537461626c65636f696e207472616e73666572206661696c6564",
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8073:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																				"typeString": "literal_string \"Stablecoin transfer failed\""
																			},
																			"value": "Stablecoin transfer failed"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c84bd9c4652ced38c134ab47300145495de9d5aff68e1b658cc1dca99fef7eb7",
																				"typeString": "literal_string \"Stablecoin transfer failed\""
																			}
																		],
																		"id": 1770,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "8001:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8001:101:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1783,
																"nodeType": "ExpressionStatement",
																"src": "8001:101:9"
															},
															{
																"expression": {
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1784,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "8169:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1786,
																				"name": "paymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1674,
																				"src": "8204:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																					"typeString": "enum ICO.PaymentMethod"
																				}
																			},
																			{
																				"id": 1787,
																				"name": "paymentAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "8219:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																					"typeString": "enum ICO.PaymentMethod"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1785,
																			"name": "calculateTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1536,
																			"src": "8183:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1108_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (enum ICO.PaymentMethod,uint256) view returns (uint256)"
																			}
																		},
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8183:50:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8169:64:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1790,
																"nodeType": "ExpressionStatement",
																"src": "8169:64:9"
															},
															{
																"expression": {
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1791,
																				"name": "investorPayments",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "8243:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																				}
																			},
																			"id": 1795,
																			"indexExpression": {
																				"expression": {
																					"id": 1792,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "8260:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8264:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "8260:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8243:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$",
																				"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																			}
																		},
																		"id": 1796,
																		"indexExpression": {
																			"id": 1794,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "8272:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8243:43:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 1797,
																		"name": "paymentAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "8290:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8243:60:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1799,
																"nodeType": "ExpressionStatement",
																"src": "8243:60:9"
															}
														]
													}
												},
												"id": 1807,
												"nodeType": "IfStatement",
												"src": "7379:990:9",
												"trueBody": {
													"id": 1738,
													"nodeType": "Block",
													"src": "7420:251:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1713,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7487:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7491:5:9",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "7487:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7499:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7487:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656e6420612076616c696420424e4220616d6f756e74",
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7502:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b",
																			"typeString": "literal_string \"Send a valid BNB amount\""
																		},
																		"value": "Send a valid BNB amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c4187a1289740d8ffce3bb99c104d1df31ca9848a3a5aafe5f4d5ecd5e91ee9b",
																			"typeString": "literal_string \"Send a valid BNB amount\""
																		}
																	],
																	"id": 1712,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7479:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7479:49:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1719,
															"nodeType": "ExpressionStatement",
															"src": "7479:49:9"
														},
														{
															"expression": {
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1720,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "7538:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1722,
																			"name": "paymentMethod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "7573:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		{
																			"expression": {
																				"id": 1723,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7588:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7592:5:9",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "7588:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																				"typeString": "enum ICO.PaymentMethod"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1721,
																		"name": "calculateTokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "7552:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_enum$_PaymentMethod_$1108_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (enum ICO.PaymentMethod,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7552:46:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7538:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1727,
															"nodeType": "ExpressionStatement",
															"src": "7538:60:9"
														},
														{
															"expression": {
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1728,
																			"name": "investorPayments",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "7608:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																			}
																		},
																		"id": 1732,
																		"indexExpression": {
																			"expression": {
																				"id": 1729,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7625:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7629:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7625:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7608:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$",
																			"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																		}
																	},
																	"id": 1733,
																	"indexExpression": {
																		"id": 1731,
																		"name": "paymentMethod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "7637:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																			"typeString": "enum ICO.PaymentMethod"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7608:43:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1734,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7655:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7659:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7655:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7608:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1737,
															"nodeType": "ExpressionStatement",
															"src": "7608:56:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1809,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1706,
																"src": "8382:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8396:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8382:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e20616d6f756e74",
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8399:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															},
															"value": "Invalid token amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58",
																"typeString": "literal_string \"Invalid token amount\""
															}
														],
														"id": 1808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8374:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8374:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "8374:48:9"
											},
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "totalCostInUSD",
														"nameLocation": "8492:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1899,
														"src": "8484:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1815,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8484:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1825,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1817,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "8509:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1818,
																	"name": "sales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "8523:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
																		"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																	}
																},
																"id": 1820,
																"indexExpression": {
																	"id": 1819,
																	"name": "saleCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "8529:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8523:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1104_storage",
																	"typeString": "struct ICO.Sale storage ref"
																}
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8540:13:9",
															"memberName": "tokenPriceUSD",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1099,
															"src": "8523:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8509:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1823,
														"name": "PRECISION_18",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "8556:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8509:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8484:84:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1827,
																	"name": "totalFundsRaisedUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "8592:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1828,
																	"name": "totalCostInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "8614:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8592:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1830,
																"name": "hardCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "8632:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8592:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "48617264206361702072656163686564",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8654:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795",
																"typeString": "literal_string \"Hard cap reached\""
															},
															"value": "Hard cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c07dacc766697a4a5558e08455451d0672777bb5104aed3615bc1964c00cc795",
																"typeString": "literal_string \"Hard cap reached\""
															}
														],
														"id": 1826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8575:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8575:103:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "8575:103:9"
											},
											{
												"expression": {
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1835,
															"name": "contributionsInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "8685:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1838,
														"indexExpression": {
															"expression": {
																"id": 1836,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8704:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8708:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8704:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8685:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1839,
														"name": "totalCostInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "8719:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8685:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "8685:48:9"
											},
											{
												"expression": {
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1842,
														"name": "totalFundsRaisedUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "8739:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1843,
														"name": "totalCostInUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "8762:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8739:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "8739:37:9"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1846,
																"name": "sales",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "8782:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
																	"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																}
															},
															"id": 1848,
															"indexExpression": {
																"id": 1847,
																"name": "saleCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "8788:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8782:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1104_storage",
																"typeString": "struct ICO.Sale storage ref"
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8799:10:9",
														"memberName": "tokensSold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1101,
														"src": "8782:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1850,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "8813:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8782:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "8782:42:9"
											},
											{
												"expression": {
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1853,
														"name": "totalTokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "8830:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1854,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "8849:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8830:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "8830:30:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1857,
															"name": "tokensBoughtByInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "8871:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1860,
														"indexExpression": {
															"expression": {
																"id": 1858,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8894:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8898:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8894:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8871:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8909:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8871:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1871,
												"nodeType": "IfStatement",
												"src": "8867:88:9",
												"trueBody": {
													"id": 1870,
													"nodeType": "Block",
													"src": "8912:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1866,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8937:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8941:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8937:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1863,
																		"name": "investors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "8922:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8932:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8922:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8922:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1869,
															"nodeType": "ExpressionStatement",
															"src": "8922:26:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1872,
															"name": "tokensBoughtByInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "8960:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1875,
														"indexExpression": {
															"expression": {
																"id": 1873,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8983:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8987:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8983:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8960:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1876,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "8998:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8960:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "8960:49:9"
											},
											{
												"expression": {
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1879,
															"name": "paymentMethodForInvestor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "9015:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PaymentMethod_$1108_$",
																"typeString": "mapping(address => enum ICO.PaymentMethod)"
															}
														},
														"id": 1882,
														"indexExpression": {
															"expression": {
																"id": 1880,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9040:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9044:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9040:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9015:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1883,
														"name": "paymentMethod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "9054:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PaymentMethod_$1108",
															"typeString": "enum ICO.PaymentMethod"
														}
													},
													"src": "9015:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "9015:52:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9104:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9108:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9104:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1889,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "9124:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1890,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "9143:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1891,
																	"name": "sales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "9164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
																		"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
																	}
																},
																"id": 1893,
																"indexExpression": {
																	"id": 1892,
																	"name": "saleCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "9170:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9164:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1104_storage",
																	"typeString": "struct ICO.Sale storage ref"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9181:13:9",
															"memberName": "tokenPriceUSD",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1099,
															"src": "9164:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1895,
															"name": "paymentAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "9204:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1896,
															"name": "paymentMethod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "9227:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																"typeString": "enum ICO.PaymentMethod"
															}
														],
														"id": 1886,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "9079:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_PaymentMethod_$1108_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,enum ICO.PaymentMethod)"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9079:167:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1898,
												"nodeType": "EmitStatement",
												"src": "9074:172:9"
											}
										]
									},
									"functionSelector": "940c333e",
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1679,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1678,
												"name": "icoNotFinalized",
												"nameLocations": [
													"7160:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1291,
												"src": "7160:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7160:15:9"
										}
									],
									"name": "buyTokens",
									"nameLocation": "7081:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "paymentMethod",
												"nameLocation": "7105:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "7091:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
													"typeString": "enum ICO.PaymentMethod"
												},
												"typeName": {
													"id": 1673,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1672,
														"name": "PaymentMethod",
														"nameLocations": [
															"7091:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1108,
														"src": "7091:13:9"
													},
													"referencedDeclaration": 1108,
													"src": "7091:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PaymentMethod_$1108",
														"typeString": "enum ICO.PaymentMethod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "7128:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "7120:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7120:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7090:52:9"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7176:0:9"
									},
									"scope": 2343,
									"src": "7072:2177:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "9324:257:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1910,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "9355:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1911,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "9378:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9355:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742066696e616c697a653a20536f667420636170206e6f742072656163686564206f722073616c65206973206f6e676f696e67",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9404:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d",
																"typeString": "literal_string \"Cannot finalize: Soft cap not reached or sale is ongoing\""
															},
															"value": "Cannot finalize: Soft cap not reached or sale is ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7a44f673ae2e9df66fb923331ae1450d004d9638562a05cc232389560dd7c4d",
																"typeString": "literal_string \"Cannot finalize: Soft cap not reached or sale is ongoing\""
															}
														],
														"id": 1909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9334:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9334:138:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "9334:138:9"
											},
											{
												"expression": {
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1916,
														"name": "isICOFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "9479:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9496:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9479:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "9479:21:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1920,
														"name": "_transferFundsToOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "9510:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9510:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "9510:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1924,
															"name": "totalTokensSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "9561:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1923,
														"name": "ICOFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9548:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9548:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "EmitStatement",
												"src": "9543:34:9"
											}
										]
									},
									"functionSelector": "23cc75a8",
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1902,
												"name": "nonReentrant",
												"nameLocations": [
													"9285:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "9285:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9285:12:9"
										},
										{
											"id": 1905,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1904,
												"name": "onlyOwner",
												"nameLocations": [
													"9298:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "9298:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9298:9:9"
										},
										{
											"id": 1907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1906,
												"name": "icoNotFinalized",
												"nameLocations": [
													"9308:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1291,
												"src": "9308:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9308:15:9"
										}
									],
									"name": "finalizeICO",
									"nameLocation": "9264:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9275:2:9"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9324:0:9"
									},
									"scope": 2343,
									"src": "9255:326:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "9628:623:9",
										"statements": [
											{
												"assignments": [
													1932
												],
												"declarations": [
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "usdtBalance",
														"nameLocation": "9642:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "9634:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1931,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9634:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1942,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1939,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9687:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2343",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2343",
																		"typeString": "contract ICO"
																	}
																],
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9679:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1937,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9679:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9679:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1934,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "9663:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1933,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "9656:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9656:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$923",
																"typeString": "contract IERC20"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9669:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 880,
														"src": "9656:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9634:59:9"
											},
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "nativeBalance",
														"nameLocation": "9707:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "9699:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9699:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1950,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1947,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "9731:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICO_$2343",
																	"typeString": "contract ICO"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ICO_$2343",
																	"typeString": "contract ICO"
																}
															],
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9723:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1945,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9723:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9723:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9737:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "9723:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9699:45:9"
											},
											{
												"assignments": [
													1952
												],
												"declarations": [
													{
														"constant": false,
														"id": 1952,
														"mutability": "mutable",
														"name": "usdcBalance",
														"nameLocation": "9758:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "9750:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9750:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1959,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9803:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICO_$2343",
																		"typeString": "contract ICO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICO_$2343",
																		"typeString": "contract ICO"
																	}
																],
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9795:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1957,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9795:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9795:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1954,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "9779:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1953,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "9772:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9772:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$923",
																"typeString": "contract IERC20"
															}
														},
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9785:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 880,
														"src": "9772:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9772:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9750:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1964,
																		"name": "nativeBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1944,
																		"src": "9823:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9838:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9823:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1967,
																		"name": "usdtBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "9843:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9855:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9843:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9823:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1971,
																	"name": "usdcBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "9860:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9874:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9860:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9823:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62616c616e636573206d757374206e6f74206265205a65726f",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9877:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d053ad03a9d5a7b9f89b9a631bd1e95f9e841514710f4ade23f14a752fab0c7",
																"typeString": "literal_string \"balances must not be Zero\""
															},
															"value": "balances must not be Zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d053ad03a9d5a7b9f89b9a631bd1e95f9e841514710f4ade23f14a752fab0c7",
																"typeString": "literal_string \"balances must not be Zero\""
															}
														],
														"id": 1963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9815:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9815:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "9815:90:9"
											},
											{
												"assignments": [
													1979,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9931:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "9926:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1978,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9926:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1990,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9988:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1982,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "9952:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9952:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9944:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1980,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9944:8:9",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9944:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9961:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "9944:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1986,
																"name": "nativeBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "9973:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9944:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9944:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9925:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1992,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "10009:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10018:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10001:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10001:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "10001:35:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2001,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "10095:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10095:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2003,
																	"name": "usdtBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "10104:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1998,
																			"name": "usdt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "10080:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1997,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "10073:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10073:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$923",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10086:8:9",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 890,
																"src": "10073:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10073:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10118:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 1996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10065:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10065:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "10065:76:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2013,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "10197:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10197:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2015,
																	"name": "usdcBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "10206:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2010,
																			"name": "usdc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1140,
																			"src": "10182:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2009,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "10175:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10175:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$923",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10188:8:9",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 890,
																"src": "10175:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10175:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534443207472616e73666572206661696c6564",
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10220:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815",
																"typeString": "literal_string \"USDC transfer failed\""
															},
															"value": "USDC transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_032fb3428477d66798bdf7801f58a252d723dc1362b9dfac5726f85f81cca815",
																"typeString": "literal_string \"USDC transfer failed\""
															}
														],
														"id": 2008,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10167:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10167:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "10167:76:9"
											}
										]
									},
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFundsToOwner",
									"nameLocation": "9596:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9617:2:9"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9628:0:9"
									},
									"scope": 2343,
									"src": "9587:664:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "10330:674:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10344:19:9",
															"subExpression": {
																"id": 2031,
																"name": "isTokensAirdropped",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "10345:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f7020616c726561647920636f6d706c65746564",
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10365:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a",
																"typeString": "literal_string \"Airdrop already completed\""
															},
															"value": "Airdrop already completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35194372afc15163c58aa5af5530ba0e7f2576a9d985e6f8d166066860d6966a",
																"typeString": "literal_string \"Airdrop already completed\""
															}
														],
														"id": 2030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10336:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10336:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "10336:57:9"
											},
											{
												"assignments": [
													2037
												],
												"declarations": [
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "investorLength",
														"nameLocation": "10412:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "10404:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10404:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"expression": {
														"id": 2038,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "10429:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10439:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "10429:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10404:41:9"
											},
											{
												"body": {
													"id": 2088,
													"nodeType": "Block",
													"src": "10496:474:9",
													"statements": [
														{
															"assignments": [
																2052
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2052,
																	"mutability": "mutable",
																	"name": "investor",
																	"nameLocation": "10514:8:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2088,
																	"src": "10506:16:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2051,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10506:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2056,
															"initialValue": {
																"baseExpression": {
																	"id": 2053,
																	"name": "investors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "10525:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2055,
																"indexExpression": {
																	"id": 2054,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "10535:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10525:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10506:31:9"
														},
														{
															"assignments": [
																2058
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2058,
																	"mutability": "mutable",
																	"name": "tokensBought",
																	"nameLocation": "10555:12:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2088,
																	"src": "10547:20:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2057,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10547:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2062,
															"initialValue": {
																"baseExpression": {
																	"id": 2059,
																	"name": "tokensBoughtByInvestor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "10570:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2061,
																"indexExpression": {
																	"id": 2060,
																	"name": "investor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "10593:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10570:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10547:55:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2063,
																	"name": "tokensBought",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "10617:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10632:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10617:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2087,
															"nodeType": "IfStatement",
															"src": "10613:351:9",
															"trueBody": {
																"id": 2086,
																"nodeType": "Block",
																"src": "10635:329:9",
																"statements": [
																	{
																		"assignments": [
																			2067
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2067,
																				"mutability": "mutable",
																				"name": "success",
																				"nameLocation": "10722:7:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2086,
																				"src": "10717:12:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2066,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "10717:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2075,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2070,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 113,
																						"src": "10751:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10751:7:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2072,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2052,
																					"src": "10760:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2073,
																					"name": "tokensBought",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2058,
																					"src": "10770:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2068,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1111,
																					"src": "10732:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_icotoken_$1074",
																						"typeString": "contract icotoken"
																					}
																				},
																				"id": 2069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10738:12:9",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 528,
																				"src": "10732:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10732:51:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10717:66:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2077,
																					"name": "success",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "10805:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546f6b656e207472616e73666572206661696c6564",
																					"id": 2078,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10814:23:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																						"typeString": "literal_string \"Token transfer failed\""
																					},
																					"value": "Token transfer failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																						"typeString": "literal_string \"Token transfer failed\""
																					}
																				],
																				"id": 2076,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "10797:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10797:41:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2080,
																		"nodeType": "ExpressionStatement",
																		"src": "10797:41:9"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2082,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2052,
																					"src": "10930:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2083,
																					"name": "tokensBought",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2058,
																					"src": "10940:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2081,
																				"name": "TokenAirdropped",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "10914:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10914:39:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2085,
																		"nodeType": "EmitStatement",
																		"src": "10909:44:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2045,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "10471:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2046,
														"name": "investorLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "10475:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10471:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2089,
												"initializationExpression": {
													"assignments": [
														2042
													],
													"declarations": [
														{
															"constant": false,
															"id": 2042,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10464:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2089,
															"src": "10456:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2041,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10456:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2044,
													"initialValue": {
														"hexValue": "30",
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10468:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10456:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10491:3:9",
														"subExpression": {
															"id": 2048,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "10491:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2050,
													"nodeType": "ExpressionStatement",
													"src": "10491:3:9"
												},
												"nodeType": "ForStatement",
												"src": "10451:519:9"
											},
											{
												"expression": {
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2090,
														"name": "isTokensAirdropped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "10976:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10997:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10976:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "10976:25:9"
											}
										]
									},
									"functionSelector": "91152c5c",
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2023,
												"name": "nonReentrant",
												"nameLocations": [
													"10291:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "10291:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10291:12:9"
										},
										{
											"id": 2026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2025,
												"name": "onlyOwner",
												"nameLocations": [
													"10304:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "10304:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10304:9:9"
										},
										{
											"id": 2028,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2027,
												"name": "icoNotFinalized",
												"nameLocations": [
													"10314:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1291,
												"src": "10314:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10314:15:9"
										}
									],
									"name": "airdropTokens",
									"nameLocation": "10266:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10279:2:9"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10330:0:9"
									},
									"scope": 2343,
									"src": "10257:747:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "11085:1467:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2105,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "11099:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11105:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "11099:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2107,
																	"name": "getLatestSaleEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "11117:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11117:22:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11099:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206f6e676f696e67",
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11141:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															},
															"value": "Sale ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52e3d128a4ea4439173e3f4b78f0e12548c2c4449a80c4b2fbefb1fd3e6a7665",
																"typeString": "literal_string \"Sale ongoing\""
															}
														],
														"id": 2104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11091:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11091:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "11091:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2114,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "11170:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2115,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "11192:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11170:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f6674206361702072656163686564",
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11207:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80",
																"typeString": "literal_string \"Soft cap reached\""
															},
															"value": "Soft cap reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c68e13a7a3bf736cdb65f14ebef38f840872b490e156aead879b05f23b99d80",
																"typeString": "literal_string \"Soft cap reached\""
															}
														],
														"id": 2113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11162:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11162:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "11162:64:9"
											},
											{
												"assignments": [
													2121
												],
												"declarations": [
													{
														"constant": false,
														"id": 2121,
														"mutability": "mutable",
														"name": "investorLength",
														"nameLocation": "11241:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 2256,
														"src": "11233:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11233:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2124,
												"initialValue": {
													"expression": {
														"id": 2122,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "11258:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11268:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11258:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11233:41:9"
											},
											{
												"body": {
													"id": 2250,
													"nodeType": "Block",
													"src": "11325:1198:9",
													"statements": [
														{
															"assignments": [
																2136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2136,
																	"mutability": "mutable",
																	"name": "investor",
																	"nameLocation": "11343:8:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2250,
																	"src": "11335:16:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2135,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11335:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2140,
															"initialValue": {
																"baseExpression": {
																	"id": 2137,
																	"name": "investors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "11354:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2139,
																"indexExpression": {
																	"id": 2138,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "11364:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11354:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11335:31:9"
														},
														{
															"body": {
																"id": 2248,
																"nodeType": "Block",
																"src": "11463:1054:9",
																"statements": [
																	{
																		"assignments": [
																			2153
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2153,
																				"mutability": "mutable",
																				"name": "paymentMethod",
																				"nameLocation": "11492:13:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2248,
																				"src": "11478:27:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																					"typeString": "enum ICO.PaymentMethod"
																				},
																				"typeName": {
																					"id": 2152,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2151,
																						"name": "PaymentMethod",
																						"nameLocations": [
																							"11478:13:9"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1108,
																						"src": "11478:13:9"
																					},
																					"referencedDeclaration": 1108,
																					"src": "11478:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																						"typeString": "enum ICO.PaymentMethod"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2157,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2155,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2142,
																					"src": "11522:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 2154,
																				"name": "PaymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "11508:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																					"typeString": "type(enum ICO.PaymentMethod)"
																				}
																			},
																			"id": 2156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11508:16:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																				"typeString": "enum ICO.PaymentMethod"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11478:46:9"
																	},
																	{
																		"assignments": [
																			2159
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2159,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "11546:6:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2248,
																				"src": "11538:14:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2158,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11538:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2165,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2160,
																					"name": "investorPayments",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "11555:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																					}
																				},
																				"id": 2162,
																				"indexExpression": {
																					"id": 2161,
																					"name": "investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2136,
																					"src": "11572:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11555:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$",
																					"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																				}
																			},
																			"id": 2164,
																			"indexExpression": {
																				"id": 2163,
																				"name": "paymentMethod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2153,
																				"src": "11582:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																					"typeString": "enum ICO.PaymentMethod"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11555:41:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11538:58:9"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2166,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2159,
																				"src": "11615:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11624:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "11615:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2247,
																		"nodeType": "IfStatement",
																		"src": "11611:896:9",
																		"trueBody": {
																			"id": 2246,
																			"nodeType": "Block",
																			"src": "11627:880:9",
																			"statements": [
																				{
																					"expression": {
																						"id": 2175,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 2169,
																									"name": "investorPayments",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1170,
																									"src": "11645:16:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(enum ICO.PaymentMethod => uint256))"
																									}
																								},
																								"id": 2172,
																								"indexExpression": {
																									"id": 2170,
																									"name": "investor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2136,
																									"src": "11662:8:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "11645:26:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_enum$_PaymentMethod_$1108_$_t_uint256_$",
																									"typeString": "mapping(enum ICO.PaymentMethod => uint256)"
																								}
																							},
																							"id": 2173,
																							"indexExpression": {
																								"id": 2171,
																								"name": "paymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2153,
																								"src": "11672:13:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "11645:41:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 2174,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11689:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "11645:45:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2176,
																					"nodeType": "ExpressionStatement",
																					"src": "11645:45:9"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																							"typeString": "enum ICO.PaymentMethod"
																						},
																						"id": 2180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2177,
																							"name": "paymentMethod",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2153,
																							"src": "11712:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																								"typeString": "enum ICO.PaymentMethod"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 2178,
																								"name": "PaymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1108,
																								"src": "11729:13:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																									"typeString": "type(enum ICO.PaymentMethod)"
																								}
																							},
																							"id": 2179,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "11743:3:9",
																							"memberName": "BNB",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1105,
																							"src": "11729:17:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																								"typeString": "enum ICO.PaymentMethod"
																							}
																						},
																						"src": "11712:34:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"id": 2207,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																									"typeString": "enum ICO.PaymentMethod"
																								},
																								"id": 2202,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2199,
																									"name": "paymentMethod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2153,
																									"src": "11912:13:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"expression": {
																										"id": 2200,
																										"name": "PaymentMethod",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1108,
																										"src": "11929:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																											"typeString": "type(enum ICO.PaymentMethod)"
																										}
																									},
																									"id": 2201,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "11943:4:9",
																									"memberName": "USDT",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1106,
																									"src": "11929:18:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"src": "11912:35:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "||",
																							"rightExpression": {
																								"commonType": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																									"typeString": "enum ICO.PaymentMethod"
																								},
																								"id": 2206,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2203,
																									"name": "paymentMethod",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2153,
																									"src": "11951:13:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"expression": {
																										"id": 2204,
																										"name": "PaymentMethod",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1108,
																										"src": "11968:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																											"typeString": "type(enum ICO.PaymentMethod)"
																										}
																									},
																									"id": 2205,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberLocation": "11982:4:9",
																									"memberName": "USDC",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1107,
																									"src": "11968:18:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																										"typeString": "enum ICO.PaymentMethod"
																									}
																								},
																								"src": "11951:35:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"src": "11912:74:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"id": 2237,
																							"nodeType": "Block",
																							"src": "12334:88:9",
																							"statements": [
																								{
																									"expression": {
																										"arguments": [
																											{
																												"hexValue": "556e737570706f72746564207061796d656e74206d6574686f6420666f7220726566756e64",
																												"id": 2234,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "string",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "12363:39:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da",
																													"typeString": "literal_string \"Unsupported payment method for refund\""
																												},
																												"value": "Unsupported payment method for refund"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_stringliteral_e1a05a85d6c11679f33a730fbeebefa1f4b9de0998aad7aecca4e9ec70fa59da",
																													"typeString": "literal_string \"Unsupported payment method for refund\""
																												}
																											],
																											"id": 2233,
																											"name": "revert",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [
																												4294967277,
																												4294967277
																											],
																											"referencedDeclaration": 4294967277,
																											"src": "12356:6:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																												"typeString": "function (string memory) pure"
																											}
																										},
																										"id": 2235,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "12356:47:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_tuple$__$",
																											"typeString": "tuple()"
																										}
																									},
																									"id": 2236,
																									"nodeType": "ExpressionStatement",
																									"src": "12356:47:9"
																								}
																							]
																						},
																						"id": 2238,
																						"nodeType": "IfStatement",
																						"src": "11908:514:9",
																						"trueBody": {
																							"id": 2232,
																							"nodeType": "Block",
																							"src": "11988:340:9",
																							"statements": [
																								{
																									"assignments": [
																										2210
																									],
																									"declarations": [
																										{
																											"constant": false,
																											"id": 2210,
																											"mutability": "mutable",
																											"name": "stablecoin",
																											"nameLocation": "12017:10:9",
																											"nodeType": "VariableDeclaration",
																											"scope": 2232,
																											"src": "12010:17:9",
																											"stateVariable": false,
																											"storageLocation": "default",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$923",
																												"typeString": "contract IERC20"
																											},
																											"typeName": {
																												"id": 2209,
																												"nodeType": "UserDefinedTypeName",
																												"pathNode": {
																													"id": 2208,
																													"name": "IERC20",
																													"nameLocations": [
																														"12010:6:9"
																													],
																													"nodeType": "IdentifierPath",
																													"referencedDeclaration": 923,
																													"src": "12010:6:9"
																												},
																												"referencedDeclaration": 923,
																												"src": "12010:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_contract$_IERC20_$923",
																													"typeString": "contract IERC20"
																												}
																											},
																											"visibility": "internal"
																										}
																									],
																									"id": 2222,
																									"initialValue": {
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																												"typeString": "enum ICO.PaymentMethod"
																											},
																											"id": 2214,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 2211,
																												"name": "paymentMethod",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2153,
																												"src": "12030:13:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																													"typeString": "enum ICO.PaymentMethod"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "==",
																											"rightExpression": {
																												"expression": {
																													"id": 2212,
																													"name": "PaymentMethod",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1108,
																													"src": "12047:13:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_enum$_PaymentMethod_$1108_$",
																														"typeString": "type(enum ICO.PaymentMethod)"
																													}
																												},
																												"id": 2213,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"memberLocation": "12061:4:9",
																												"memberName": "USDT",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1106,
																												"src": "12047:18:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																													"typeString": "enum ICO.PaymentMethod"
																												}
																											},
																											"src": "12030:35:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"falseExpression": {
																											"arguments": [
																												{
																													"id": 2219,
																													"name": "usdc",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1140,
																													"src": "12138:4:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 2218,
																												"name": "IERC20",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 923,
																												"src": "12131:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																													"typeString": "type(contract IERC20)"
																												}
																											},
																											"id": 2220,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "12131:12:9",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$923",
																												"typeString": "contract IERC20"
																											}
																										},
																										"id": 2221,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "Conditional",
																										"src": "12030:113:9",
																										"trueExpression": {
																											"arguments": [
																												{
																													"id": 2216,
																													"name": "usdt",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1138,
																													"src": "12099:4:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 2215,
																												"name": "IERC20",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 923,
																												"src": "12092:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_contract$_IERC20_$923_$",
																													"typeString": "type(contract IERC20)"
																												}
																											},
																											"id": 2217,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "typeConversion",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "12092:12:9",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_IERC20_$923",
																												"typeString": "contract IERC20"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IERC20_$923",
																											"typeString": "contract IERC20"
																										}
																									},
																									"nodeType": "VariableDeclarationStatement",
																									"src": "12010:133:9"
																								},
																								{
																									"expression": {
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"id": 2226,
																														"name": "investor",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2136,
																														"src": "12218:8:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"id": 2227,
																														"name": "amount",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2159,
																														"src": "12228:6:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"id": 2224,
																														"name": "stablecoin",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2210,
																														"src": "12198:10:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_contract$_IERC20_$923",
																															"typeString": "contract IERC20"
																														}
																													},
																													"id": 2225,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "12209:8:9",
																													"memberName": "transfer",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 890,
																													"src": "12198:19:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																														"typeString": "function (address,uint256) external returns (bool)"
																													}
																												},
																												"id": 2228,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "12198:37:9",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											{
																												"hexValue": "537461626c65636f696e20726566756e64206661696c6564",
																												"id": 2229,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "string",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "12261:26:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726",
																													"typeString": "literal_string \"Stablecoin refund failed\""
																												},
																												"value": "Stablecoin refund failed"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												},
																												{
																													"typeIdentifier": "t_stringliteral_4c76e179fd3981278de294ff97a7ccb030d7577d0e7f55ac3f87e02e3abaa726",
																													"typeString": "literal_string \"Stablecoin refund failed\""
																												}
																											],
																											"id": 2223,
																											"name": "require",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [
																												4294967278,
																												4294967278,
																												4294967278
																											],
																											"referencedDeclaration": 4294967278,
																											"src": "12165:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																												"typeString": "function (bool,string memory) pure"
																											}
																										},
																										"id": 2230,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "12165:144:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_tuple$__$",
																											"typeString": "tuple()"
																										}
																									},
																									"id": 2231,
																									"nodeType": "ExpressionStatement",
																									"src": "12165:144:9"
																								}
																							]
																						}
																					},
																					"id": 2239,
																					"nodeType": "IfStatement",
																					"src": "11708:714:9",
																					"trueBody": {
																						"id": 2198,
																						"nodeType": "Block",
																						"src": "11748:154:9",
																						"statements": [
																							{
																								"assignments": [
																									2182,
																									null
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 2182,
																										"mutability": "mutable",
																										"name": "sent",
																										"nameLocation": "11776:4:9",
																										"nodeType": "VariableDeclaration",
																										"scope": 2198,
																										"src": "11771:9:9",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"typeName": {
																											"id": 2181,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "11771:4:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"visibility": "internal"
																									},
																									null
																								],
																								"id": 2192,
																								"initialValue": {
																									"arguments": [
																										{
																											"hexValue": "",
																											"id": 2190,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "11824:2:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																												"typeString": "literal_string \"\""
																											},
																											"value": ""
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																												"typeString": "literal_string \"\""
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																													"typeString": "literal_string \"\""
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"id": 2185,
																														"name": "investor",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2136,
																														"src": "11794:8:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													],
																													"id": 2184,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"nodeType": "ElementaryTypeNameExpression",
																													"src": "11786:8:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_address_payable_$",
																														"typeString": "type(address payable)"
																													},
																													"typeName": {
																														"id": 2183,
																														"name": "address",
																														"nodeType": "ElementaryTypeName",
																														"src": "11786:8:9",
																														"stateMutability": "payable",
																														"typeDescriptions": {}
																													}
																												},
																												"id": 2186,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "typeConversion",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "11786:17:9",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_address_payable",
																													"typeString": "address payable"
																												}
																											},
																											"id": 2187,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "11804:4:9",
																											"memberName": "call",
																											"nodeType": "MemberAccess",
																											"src": "11786:22:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																												"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																											}
																										},
																										"id": 2189,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"names": [
																											"value"
																										],
																										"nodeType": "FunctionCallOptions",
																										"options": [
																											{
																												"id": 2188,
																												"name": "amount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2159,
																												"src": "11816:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"src": "11786:37:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																											"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																										}
																									},
																									"id": 2191,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "11786:41:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																										"typeString": "tuple(bool,bytes memory)"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "11770:57:9"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"id": 2194,
																											"name": "sent",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2182,
																											"src": "11857:4:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										{
																											"hexValue": "424e4220726566756e64206661696c6564",
																											"id": 2195,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "11863:19:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0",
																												"typeString": "literal_string \"BNB refund failed\""
																											},
																											"value": "BNB refund failed"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											},
																											{
																												"typeIdentifier": "t_stringliteral_9061bb5d1762fde4c9d1190b8ce0bd989de0debb196be3c053155f36b52a6ce0",
																												"typeString": "literal_string \"BNB refund failed\""
																											}
																										],
																										"id": 2193,
																										"name": "require",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [
																											4294967278,
																											4294967278,
																											4294967278
																										],
																										"referencedDeclaration": 4294967278,
																										"src": "11849:7:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																											"typeString": "function (bool,string memory) pure"
																										}
																									},
																									"id": 2196,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "11849:34:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 2197,
																								"nodeType": "ExpressionStatement",
																								"src": "11849:34:9"
																							}
																						]
																					}
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 2241,
																								"name": "investor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2136,
																								"src": "12460:8:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2242,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2159,
																								"src": "12470:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2243,
																								"name": "paymentMethod",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2153,
																								"src": "12478:13:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_enum$_PaymentMethod_$1108",
																									"typeString": "enum ICO.PaymentMethod"
																								}
																							],
																							"id": 2240,
																							"name": "RefundInitiated",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1187,
																							"src": "12444:15:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_PaymentMethod_$1108_$returns$__$",
																								"typeString": "function (address,uint256,enum ICO.PaymentMethod)"
																							}
																						},
																						"id": 2244,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12444:48:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2245,
																					"nodeType": "EmitStatement",
																					"src": "12439:53:9"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2145,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2142,
																	"src": "11451:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11455:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "11451:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2249,
															"initializationExpression": {
																"assignments": [
																	2142
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2142,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "11444:1:9",
																		"nodeType": "VariableDeclaration",
																		"scope": 2249,
																		"src": "11438:7:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"typeName": {
																			"id": 2141,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "11438:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2144,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11448:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "11438:11:9"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "11458:3:9",
																	"subExpression": {
																		"id": 2148,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "11458:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 2150,
																"nodeType": "ExpressionStatement",
																"src": "11458:3:9"
															},
															"nodeType": "ForStatement",
															"src": "11433:1084:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2129,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "11300:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2130,
														"name": "investorLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "11304:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11300:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2251,
												"initializationExpression": {
													"assignments": [
														2126
													],
													"declarations": [
														{
															"constant": false,
															"id": 2126,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11293:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2251,
															"src": "11285:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2125,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11285:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2128,
													"initialValue": {
														"hexValue": "30",
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11297:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11285:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11320:3:9",
														"subExpression": {
															"id": 2132,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "11320:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2134,
													"nodeType": "ExpressionStatement",
													"src": "11320:3:9"
												},
												"nodeType": "ForStatement",
												"src": "11280:1243:9"
											},
											{
												"expression": {
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2252,
														"name": "isICOFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "12528:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12545:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12528:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "12528:21:9"
											}
										]
									},
									"functionSelector": "7fb12001",
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2097,
												"name": "nonReentrant",
												"nameLocations": [
													"11045:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "11045:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11045:12:9"
										},
										{
											"id": 2100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2099,
												"name": "onlyOwner",
												"nameLocations": [
													"11058:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "11058:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11058:9:9"
										},
										{
											"id": 2102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2101,
												"name": "icoNotFinalized",
												"nameLocations": [
													"11068:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1291,
												"src": "11068:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11068:15:9"
										}
									],
									"name": "initiateRefund",
									"nameLocation": "11019:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11033:2:9"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11085:0:9"
									},
									"scope": 2343,
									"src": "11010:1542:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "12581:51:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420424e42207472616e7366657273206e6f7420616c6c6f776564",
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12594:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119",
																"typeString": "literal_string \"Direct BNB transfers not allowed\""
															},
															"value": "Direct BNB transfers not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_17550aa7e27a420bf678ad118b2de30f8f99747e4dbc150a39e97cdeb8fb8119",
																"typeString": "literal_string \"Direct BNB transfers not allowed\""
															}
														],
														"id": 2260,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "12587:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12587:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2263,
												"nodeType": "ExpressionStatement",
												"src": "12587:42:9"
											}
										]
									},
									"id": 2265,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12561:2:9"
									},
									"returnParameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12581:0:9"
									},
									"scope": 2343,
									"src": "12554:78:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "12697:33:9",
										"statements": [
											{
												"expression": {
													"id": 2270,
													"name": "saleCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1117,
													"src": "12714:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2269,
												"id": 2271,
												"nodeType": "Return",
												"src": "12707:16:9"
											}
										]
									},
									"functionSelector": "212ea247",
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentSaleId",
									"nameLocation": "12648:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12664:2:9"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "12688:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12688:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12687:9:9"
									},
									"scope": 2343,
									"src": "12639:91:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "12800:48:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2278,
															"name": "sales",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "12817:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
																"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
															}
														},
														"id": 2280,
														"indexExpression": {
															"id": 2279,
															"name": "saleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "12823:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12817:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_storage",
															"typeString": "struct ICO.Sale storage ref"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12834:7:9",
													"memberName": "endTime",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1097,
													"src": "12817:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2277,
												"id": 2282,
												"nodeType": "Return",
												"src": "12810:31:9"
											}
										]
									},
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestSaleEndTime",
									"nameLocation": "12745:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12765:2:9"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "12791:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12790:9:9"
									},
									"scope": 2343,
									"src": "12736:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "12987:99:9",
										"statements": [
											{
												"assignments": [
													2295
												],
												"declarations": [
													{
														"constant": false,
														"id": 2295,
														"mutability": "mutable",
														"name": "sale",
														"nameLocation": "13009:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "12997:16:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Sale_$1104_memory_ptr",
															"typeString": "struct ICO.Sale"
														},
														"typeName": {
															"id": 2294,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2293,
																"name": "Sale",
																"nameLocations": [
																	"12997:4:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1104,
																"src": "12997:4:9"
															},
															"referencedDeclaration": 1104,
															"src": "12997:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Sale_$1104_storage_ptr",
																"typeString": "struct ICO.Sale"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2299,
												"initialValue": {
													"baseExpression": {
														"id": 2296,
														"name": "sales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13016:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Sale_$1104_storage_$",
															"typeString": "mapping(uint256 => struct ICO.Sale storage ref)"
														}
													},
													"id": 2298,
													"indexExpression": {
														"id": 2297,
														"name": "saleCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "13022:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13016:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Sale_$1104_storage",
														"typeString": "struct ICO.Sale storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12997:35:9"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 2300,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "13050:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1104_memory_ptr",
																	"typeString": "struct ICO.Sale memory"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13055:9:9",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1095,
															"src": "13050:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2302,
																"name": "sale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "13066:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Sale_$1104_memory_ptr",
																	"typeString": "struct ICO.Sale memory"
																}
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13071:7:9",
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "13066:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2304,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13049:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2292,
												"id": 2305,
												"nodeType": "Return",
												"src": "13042:37:9"
											}
										]
									},
									"functionSelector": "c211e1f9",
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSaleStartEndTime",
									"nameLocation": "12863:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "_saleId",
												"nameLocation": "12891:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "12883:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12883:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12882:17:9"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "12953:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "12945:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12945:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "12973:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "12965:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12965:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12944:38:9"
									},
									"scope": 2343,
									"src": "12854:232:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2317,
										"nodeType": "Block",
										"src": "13148:61:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2312,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "13166:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2313,
																"name": "softCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "13189:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13166:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2315,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13165:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2311,
												"id": 2316,
												"nodeType": "Return",
												"src": "13158:44:9"
											}
										]
									},
									"functionSelector": "06e4d36f",
									"id": 2318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSoftCapReached",
									"nameLocation": "13101:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13118:2:9"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "13142:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13142:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13141:6:9"
									},
									"scope": 2343,
									"src": "13092:117:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2328,
										"nodeType": "Block",
										"src": "13271:61:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2323,
																"name": "totalFundsRaisedUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "13289:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2324,
																"name": "hardCapInUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "13312:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13289:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2326,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13288:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2322,
												"id": 2327,
												"nodeType": "Return",
												"src": "13281:44:9"
											}
										]
									},
									"functionSelector": "91d8730a",
									"id": 2329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHardCapReached",
									"nameLocation": "13224:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13241:2:9"
									},
									"returnParameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "13265:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13265:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13264:6:9"
									},
									"scope": 2343,
									"src": "13215:117:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "13410:79:9",
										"statements": [
											{
												"expression": {
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2334,
														"name": "investorCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "13420:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2335,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "13436:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13446:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13436:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13420:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2338,
												"nodeType": "ExpressionStatement",
												"src": "13420:32:9"
											},
											{
												"expression": {
													"id": 2339,
													"name": "investorCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2332,
													"src": "13469:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2333,
												"id": 2340,
												"nodeType": "Return",
												"src": "13462:20:9"
											}
										]
									},
									"functionSelector": "960524e3",
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInvestorCount",
									"nameLocation": "13347:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13363:2:9"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "investorCount",
												"nameLocation": "13395:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "13387:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13387:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13386:23:9"
									},
									"scope": 2343,
									"src": "13338:151:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2344,
							"src": "270:13221:9",
							"usedErrors": [
								59,
								64,
								993
							],
							"usedEvents": [
								70,
								1174,
								1178,
								1187,
								1193,
								1208,
								1218
							]
						}
					],
					"src": "32:13459:9"
				},
				"id": 9
			}
		}
	}
}